{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  _s();\n\n  const [freeTimes, setFreeTimes] = useState(); // const [outputReady, setOutputReady] = useState(false)\n\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  const fetchFreeTimes = () => {\n    // Check if endDate is set, if not set to startDate\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString(); // Format end date to 8 pm\n\n    let end = \"\";\n\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n\n    end.setHours(23);\n    end.setMinutes(59);\n    end.setSeconds(0);\n    end = end.toISOString();\n    console.log(start);\n    console.log(end); // Build request body\n\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\"; // Create calendars object\n\n    let cals = [];\n\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n    let num_days = \"\";\n\n    if (props.endDate === null) {\n      console.log(\"we here\");\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      console.log(\"naw we here\");\n      num_days = props.endDate.getDate() - props.startDate.getDate();\n      console.log(num_days);\n    }\n\n    console.log(num_days);\n    num_days = num_days + 1; // for each day in between input dates, add event\n    // day1 8am 830am, 8pm to day2 8am\n    // for (let x = 0; x < num_days; x++) {\n    //   let day = props.startDate.getDate();\n    //   let curDateDay = day + x;\n    //   let inputDate = props.startDate;\n    //   //appendPre(curDateDay)\n    //   let morningBusyStart = new Date();\n    //   morningBusyStart.setDate(curDateDay);\n    //   morningBusyStart.setHours(8);\n    //   morningBusyStart.setMinutes(0);\n    //   morningBusyStart.setSeconds(0);\n    //   morningBusyStart.setFullYear(inputDate.getFullYear());\n    //   let morningBusyEnd = new Date();\n    //   morningBusyEnd.setDate(curDateDay);\n    //   morningBusyEnd.setHours(8);\n    //   morningBusyEnd.setMinutes(30);\n    //   morningBusyEnd.setSeconds(0);\n    //   morningBusyEnd.setFullYear(inputDate.getFullYear());\n    //   let nightBusyStart = new Date();\n    //   nightBusyStart.setDate(curDateDay);\n    //   nightBusyStart.setHours(20);\n    //   nightBusyStart.setMinutes(0);\n    //   nightBusyStart.setSeconds(0);\n    //   nightBusyStart.setFullYear(inputDate.getFullYear());\n    //   let nightBusyEnd = new Date();\n    //   nightBusyEnd.setDate(curDateDay);\n    //   nightBusyEnd.setHours(20);\n    //   nightBusyEnd.setMinutes(30);\n    //   nightBusyEnd.setSeconds(0);\n    //   nightBusyEnd.setFullYear(inputDate.getFullYear());\n    //   // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n    //   // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n    //   var morningBusyStart_formatted = { date: morningBusyStart };\n    //   var morningBusyEnd_formatted = { date: morningBusyEnd };\n    //   var nightBusyStart_formatted = { date: nightBusyStart };\n    //   var nightBusyEnd_formatted = { date: nightBusyEnd };\n    //   allStartTimes.push(morningBusyStart_formatted);\n    //   allEndTimes.push(morningBusyEnd_formatted);\n    //   allStartTimes.push(nightBusyStart_formatted);\n    //   allEndTimes.push(nightBusyEnd_formatted);\n    //   let morningBlock = [morningBusyStart, morningBusyEnd];\n    //   let afternoonBlock = [nightBusyStart, nightBusyEnd];\n    //   busyBlocksToAdd.push(morningBlock);\n    //   busyBlocksToAdd.push(afternoonBlock);\n    // }\n    // console.log(\"busy blocks to add\");\n    // console.log(busyBlocksToAdd);\n\n    return gapi.client.calendar.freebusy.query(request).then(function (response) {\n      let allTimes = [];\n\n      for (let k = 0; k < props.selectedCalendars.length; k++) {\n        var curCal = props.selectedCalendars[k];\n        var busyTimes = response.result.calendars[curCal].busy;\n\n        for (let i = 0; i < busyTimes.length; i++) {\n          var busyBlock = busyTimes[i];\n          console.log(\"Busy block for \" + curCal, busyBlock);\n          var startTime = busyBlock.start;\n          var endTime = busyBlock.end;\n          var data = {\n            date: startTime\n          };\n          var data2 = {\n            date: endTime\n          };\n          allStartTimes.push(data);\n          allEndTimes.push(data2);\n          let test = [new Date(startTime), new Date(endTime)];\n          allTimes.push(test);\n        }\n      } // console.log(allStartTimes);\n      // console.log(\"all end times \");\n      // console.log(allEndTimes);\n      // console.log(\"other all times\");\n      // console.log(allTimes);\n      // consolidateAllBusyTimes();\n\n\n      console.log(\"all times\");\n      console.log(allTimes);\n      const merged = newfunc(allTimes);\n      console.log(\"merged is\");\n      console.log(merged);\n      finishUp2(merged);\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  const newfunc = times => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    const merged = [];\n\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n        var comp = Math.max(left, right);\n        console.log(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n      const temp = new Date(merged[i][0]).toLocaleString();\n      const temp2 = new Date(merged[i][1]).toLocaleString();\n      console.log(temp);\n      console.log(temp2);\n      console.log(\"break\");\n    }\n\n    return merged;\n  };\n\n  const unique_days2 = [];\n\n  const finishUp2 = finalArr => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n\n      if (unique_days2.includes(String(xx)) === false) {\n        unique_days2.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n    const motherToEndAll = [];\n\n    for (let i = 0; i < unique_days2.length; i++) {\n      const thisDay = unique_days2[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n      const thisDayTimes = [];\n\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = new Date(dayObj[0]);\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  const unique_days = [];\n\n  const finishUp = finalArr => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n\n      if (unique_days.includes(String(xx)) === false) {\n        unique_days.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n    const motherToEndAll = [];\n\n    for (let i = 0; i < unique_days.length; i++) {\n      const thisDay = unique_days[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n      const thisDayTimes = [];\n\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = new Date(dayObj[0]);\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  function removeTime() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return new Date(date.toDateString());\n  }\n\n  const getDate = inputDate => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [props.outputReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: freeTimes.map(test => {\n        console.log(\"yoyoyoyo\");\n        const thisDate = test[0];\n        const thisDateTimeSlots = test[1];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [thisDate, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: thisDateTimeSlots.map(item => {\n                console.log(\"item here\");\n                console.log(item);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [item.start, \" to \", item.end]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-upload\",\n      onClick: fetchFreeTimes,\n      children: [\" \", \"Fetch free times\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarOutput, \"DJ6JTRgv6EuA/Jm8jQ8tceQuON4=\");\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","useState","useEffect","CalendarOutput","props","freeTimes","setFreeTimes","allStartTimes","allEndTimes","busyBlocksToAdd","fetchFreeTimes","start","Date","startDate","setHours","setMinutes","setSeconds","toISOString","end","endDate","piza","setEndDate","console","log","request","timeMin","timeMax","timeZone","cals","i","selectedCalendars","length","calObj","id","push","items","num_days","getDate","gapi","client","calendar","freebusy","query","then","response","allTimes","k","curCal","busyTimes","result","calendars","busy","busyBlock","startTime","endTime","data","date","data2","test","merged","newfunc","finishUp2","err","error","times","sort","a","b","left","right","comp","Math","max","temp","toLocaleString","temp2","unique_days2","finalArr","map","obj","arr","xx","includes","String","motherToEndAll","thisDay","dkl","hihi","toLocaleDateString","thisDayTimes","j","dayObj","firstTime","secondTime","startDay2","removeTime","freeTimeSlot","temp1","splitted1","split","splitted","finalDolphin","setOutputReady","unique_days","finishUp","toDateString","inputDate","d","dods","outputReady","thisDate","thisDateTimeSlots","item"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\n\nconst CalendarOutput = (props) => {\n  const [freeTimes, setFreeTimes] = useState();\n  // const [outputReady, setOutputReady] = useState(false)\n\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  const fetchFreeTimes = () => {\n    // Check if endDate is set, if not set to startDate\n\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString();\n\n    // Format end date to 8 pm\n    let end = \"\";\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n    end.setHours(23);\n    end.setMinutes(59);\n    end.setSeconds(0);\n    end = end.toISOString();\n\n    console.log(start);\n    console.log(end);\n\n    // Build request body\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\";\n\n    // Create calendars object\n    let cals = [];\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n\n    let num_days = \"\";\n    if (props.endDate === null) {\n      console.log(\"we here\");\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      console.log(\"naw we here\");\n      num_days = props.endDate.getDate() - props.startDate.getDate();\n      console.log(num_days);\n    }\n    console.log(num_days);\n    num_days = num_days + 1;\n\n    // for each day in between input dates, add event\n    // day1 8am 830am, 8pm to day2 8am\n    // for (let x = 0; x < num_days; x++) {\n    //   let day = props.startDate.getDate();\n\n    //   let curDateDay = day + x;\n    //   let inputDate = props.startDate;\n\n    //   //appendPre(curDateDay)\n    //   let morningBusyStart = new Date();\n    //   morningBusyStart.setDate(curDateDay);\n    //   morningBusyStart.setHours(8);\n    //   morningBusyStart.setMinutes(0);\n    //   morningBusyStart.setSeconds(0);\n    //   morningBusyStart.setFullYear(inputDate.getFullYear());\n\n    //   let morningBusyEnd = new Date();\n    //   morningBusyEnd.setDate(curDateDay);\n    //   morningBusyEnd.setHours(8);\n    //   morningBusyEnd.setMinutes(30);\n    //   morningBusyEnd.setSeconds(0);\n    //   morningBusyEnd.setFullYear(inputDate.getFullYear());\n\n    //   let nightBusyStart = new Date();\n    //   nightBusyStart.setDate(curDateDay);\n    //   nightBusyStart.setHours(20);\n    //   nightBusyStart.setMinutes(0);\n    //   nightBusyStart.setSeconds(0);\n    //   nightBusyStart.setFullYear(inputDate.getFullYear());\n\n    //   let nightBusyEnd = new Date();\n    //   nightBusyEnd.setDate(curDateDay);\n    //   nightBusyEnd.setHours(20);\n    //   nightBusyEnd.setMinutes(30);\n    //   nightBusyEnd.setSeconds(0);\n    //   nightBusyEnd.setFullYear(inputDate.getFullYear());\n\n    //   // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n    //   // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n    //   var morningBusyStart_formatted = { date: morningBusyStart };\n    //   var morningBusyEnd_formatted = { date: morningBusyEnd };\n\n    //   var nightBusyStart_formatted = { date: nightBusyStart };\n    //   var nightBusyEnd_formatted = { date: nightBusyEnd };\n\n    //   allStartTimes.push(morningBusyStart_formatted);\n    //   allEndTimes.push(morningBusyEnd_formatted);\n\n    //   allStartTimes.push(nightBusyStart_formatted);\n    //   allEndTimes.push(nightBusyEnd_formatted);\n\n    //   let morningBlock = [morningBusyStart, morningBusyEnd];\n    //   let afternoonBlock = [nightBusyStart, nightBusyEnd];\n    //   busyBlocksToAdd.push(morningBlock);\n    //   busyBlocksToAdd.push(afternoonBlock);\n    // }\n\n    // console.log(\"busy blocks to add\");\n    // console.log(busyBlocksToAdd);\n    return gapi.client.calendar.freebusy\n      .query(request)\n\n      .then(\n        function (response) {\n          let allTimes = [];\n          for (let k = 0; k < props.selectedCalendars.length; k++) {\n            var curCal = props.selectedCalendars[k];\n            var busyTimes = response.result.calendars[curCal].busy;\n\n            for (let i = 0; i < busyTimes.length; i++) {\n              var busyBlock = busyTimes[i];\n              console.log(\"Busy block for \" + curCal, busyBlock);\n\n              var startTime = busyBlock.start;\n              var endTime = busyBlock.end;\n\n              var data = { date: startTime };\n              var data2 = { date: endTime };\n\n              allStartTimes.push(data);\n              allEndTimes.push(data2);\n              let test = [new Date(startTime), new Date(endTime)];\n              allTimes.push(test);\n            }\n          }\n\n          // console.log(allStartTimes);\n          // console.log(\"all end times \");\n          // console.log(allEndTimes);\n          // console.log(\"other all times\");\n          // console.log(allTimes);\n          // consolidateAllBusyTimes();\n          console.log(\"all times\");\n          console.log(allTimes);\n          const merged = newfunc(allTimes);\n          console.log(\"merged is\");\n          console.log(merged);\n          finishUp2(merged);\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  };\n\n  const newfunc = (times) => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    const merged = [];\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n\n        var comp = Math.max(left, right);\n        console.log(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n      const temp = new Date(merged[i][0]).toLocaleString();\n      const temp2 = new Date(merged[i][1]).toLocaleString();\n\n      console.log(temp);\n      console.log(temp2);\n      console.log(\"break\");\n    }\n\n    return merged;\n  };\n\n  const unique_days2 = [];\n  const finishUp2 = (finalArr) => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n      if (unique_days2.includes(String(xx)) === false) {\n        unique_days2.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n\n    const motherToEndAll = [];\n    for (let i = 0; i < unique_days2.length; i++) {\n      const thisDay = unique_days2[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n\n      const thisDayTimes = [];\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = new Date(dayObj[0]);\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  const unique_days = [];\n  const finishUp = (finalArr) => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n      if (unique_days.includes(String(xx)) === false) {\n        unique_days.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n\n    const motherToEndAll = [];\n    for (let i = 0; i < unique_days.length; i++) {\n      const thisDay = unique_days[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n\n      const thisDayTimes = [];\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = new Date(dayObj[0]);\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  function removeTime(date = new Date()) {\n    return new Date(date.toDateString());\n  }\n\n  const getDate = (inputDate) => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return (\n    <div className=\"todo-container\">\n      {props.outputReady ? (\n        <div>\n          {freeTimes.map((test) => {\n            console.log(\"yoyoyoyo\");\n            const thisDate = test[0];\n            const thisDateTimeSlots = test[1];\n            return (\n              <div>\n                <div>\n                  <h2>{thisDate}:</h2>\n                  <ul>\n                    {thisDateTimeSlots.map((item) => {\n                      console.log(\"item here\");\n                      console.log(item);\n                      return (\n                        <div>\n                          <li>\n                            {item.start} to {item.end}\n                          </li>\n                          {/* <p>Start time: {item.start}</p>\n                            <p>End time: {item.end}</p> */}\n                        </div>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <button className=\"btn-upload\" onClick={fetchFreeTimes}>\n          {\" \"}\n          Fetch free times{\" \"}\n        </button>\n      )}\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default CalendarOutput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}