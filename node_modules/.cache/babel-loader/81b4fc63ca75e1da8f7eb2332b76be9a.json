{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/FreeTimeFinder.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { about } from '../../portfolio';\nimport { ftf } from '../../portfolio';\nimport './FreeTimeFinder.css';\n/* exported gapiLoaded */\n\n/* exported gisLoaded */\n\n/* exported handleAuthClick */\n\n/* exported handleSignoutClick */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FreeTimeFinder = () => {\n  const {\n    title,\n    description,\n    subhead,\n    socidal\n  } = ftf;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about center\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      async: true,\n      defer: true,\n      src: \"https://apis.google.com/js/api.js\",\n      onload: \"gapiLoaded()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      async: true,\n      defer: true,\n      src: \"https://accounts.google.com/gsi/client\",\n      onload: \"gisLoaded()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"about__role\",\n      children: [subhead, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"about__desc\",\n      children: description && description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"authorize_button\",\n      onclick: \"handleAuthClick()\",\n      children: \"Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"signout_button\",\n      onclick: \"handleSignoutClick()\",\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      id: \"content\",\n      style: \"white-space: pre-wrap;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FreeTimeFinder;\nexport default FreeTimeFinder; // // Client ID and API key from the Developer Console\n// var CLIENT_ID = '386967852141-aatkt445rf6avuukbl8hrg3tp9do6bfb.apps.googleusercontent.com';\n// var API_KEY = 'AIzaSyCDrWptgYHqM53eScUgq7gbXbpFatWVwvA';\n// // Array of API discovery doc URLs for APIs used by the quickstart\n// var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n// // Authorization scopes required by the API; multiple scopes can be\n// // included, separated by spaces.\n// var SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n// var authorizeButton = document.getElementById('authorize_button');\n// var signoutButton = document.getElementById('signout_button');\n// /**\n//  *  On load, called to load the auth2 library and API client library.\n//  */\n// function handleClientLoad() {\n// gapi.load('client:auth2', initClient);\n// }\n// /**\n//  *  Initializes the API client library and sets up sign-in state\n//  *  listeners.\n//  */\n// function initClient() {\n// gapi.client.init({\n//     apiKey: API_KEY,\n//     clientId: CLIENT_ID,\n//     discoveryDocs: DISCOVERY_DOCS,\n//     scope: SCOPES\n// }).then(function () {\n//     // Listen for sign-in state changes.\n//     gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n//     // Handle the initial sign-in state.\n//     updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n//     authorizeButton.onclick = handleAuthClick;\n//     signoutButton.onclick = handleSignoutClick;\n// }, function(error) {\n//     appendPre(JSON.stringify(error, null, 2));\n// });\n// }\n// /**\n//  *  Called when the signed in status changes, to update the UI\n//  *  appropriately. After a sign-in, the API is called.\n//  */\n// function updateSigninStatus(isSignedIn) {\n// if (isSignedIn) {\n//     authorizeButton.style.display = 'none';\n//     signoutButton.style.display = 'block';\n//     //listUpcomingEvents();\n//     getCalendarIDs();\n// } else {\n//     authorizeButton.style.display = 'block';\n//     signoutButton.style.display = 'none';\n// }\n// }\n// /**\n//  *  Sign in the user upon button click.\n//  */\n// function handleAuthClick(event) {\n// gapi.auth2.getAuthInstance().signIn();\n// }\n// /**\n//  *  Sign out the user upon button click.\n//  */\n// function handleSignoutClick(event) {\n// gapi.auth2.getAuthInstance().signOut();\n// }\n// /**\n//  * Append a pre element to the body containing the given message\n//  * as its text node. Used to display the results of the API call.\n//  *\n//  * @param {string} message Text to be placed in pre element.\n//  */\n// function appendPre(message) {\n// var pre = document.getElementById('content');\n// var textContent = document.createTextNode(message + '\\n');\n// pre.appendChild(textContent);\n// }\n// /**\n//  * Append a pre element to the body containing the given message\n//  * as its text node with a bullet point.\n//  *\n//  * @param {string} message Text to be placed in pre element.\n//  */\n// function appendToList(message) {\n// var pre = document.getElementById('content');\n// var textContent = document.createTextNode(message + '\\n');\n// pre.appendChild(textContent);\n// }\n// /**\n//  * Append a pre element to the body containing the given message\n//  * as its text node with a bullet point.\n//  *\n//  * @param {string} message Text to be placed in pre element.\n//  */\n// function appendPre(message) {\n// var pre = document.getElementById('content');\n// var textContent = document.createTextNode(message + '\\n');\n// pre.appendChild(textContent);\n// }\n// /**\n//  * Print the summary and start datetime/date of the next ten events in\n//  * the authorized user's calendar. If no events are found an\n//  * appropriate message is printed.\n//  */\n// // this function is not called !!!\n// function loadTimes() {\n//     pushCheckboxStatesToLocalStorage();\n//     // makes request to Google Calendar API, populates free busy global arrays\n//     fetchFreeBusy();\n// // sorts global arrays, runs consolidation func\n//     sortGlobalArrays();\n// }\n// function listUpcomingEvents() {\n// gapi.client.calendar.events.list({\n//     'calendarId': 'primary',\n//     'timeMin': (new Date()).toISOString(),\n//     'showDeleted': false,\n//     'singleEvents': true,\n//     'maxResults': 10,\n//     'orderBy': 'startTime'\n// }).then(function(response) {\n//     var events = response.result.items;\n//     //appendPre('Upcoming events:');\n//     if (events.length > 0) {\n//     for (i = 0; i < events.length; i++) {\n//         var event = events[i];\n//         var when = event.start.dateTime;\n//         if (!when) {\n//         when = event.start.date;\n//         }\n//     //    appendPre(event.summary + ' (' + when + ')')\n//     }\n//     } else {\n//     //appendPre('No upcoming events found.');\n//     }\n// });\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeTimeFinder\");","map":{"version":3,"names":["React","axios","useState","useEffect","GitHubIcon","LinkedInIcon","about","ftf","FreeTimeFinder","title","description","subhead","socidal"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/FreeTimeFinder.js"],"sourcesContent":["import React from \"react\"\nimport axios from \"axios\";\nimport { useState, useEffect} from 'react'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport { ftf } from '../../portfolio'\nimport './FreeTimeFinder.css'\n\n/* exported gapiLoaded */\n/* exported gisLoaded */\n/* exported handleAuthClick */\n/* exported handleSignoutClick */\n\n\nconst FreeTimeFinder = () => {\n  const { title, description, subhead, socidal } = ftf\n\n\n\n  return (\n    \n    <div className='about center'>\n      <script async defer src=\"https://apis.google.com/js/api.js\" onload=\"gapiLoaded()\"></script>\n      <script async defer src=\"https://accounts.google.com/gsi/client\" onload=\"gisLoaded()\"></script>\n\n\n      <h1> {title} </h1>\n      <h2 className='about__role'>{subhead} </h2>\n      <p className='about__desc'>{description && description}</p>\n\n\n    <button id=\"authorize_button\" onclick=\"handleAuthClick()\">Authorize</button>\n    <button id=\"signout_button\" onclick=\"handleSignoutClick()\">Sign Out</button>\n\n    <pre id=\"content\" style=\"white-space: pre-wrap;\"></pre>\n\n    </div>\n  )\n}\n\nexport default FreeTimeFinder\n\n    // // Client ID and API key from the Developer Console\n    // var CLIENT_ID = '386967852141-aatkt445rf6avuukbl8hrg3tp9do6bfb.apps.googleusercontent.com';\n    // var API_KEY = 'AIzaSyCDrWptgYHqM53eScUgq7gbXbpFatWVwvA';\n\n    // // Array of API discovery doc URLs for APIs used by the quickstart\n    // var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n\n    // // Authorization scopes required by the API; multiple scopes can be\n    // // included, separated by spaces.\n    // var SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\n    // var authorizeButton = document.getElementById('authorize_button');\n    // var signoutButton = document.getElementById('signout_button');\n\n    // /**\n    //  *  On load, called to load the auth2 library and API client library.\n    //  */\n    // function handleClientLoad() {\n    // gapi.load('client:auth2', initClient);\n    // }\n\n    // /**\n    //  *  Initializes the API client library and sets up sign-in state\n    //  *  listeners.\n    //  */\n    // function initClient() {\n    // gapi.client.init({\n    //     apiKey: API_KEY,\n    //     clientId: CLIENT_ID,\n    //     discoveryDocs: DISCOVERY_DOCS,\n    //     scope: SCOPES\n    // }).then(function () {\n    //     // Listen for sign-in state changes.\n    //     gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n    //     // Handle the initial sign-in state.\n    //     updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    //     authorizeButton.onclick = handleAuthClick;\n    //     signoutButton.onclick = handleSignoutClick;\n    // }, function(error) {\n    //     appendPre(JSON.stringify(error, null, 2));\n    // });\n    // }\n\n    // /**\n    //  *  Called when the signed in status changes, to update the UI\n    //  *  appropriately. After a sign-in, the API is called.\n    //  */\n    // function updateSigninStatus(isSignedIn) {\n    // if (isSignedIn) {\n    //     authorizeButton.style.display = 'none';\n    //     signoutButton.style.display = 'block';\n    //     //listUpcomingEvents();\n    //     getCalendarIDs();\n    // } else {\n    //     authorizeButton.style.display = 'block';\n    //     signoutButton.style.display = 'none';\n    // }\n    // }\n\n    // /**\n    //  *  Sign in the user upon button click.\n    //  */\n    // function handleAuthClick(event) {\n    // gapi.auth2.getAuthInstance().signIn();\n    // }\n\n    // /**\n    //  *  Sign out the user upon button click.\n    //  */\n    // function handleSignoutClick(event) {\n    // gapi.auth2.getAuthInstance().signOut();\n    // }\n\n    // /**\n    //  * Append a pre element to the body containing the given message\n    //  * as its text node. Used to display the results of the API call.\n    //  *\n    //  * @param {string} message Text to be placed in pre element.\n    //  */\n    // function appendPre(message) {\n    // var pre = document.getElementById('content');\n    // var textContent = document.createTextNode(message + '\\n');\n    // pre.appendChild(textContent);\n    // }\n\n    // /**\n    //  * Append a pre element to the body containing the given message\n    //  * as its text node with a bullet point.\n    //  *\n    //  * @param {string} message Text to be placed in pre element.\n    //  */\n    // function appendToList(message) {\n    // var pre = document.getElementById('content');\n    // var textContent = document.createTextNode(message + '\\n');\n    // pre.appendChild(textContent);\n    // }\n\n    // /**\n    //  * Append a pre element to the body containing the given message\n    //  * as its text node with a bullet point.\n    //  *\n    //  * @param {string} message Text to be placed in pre element.\n    //  */\n    // function appendPre(message) {\n    // var pre = document.getElementById('content');\n    // var textContent = document.createTextNode(message + '\\n');\n    // pre.appendChild(textContent);\n    // }\n\n    // /**\n    //  * Print the summary and start datetime/date of the next ten events in\n    //  * the authorized user's calendar. If no events are found an\n    //  * appropriate message is printed.\n    //  */\n\n    // // this function is not called !!!\n    // function loadTimes() {\n    //     pushCheckboxStatesToLocalStorage();\n\n    //     // makes request to Google Calendar API, populates free busy global arrays\n    //     fetchFreeBusy();\n\n    // // sorts global arrays, runs consolidation func\n    //     sortGlobalArrays();\n    // }\n\n    // function listUpcomingEvents() {\n    // gapi.client.calendar.events.list({\n    //     'calendarId': 'primary',\n    //     'timeMin': (new Date()).toISOString(),\n    //     'showDeleted': false,\n    //     'singleEvents': true,\n    //     'maxResults': 10,\n    //     'orderBy': 'startTime'\n    // }).then(function(response) {\n    //     var events = response.result.items;\n    //     //appendPre('Upcoming events:');\n\n    //     if (events.length > 0) {\n    //     for (i = 0; i < events.length; i++) {\n    //         var event = events[i];\n    //         var when = event.start.dateTime;\n    //         if (!when) {\n    //         when = event.start.date;\n    //         }\n    //     //    appendPre(event.summary + ' (' + when + ')')\n    //     }\n    //     } else {\n    //     //appendPre('No upcoming events found.');\n    //     }\n    // });\n    // }\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAO,sBAAP;AAEA;;AACA;;AACA;;AACA;;;;AAGA,MAAMC,cAAc,GAAG,MAAM;EAC3B,MAAM;IAAEC,KAAF;IAASC,WAAT;IAAsBC,OAAtB;IAA+BC;EAA/B,IAA2CL,GAAjD;EAIA,oBAEE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACE;MAAQ,KAAK,MAAb;MAAc,KAAK,MAAnB;MAAoB,GAAG,EAAC,mCAAxB;MAA4D,MAAM,EAAC;IAAnE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,KAAK,MAAb;MAAc,KAAK,MAAnB;MAAoB,GAAG,EAAC,wCAAxB;MAAiE,MAAM,EAAC;IAAxE;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAA,gBAAME,KAAN;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAI,SAAS,EAAC,aAAd;MAAA,WAA6BE,OAA7B;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAG,SAAS,EAAC,aAAb;MAAA,UAA4BD,WAAW,IAAIA;IAA3C;MAAA;MAAA;MAAA;IAAA,QAPF,eAUA;MAAQ,EAAE,EAAC,kBAAX;MAA8B,OAAO,EAAC,mBAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVA,eAWA;MAAQ,EAAE,EAAC,gBAAX;MAA4B,OAAO,EAAC,sBAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXA,eAaA;MAAK,EAAE,EAAC,SAAR;MAAkB,KAAK,EAAC;IAAxB;MAAA;MAAA;MAAA;IAAA,QAbA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAmBD,CAxBD;;KAAMF,c;AA0BN,eAAeA,cAAf},"metadata":{},"sourceType":"module"}