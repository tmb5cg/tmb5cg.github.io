{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/frontend/src/pages/Upload.js\",\n    _s = $RefreshSig$();\n\nimport DragDropFile from './DragDropFile';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [processedImages, setProcessedImages] = useState(null);\n\n  if (processedImages) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Automatically export cropped photos from your scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Free and no download required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DragDropFile, {\n        setProcessedImages: setProcessedImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), processedImages && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"scanningmethods\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Photos were detected \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" insert button to download zip here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: processedImages.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"method-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"outputTitle\",\n                children: \"Image \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"layer\",\n                children: \" hi \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 132\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"tucker is awesome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Upload, \"h+MRlSSLQKgR+fM3JSrShGtaRbc=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["DragDropFile","useState","Upload","processedImages","setProcessedImages","map","item"],"sources":["/Users/tucker/Documents/GitHub/frontend/src/pages/Upload.js"],"sourcesContent":["import DragDropFile from './DragDropFile';\nimport { useState } from 'react'\n\n\nconst Upload = () => {\n    const [processedImages, setProcessedImages] = useState(null);\n\n    if (processedImages) {\n\n    \n        return (\n        <div>  \n\n            <h2>Automatically export cropped photos from your scan</h2>\n            <p>Free and no download required</p>\n            \n            <DragDropFile setProcessedImages={setProcessedImages}/>\n            \n            {processedImages && <section className=\"scanningmethods\">\n                        <h1> Photos were detected </h1>\n                        <p> insert button to download zip here</p>\n\n                        <div className=\"row\">\n\n                        {processedImages.map(item => {\n                                return <div className=\"method-col\"><h3 className='outputTitle'>Image </h3><img src={item} alt=\"\" /><div className=\"layer\"> hi </div></div>\n                            })}\n\n                        </div>\n\n                </section>\n            }\n        </div>);\n    } else {\n        return (\n            <div>tucker is awesome</div>\n        )\n    }\n};\n\nexport default Upload;\n\n\n"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCH,QAAQ,CAAC,IAAD,CAAtD;;EAEA,IAAIE,eAAJ,EAAqB;IAGjB,oBACA;MAAA,wBAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAKI,QAAC,YAAD;QAAc,kBAAkB,EAAEC;MAAlC;QAAA;QAAA;QAAA;MAAA,QALJ,EAOKD,eAAe,iBAAI;QAAS,SAAS,EAAC,iBAAnB;QAAA,wBACR;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADQ,eAER;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFQ,eAIR;UAAK,SAAS,EAAC,KAAf;UAAA,UAECA,eAAe,CAACE,GAAhB,CAAoBC,IAAI,IAAI;YACrB,oBAAO;cAAK,SAAS,EAAC,YAAf;cAAA,wBAA4B;gBAAI,SAAS,EAAC,aAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAA5B,eAAmE;gBAAK,GAAG,EAAEA,IAAV;gBAAgB,GAAG,EAAC;cAApB;gBAAA;gBAAA;gBAAA;cAAA,QAAnE,eAA4F;gBAAK,SAAS,EAAC,OAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAA5F;YAAA;cAAA;cAAA;cAAA;YAAA,QAAP;UACH,CAFJ;QAFD;UAAA;UAAA;UAAA;QAAA,QAJQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAPxB;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAuBH,CA1BD,MA0BO;IACH,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;AACJ,CAlCD;;GAAMJ,M;;KAAAA,M;AAoCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}