{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  _s();\n\n  const [freeTimes, setFreeTimes] = useState(); // const [outputReady, setOutputReady] = useState(false)\n  // const fetchFreeTimes2 = (busyTimes) => {\n  //   const startDate = globalStart;\n  //   const endDate = globalEnd;\n  //   var daysOfYear = [];\n  //   for (\n  //     var d = new Date(startDate);\n  //     d <= new Date(endDate);\n  //     d.setDate(d.getDate() + 1)\n  //   ) {\n  //     daysOfYear.push(new Date(d));\n  //   }\n  //   const finalPenguin = [];\n  //   for (let i = 0; i < daysOfYear.length; i++) {\n  //     var thisDay = new Date(daysOfYear[i]);\n  //     var thisDayMorning = new Date(thisDay.setHours(6, 0, 0));\n  //     var thisDayNight = new Date(\n  //       thisDayMorning.getYear(),\n  //       thisDayMorning.getMonth(),\n  //       thisDayMorning.getDate(),\n  //       23\n  //     );\n  //     var thisDayBusyTimes = [];\n  //     for (let x = 0; x < busyTimes.length; x++) {\n  //       var temp = busyTimes[x];\n  //       if (sameDay(thisDayMorning, new Date(temp[0]))) {\n  //         thisDayBusyTimes.push(temp);\n  //       }\n  //     }\n  //     var freeTimes = [];\n  //     console.log(thisDayBusyTimes);\n  //     var lastTimeSlot = thisDayBusyTimes.length - 1;\n  //     console.log(\"LAST TIME SLOT \");\n  //     console.log(lastTimeSlot);\n  //     for (let x = 0; x < thisDayBusyTimes.length; x++) {\n  //       var start = new Date(thisDayBusyTimes[x][0]);\n  //       var end = new Date(thisDayBusyTimes[x][1]);\n  //       if (sameDay(thisDayMorning, end)) {\n  //         if (x === 0) {\n  //           if (thisDayBusyTimes.length === 1) {\n  //             var out = [];\n  //             var k = prettyTime(thisDayMorning);\n  //             var n = prettyTime(start);\n  //             out.start = k[1];\n  //             out.end = n[1];\n  //             freeTimes.push(out);\n  //             var outer = [];\n  //             var e = prettyTime(end);\n  //             var p = prettyTime(thisDayNight);\n  //             outer.start = e[1];\n  //             outer.end = \"onwards\";\n  //             freeTimes.push(outer);\n  //           } else {\n  //             var out = [];\n  //             var k = prettyTime(thisDayMorning);\n  //             var n = prettyTime(start);\n  //             out.start = k[1];\n  //             out.end = n[1];\n  //             freeTimes.push(out);\n  //           }\n  //         } else {\n  //           var outhi = [];\n  //           // end of prev time slot\n  //           var kk = prettyTime(new Date(thisDayBusyTimes[x - 1][1]));\n  //           var zz = prettyTime(start);\n  //           outhi.start = kk[1];\n  //           outhi.end = zz[1];\n  //           freeTimes.push(outhi);\n  //           console.log(\"outhi\");\n  //           console.log(outhi);\n  //           var test = new Date(thisDayBusyTimes[x][1]);\n  //           if (x === thisDayBusyTimes.length - 1) {\n  //             var tempo = new Date(thisDayBusyTimes[lastTimeSlot][1]);\n  //             console.log(tempo);\n  //             var outer = [];\n  //             var e = prettyTime(tempo);\n  //             var p = prettyTime(thisDayNight);\n  //             outer.start = e[1];\n  //             outer.end = \"onwards\";\n  //             freeTimes.push(outer);\n  //           }\n  //         }\n  //       }\n  //     }\n  //     const output = [String(prettyTime(thisDay)[0]), freeTimes];\n  //     console.log(output);\n  //     finalPenguin.push(output);\n  //   }\n  //   console.log(finalPenguin);\n  //   setFreeTimes(finalPenguin);\n  //   props.setOutputReady(true);\n  // };\n\n  function prettyTime(d1) {\n    var p = String(d1.toLocaleString(\"en-US\", {\n      timeZone: \"America/New_York\"\n    }));\n    var splitted = p.split(\" \");\n    var day = splitted[0];\n    var time = splitted[1] + \" \" + splitted[2];\n    const day2 = day.slice(0, -1);\n    var output = [day2, time];\n    return output;\n  }\n\n  function sameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n  } // end test\n\n\n  var globalStart = \"\";\n  var globalEnd = \"\";\n\n  const fetchFreeTimes = () => {\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString();\n    globalStart = start; // Format end date to 8 pm\n\n    let end = \"\";\n\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n\n    end.setHours(23);\n    end.setMinutes(59);\n    end.setSeconds(0);\n    end = end.toISOString();\n    globalEnd = end;\n    console.log(start);\n    console.log(end); // Build request body\n\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\"; // Create calendars object\n\n    let cals = [];\n\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n    let num_days = \"\";\n\n    if (props.endDate === null) {\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      num_days = props.endDate.getDate() - props.startDate.getDate();\n    }\n\n    num_days = num_days + 1;\n    return gapi.client.calendar.freebusy.query(request).then(function (response) {\n      let allTimes = [];\n      let fuckme = [];\n\n      for (let k = 0; k < props.selectedCalendars.length; k++) {\n        var curCal = props.selectedCalendars[k];\n        var busyTimes = response.result.calendars[curCal].busy;\n\n        for (let i = 0; i < busyTimes.length; i++) {\n          var busyBlock = busyTimes[i];\n          var startTime = busyBlock.start;\n          var endTime = busyBlock.end;\n          var p = prettyTime(startTime)[0];\n          let test = [new Date(startTime), new Date(endTime)];\n          allTimes.push(test);\n        }\n      }\n\n      const merged = newfunc(allTimes); // fetchFreeTimes2(merged);\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  const newfunc = times => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    const merged = [];\n\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n        var comp = Math.max(left, right);\n        console.log(comp);\n        comp = new Date(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n      const temp = new Date(merged[i][0]).toLocaleString();\n      const temp2 = new Date(merged[i][1]).toLocaleString();\n    }\n\n    return merged;\n  };\n\n  function removeTime() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return new Date(date.toDateString());\n  }\n\n  const getDate = inputDate => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [props.outputReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: freeTimes.map(test => {\n        const thisDate = test[0];\n        const thisDateTimeSlots = test[1];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [thisDate, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: thisDateTimeSlots.map(item => {\n                console.log(\"item here\");\n                console.log(item);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [item.start, \" to \", item.end]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-upload\",\n      onClick: fetchFreeTimes,\n      children: [\" \", \"Fetch free times\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarOutput, \"DJ6JTRgv6EuA/Jm8jQ8tceQuON4=\");\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","useState","useEffect","CalendarOutput","props","freeTimes","setFreeTimes","prettyTime","d1","p","String","toLocaleString","timeZone","splitted","split","day","time","day2","slice","output","sameDay","d2","getFullYear","getMonth","getDate","globalStart","globalEnd","fetchFreeTimes","start","Date","startDate","setHours","setMinutes","setSeconds","toISOString","end","endDate","piza","setEndDate","console","log","request","timeMin","timeMax","cals","i","selectedCalendars","length","calObj","id","push","items","num_days","gapi","client","calendar","freebusy","query","then","response","allTimes","fuckme","k","curCal","busyTimes","result","calendars","busy","busyBlock","startTime","endTime","test","merged","newfunc","err","error","times","sort","a","b","left","right","comp","Math","max","temp","temp2","removeTime","date","toDateString","inputDate","d","dods","outputReady","map","thisDate","thisDateTimeSlots","item"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\n\nconst CalendarOutput = (props) => {\n  const [freeTimes, setFreeTimes] = useState();\n  // const [outputReady, setOutputReady] = useState(false)\n\n  // const fetchFreeTimes2 = (busyTimes) => {\n  //   const startDate = globalStart;\n  //   const endDate = globalEnd;\n  //   var daysOfYear = [];\n  //   for (\n  //     var d = new Date(startDate);\n  //     d <= new Date(endDate);\n  //     d.setDate(d.getDate() + 1)\n  //   ) {\n  //     daysOfYear.push(new Date(d));\n  //   }\n\n  //   const finalPenguin = [];\n  //   for (let i = 0; i < daysOfYear.length; i++) {\n  //     var thisDay = new Date(daysOfYear[i]);\n  //     var thisDayMorning = new Date(thisDay.setHours(6, 0, 0));\n  //     var thisDayNight = new Date(\n  //       thisDayMorning.getYear(),\n  //       thisDayMorning.getMonth(),\n  //       thisDayMorning.getDate(),\n  //       23\n  //     );\n\n  //     var thisDayBusyTimes = [];\n  //     for (let x = 0; x < busyTimes.length; x++) {\n  //       var temp = busyTimes[x];\n  //       if (sameDay(thisDayMorning, new Date(temp[0]))) {\n  //         thisDayBusyTimes.push(temp);\n  //       }\n  //     }\n\n  //     var freeTimes = [];\n  //     console.log(thisDayBusyTimes);\n  //     var lastTimeSlot = thisDayBusyTimes.length - 1;\n  //     console.log(\"LAST TIME SLOT \");\n  //     console.log(lastTimeSlot);\n  //     for (let x = 0; x < thisDayBusyTimes.length; x++) {\n  //       var start = new Date(thisDayBusyTimes[x][0]);\n  //       var end = new Date(thisDayBusyTimes[x][1]);\n\n  //       if (sameDay(thisDayMorning, end)) {\n  //         if (x === 0) {\n  //           if (thisDayBusyTimes.length === 1) {\n  //             var out = [];\n  //             var k = prettyTime(thisDayMorning);\n  //             var n = prettyTime(start);\n  //             out.start = k[1];\n  //             out.end = n[1];\n  //             freeTimes.push(out);\n\n  //             var outer = [];\n  //             var e = prettyTime(end);\n  //             var p = prettyTime(thisDayNight);\n  //             outer.start = e[1];\n  //             outer.end = \"onwards\";\n  //             freeTimes.push(outer);\n  //           } else {\n  //             var out = [];\n  //             var k = prettyTime(thisDayMorning);\n  //             var n = prettyTime(start);\n  //             out.start = k[1];\n  //             out.end = n[1];\n  //             freeTimes.push(out);\n  //           }\n  //         } else {\n  //           var outhi = [];\n  //           // end of prev time slot\n  //           var kk = prettyTime(new Date(thisDayBusyTimes[x - 1][1]));\n  //           var zz = prettyTime(start);\n\n  //           outhi.start = kk[1];\n  //           outhi.end = zz[1];\n  //           freeTimes.push(outhi);\n  //           console.log(\"outhi\");\n  //           console.log(outhi);\n\n  //           var test = new Date(thisDayBusyTimes[x][1]);\n\n  //           if (x === thisDayBusyTimes.length - 1) {\n  //             var tempo = new Date(thisDayBusyTimes[lastTimeSlot][1]);\n  //             console.log(tempo);\n  //             var outer = [];\n  //             var e = prettyTime(tempo);\n  //             var p = prettyTime(thisDayNight);\n  //             outer.start = e[1];\n  //             outer.end = \"onwards\";\n  //             freeTimes.push(outer);\n  //           }\n  //         }\n  //       }\n  //     }\n  //     const output = [String(prettyTime(thisDay)[0]), freeTimes];\n  //     console.log(output);\n  //     finalPenguin.push(output);\n  //   }\n  //   console.log(finalPenguin);\n  //   setFreeTimes(finalPenguin);\n  //   props.setOutputReady(true);\n  // };\n\n  function prettyTime(d1) {\n    var p = String(\n      d1.toLocaleString(\"en-US\", { timeZone: \"America/New_York\" })\n    );\n    var splitted = p.split(\" \");\n    var day = splitted[0];\n    var time = splitted[1] + \" \" + splitted[2];\n\n    const day2 = day.slice(0, -1);\n    var output = [day2, time];\n\n    return output;\n  }\n\n  function sameDay(d1, d2) {\n    return (\n      d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate()\n    );\n  }\n\n  // end test\n\n  var globalStart = \"\";\n  var globalEnd = \"\";\n  const fetchFreeTimes = () => {\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString();\n    globalStart = start;\n\n    // Format end date to 8 pm\n    let end = \"\";\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n    end.setHours(23);\n    end.setMinutes(59);\n    end.setSeconds(0);\n    end = end.toISOString();\n    globalEnd = end;\n\n    console.log(start);\n    console.log(end);\n\n    // Build request body\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\";\n\n    // Create calendars object\n    let cals = [];\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n\n    let num_days = \"\";\n    if (props.endDate === null) {\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      num_days = props.endDate.getDate() - props.startDate.getDate();\n    }\n    num_days = num_days + 1;\n\n    return gapi.client.calendar.freebusy\n      .query(request)\n\n      .then(\n        function (response) {\n          let allTimes = [];\n          let fuckme = [];\n          for (let k = 0; k < props.selectedCalendars.length; k++) {\n            var curCal = props.selectedCalendars[k];\n            var busyTimes = response.result.calendars[curCal].busy;\n\n            for (let i = 0; i < busyTimes.length; i++) {\n              var busyBlock = busyTimes[i];\n              var startTime = busyBlock.start;\n              var endTime = busyBlock.end;\n              var p = prettyTime(startTime)[0];\n              let test = [new Date(startTime), new Date(endTime)];\n              allTimes.push(test);\n            }\n          }\n          const merged = newfunc(allTimes);\n          // fetchFreeTimes2(merged);\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  };\n\n  const newfunc = (times) => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    const merged = [];\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n\n        var comp = Math.max(left, right);\n        console.log(comp);\n        comp = new Date(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n      const temp = new Date(merged[i][0]).toLocaleString();\n      const temp2 = new Date(merged[i][1]).toLocaleString();\n    }\n\n    return merged;\n  };\n\n  function removeTime(date = new Date()) {\n    return new Date(date.toDateString());\n  }\n\n  const getDate = (inputDate) => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return (\n    <div className=\"todo-container\">\n      {props.outputReady ? (\n        <div>\n          {freeTimes.map((test) => {\n            const thisDate = test[0];\n            const thisDateTimeSlots = test[1];\n            return (\n              <div>\n                <div>\n                  <h2>{thisDate}:</h2>\n                  <ul>\n                    {thisDateTimeSlots.map((item) => {\n                      console.log(\"item here\");\n                      console.log(item);\n                      return (\n                        <div>\n                          <li>\n                            {item.start} to {item.end}\n                          </li>\n                          {/* <p>Start time: {item.start}</p>\n                            <p>End time: {item.end}</p> */}\n                        </div>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <button className=\"btn-upload\" onClick={fetchFreeTimes}>\n          {\" \"}\n          Fetch free times{\" \"}\n        </button>\n      )}\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default CalendarOutput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}