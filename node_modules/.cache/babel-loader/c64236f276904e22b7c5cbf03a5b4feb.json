{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/frontend/src/pages/Upload.js\",\n    _s = $RefreshSig$();\n\nimport DragDropFile from './DragDropFile';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [processedImages, setProcessedImages] = useState(null);\n  const [imageProcessing, setImageProcessing] = useState(false);\n  useEffect(() => {\n    setTimeout(function () {\n      setImageProcessing(false);\n    }, 5000);\n  }, [imageProcessing]);\n\n  if (imageProcessing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Parsing images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"output-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"center\",\n          className: \"output-container-detail-loading\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"lds-ring\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 66\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else if (!processedImages) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"File Uploader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropFile, {\n        setProcessedImages: setProcessedImages,\n        setImageProcessing: setImageProcessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cropped Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"output-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-container-detail\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: processedImages.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"method-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `${item}`,\n                  download: \"hihi.jpg\",\n                  children: \"Click to Download the image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Download output \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Upload, \"11MM9MXBMHd/JeJuvSNQjnOo8zw=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["DragDropFile","useState","useEffect","Upload","processedImages","setProcessedImages","imageProcessing","setImageProcessing","setTimeout","map","item"],"sources":["/Users/tucker/Documents/GitHub/frontend/src/pages/Upload.js"],"sourcesContent":["import DragDropFile from './DragDropFile';\nimport { useState, useEffect } from 'react'\n\n\nconst Upload = () => {\n    const [processedImages, setProcessedImages] = useState(null);\n    const [imageProcessing, setImageProcessing] = useState(false);\n\n    useEffect(() => {\n        setTimeout(function () {\n          setImageProcessing(false);\n        }, 5000);\n      }, [imageProcessing]);\n\n    if (imageProcessing) {\n        return (\n            <div> \n            <h1>Parsing images...</h1>\n                    <section className='output-container'>\n                     <div align=\"center\" className='output-container-detail-loading'>\n                     <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n                     </div>\n                    </section>\n            \n            </div>\n        )\n    }\n    else if (!processedImages) {\n        return (\n        <div>  \n        <h1>File Uploader</h1>\n            <DragDropFile setProcessedImages={setProcessedImages} setImageProcessing={setImageProcessing}/>\n        </div>);\n    } else {\n        \n        return (\n            <div>\n            <h1>Cropped Images</h1>\n                    <section className='output-container'>\n                     <div className='output-container-detail'>\n                        <div className=\"row\">\n                            {processedImages.map(item => {\n                                    return (\n                                        <div className=\"method-col\">\n                                            <img src={item} alt=\"\" />\n                                            {/* <div className=\"layer\"> </div> */}\n                                            <a href={`${item}`} download=\"hihi.jpg\">Click to Download the image</a>\n\n                                        </div>\n                                        \n                                        )\n                                })}\n                        </div>\n\n\n                     </div>\n                    </section>\n\n                    <div> Download output </div>\n            </div>\n        )\n    }\n};\n\nexport default Upload;\n\n\n"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,IAAD,CAAtD;EACA,MAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;EAEAC,SAAS,CAAC,MAAM;IACZM,UAAU,CAAC,YAAY;MACrBD,kBAAkB,CAAC,KAAD,CAAlB;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CAJM,EAIJ,CAACD,eAAD,CAJI,CAAT;;EAMA,IAAIA,eAAJ,EAAqB;IACjB,oBACI;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEQ;QAAS,SAAS,EAAC,kBAAnB;QAAA,uBACC;UAAK,KAAK,EAAC,QAAX;UAAoB,SAAS,EAAC,iCAA9B;UAAA,uBACA;YAAK,KAAK,EAAC,UAAX;YAAA,wBAAsB;cAAA;cAAA;cAAA;YAAA,QAAtB,eAAiC;cAAA;cAAA;cAAA;YAAA,QAAjC,eAA4C;cAAA;cAAA;cAAA;YAAA,QAA5C,eAAuD;cAAA;cAAA;cAAA;YAAA,QAAvD;UAAA;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QAFR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH,CAZD,MAaK,IAAI,CAACF,eAAL,EAAsB;IACvB,oBACA;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEI,QAAC,YAAD;QAAc,kBAAkB,EAAEC,kBAAlC;QAAsD,kBAAkB,EAAEE;MAA1E;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAKH,CANI,MAME;IAEH,oBACI;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEQ;QAAS,SAAS,EAAC,kBAAnB;QAAA,uBACC;UAAK,SAAS,EAAC,yBAAf;UAAA,uBACG;YAAK,SAAS,EAAC,KAAf;YAAA,UACKH,eAAe,CAACK,GAAhB,CAAoBC,IAAI,IAAI;cACrB,oBACI;gBAAK,SAAS,EAAC,YAAf;gBAAA,wBACI;kBAAK,GAAG,EAAEA,IAAV;kBAAgB,GAAG,EAAC;gBAApB;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAGI;kBAAG,IAAI,EAAG,GAAEA,IAAK,EAAjB;kBAAoB,QAAQ,EAAC,UAA7B;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAHJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ;YASH,CAVJ;UADL;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QAFR,eAsBQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA0BH;AACJ,CA1DD;;GAAMP,M;;KAAAA,M;AA4DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}