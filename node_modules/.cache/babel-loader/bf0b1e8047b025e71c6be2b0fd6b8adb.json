{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  _s();\n\n  const [freeTimes, setFreeTimes] = useState(); // const [outputReady, setOutputReady] = useState(false)\n\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  const fetchFreeTimes = () => {\n    // Check if endDate is set, if not set to startDate\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString(); // Format end date to 8 pm\n\n    let end = \"\";\n\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n\n    end.setHours(20);\n    end.setMinutes(0);\n    end.setSeconds(0);\n    end = end.toISOString();\n    console.log(start);\n    console.log(end); // Build request body\n\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\"; // Create calendars object\n\n    let cals = [];\n\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n    let num_days = \"\";\n\n    if (props.endDate === null) {\n      console.log(\"we here\");\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      let num_days = props.endDate.getDate() - props.startDate.getDate();\n    } // for each day in between input dates, add event\n    // day1 8am 830am, 8pm to day2 8am\n\n\n    for (let x = 0; x < num_days; x++) {\n      let day = props.startDate.getDate();\n      let curDateDay = day + x;\n      let inputDate = props.startDate; //appendPre(curDateDay)\n\n      let morningBusyStart = new Date();\n      morningBusyStart.setDate(curDateDay);\n      morningBusyStart.setHours(8);\n      morningBusyStart.setMinutes(0);\n      morningBusyStart.setSeconds(0);\n      morningBusyStart.setFullYear(inputDate.getFullYear());\n      let morningBusyEnd = new Date();\n      morningBusyEnd.setDate(curDateDay);\n      morningBusyEnd.setHours(8);\n      morningBusyEnd.setMinutes(30);\n      morningBusyEnd.setSeconds(0);\n      morningBusyEnd.setFullYear(inputDate.getFullYear());\n      let nightBusyStart = new Date();\n      nightBusyStart.setDate(curDateDay);\n      nightBusyStart.setHours(20);\n      nightBusyStart.setMinutes(0);\n      nightBusyStart.setSeconds(0);\n      nightBusyStart.setFullYear(inputDate.getFullYear());\n      let nightBusyEnd = new Date();\n      nightBusyEnd.setDate(curDateDay);\n      nightBusyEnd.setHours(20);\n      nightBusyEnd.setMinutes(30);\n      nightBusyEnd.setSeconds(0);\n      nightBusyEnd.setFullYear(inputDate.getFullYear()); // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n      // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n\n      var morningBusyStart_formatted = {\n        date: morningBusyStart\n      };\n      var morningBusyEnd_formatted = {\n        date: morningBusyEnd\n      };\n      var nightBusyStart_formatted = {\n        date: nightBusyStart\n      };\n      var nightBusyEnd_formatted = {\n        date: nightBusyEnd\n      };\n      allStartTimes.push(morningBusyStart_formatted);\n      allEndTimes.push(morningBusyEnd_formatted);\n      allStartTimes.push(nightBusyStart_formatted);\n      allEndTimes.push(nightBusyEnd_formatted);\n      let timecombo = [morningBusyStart, morningBusyEnd];\n      busyBlocksToAdd.push(timecombo);\n    }\n\n    console.log(\"busy blocks to add\");\n    console.log(busyBlocksToAdd);\n    return gapi.client.calendar.freebusy.query(request).then(function (response) {\n      let allTimes = [];\n\n      for (let k = 0; k < props.selectedCalendars.length; k++) {\n        var curCal = props.selectedCalendars[k];\n        var busyTimes = response.result.calendars[curCal].busy;\n\n        for (let i = 0; i < busyTimes.length; i++) {\n          var busyBlock = busyTimes[i];\n          console.log(\"Busy block for \" + curCal, busyBlock);\n          var startTime = busyBlock.start;\n          var endTime = busyBlock.end;\n          var data = {\n            date: startTime\n          };\n          var data2 = {\n            date: endTime\n          };\n          allStartTimes.push(data);\n          allEndTimes.push(data2);\n          let test = [new Date(startTime).getTime(), new Date(endTime).getTime()];\n          allTimes.push(test);\n        }\n      }\n\n      console.log(allStartTimes);\n      console.log(\"all end times \");\n      console.log(allEndTimes);\n      console.log(\"other all times\"); // console.log(allTimes);\n      // consolidateAllBusyTimes();\n\n      newfunc(allTimes);\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  const newfunc = times => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    const merged = [];\n\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n        var comp = Math.max(left, right);\n        console.log(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {}\n\n    console.log(merged);\n  };\n\n  const consolidateAllBusyTimes = () => {\n    allStartTimes.sort(function (a, b) {\n      var c = new Date(a.date);\n      var d = new Date(b.date);\n      return c - d;\n    }); //    appendPre(\"- - - - - - - Sorting end times\")\n\n    allEndTimes.sort(function (a, b) {\n      var c = new Date(a.date);\n      var d = new Date(b.date);\n      return c - d;\n    });\n    let startTimes = allStartTimes;\n    let endTimes = allEndTimes;\n    var masterArray = [];\n\n    for (let x = 0; x < startTimes.length; x++) {\n      let startTime = startTimes[x].date;\n      let endTime = endTimes[x].date;\n      let timeStartDateFormat = new Date(startTime);\n      let timeEndDateFormat = new Date(endTime);\n      let prettyStartTime = timeStartDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let prettyEndTime = timeEndDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let timecombo = [timeStartDateFormat, timeEndDateFormat];\n      masterArray.push(timecombo);\n    }\n\n    for (let k = 0; k < masterArray.length; k++) {\n      let data = masterArray[k];\n      let start = data[0];\n      let end = data[1];\n      let start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      console.log(k + \" Start: \" + start2 + \" || End: \" + end2);\n    } // STEP 1 merge all same start times\n\n\n    var newtimes = [];\n\n    for (let x = 0; x < masterArray.length; x++) {\n      var data = masterArray[x];\n      var curstart = data[0].getTime();\n      var curend = data[1].getTime();\n      var latestend = curend;\n\n      for (let i = 0; i < masterArray.length; i++) {\n        var data2 = masterArray[i];\n        var start2 = data2[0].getTime();\n        var end2 = data2[1].getTime();\n\n        if (curstart == start2) {\n          if (latestend < end2) {\n            latestend = end2;\n          }\n        }\n      }\n\n      let newtime = [curstart, latestend];\n      var shouldWeAddIt = true;\n\n      for (let k = 0; k < newtimes.length; k++) {\n        let data = newtimes[k];\n        let start = data[0];\n        let end = data[1];\n\n        if (start == curstart) {\n          if (end == latestend) {\n            shouldWeAddIt = false;\n          }\n        } else {}\n      }\n\n      if (shouldWeAddIt) {\n        newtimes.push(newtime);\n      }\n    } // print OG array\n    //\n    //  appendPre(\"Merging same start times\");\n\n\n    for (let k = 0; k < newtimes.length; k++) {\n      let data = newtimes[k];\n      let start = data[0];\n      let end = data[1];\n      start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      }); //appendPre(k + \" Start: \" + start2 + \" || End: \" + end2);\n    } // STEP 2  Remove times within larger time blocks\n\n\n    var newertimes = [];\n\n    for (let x = 0; x < newtimes.length; x++) {\n      var data = newtimes[x];\n      var curstart = data[0];\n      var curend = data[1];\n      var latestend = curend;\n      var shouldAdd = true;\n\n      for (let i = 0; i < newtimes.length; i++) {\n        var data2 = newtimes[i];\n        var start2 = data2[0];\n        var end2 = data2[1];\n\n        if (start2 < curstart) {\n          if (end2 > curend) {\n            shouldAdd = false;\n          }\n        }\n      }\n\n      let newtime = [curstart, curend];\n\n      if (shouldAdd) {\n        newertimes.push(newtime);\n      }\n    } // STEP 2 printing results\n    //  appendPre(\"TIMES WITH OVERLAPPING BLOCKS REMOVED: \" + newertimes);\n\n\n    for (let k = 0; k < newertimes.length; k++) {\n      data = newertimes[k];\n      let start = data[0];\n      let end = data[1];\n      let start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n    } // STEP  3 FINAL STEP - consolidate back to back events\n\n\n    var newesttimes = [];\n    var removedtimes = [];\n\n    for (let x = 0; x < newertimes.length; x++) {\n      var data = newertimes[x];\n      var curstart = data[0];\n      var curend = data[1];\n\n      for (let i = 0; i < newertimes.length; i++) {\n        var data2 = newertimes[i];\n        var start2 = data2[0];\n        var end2 = data2[1];\n\n        if (curend > start2) {\n          if (curend < end2) {\n            let newtime = [curstart, end2];\n            newesttimes.push(newtime);\n            removedtimes.push([curstart, curend]);\n            removedtimes.push([start2, end2]);\n          }\n        }\n      }\n    } // STEP 3 printing results\n\n\n    for (let k = 0; k < newesttimes.length; k++) {\n      data = newesttimes[k];\n      let start = data[0];\n      let end = data[1];\n      let start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n    } // more printing results\n\n\n    for (let k = 0; k < removedtimes.length; k++) {\n      data = removedtimes[k];\n      let start = data[0];\n      let end = data[1];\n      let start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n    } // Adding consolidated times together, finishing up etc\n\n\n    var finaltimes = [];\n\n    for (let k = 0; k < newertimes.length; k++) {\n      data = newertimes[k];\n      let start = data[0];\n      let end = data[1];\n      var shouldWeAddIt = true;\n\n      for (let x = 0; x < removedtimes.length; x++) {\n        let data2 = removedtimes[x];\n        let start2 = data2[0];\n        let end2 = data2[1];\n\n        if (start2 == start) {\n          if (end2 == end) {\n            shouldWeAddIt = false;\n          }\n        }\n      }\n\n      if (shouldWeAddIt == true) {\n        finaltimes.push(data);\n      }\n    }\n\n    for (let k = 0; k < finaltimes.length; k++) {\n      data = finaltimes[k];\n      let start = data[0];\n      let end = data[1];\n      let start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n    }\n\n    for (let k = 0; k < newesttimes.length; k++) {\n      let data = newesttimes[k];\n      finaltimes.push(data);\n    }\n\n    for (let k = 0; k < finaltimes.length; k++) {\n      data = finaltimes[k];\n      let start = data[0];\n      let end = data[1];\n      let start2 = new Date(start).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let end2 = new Date(end).toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n    }\n\n    var allstarttimes3 = [];\n    var allendtimes3 = [];\n\n    for (let k = 0; k < finaltimes.length; k++) {\n      data = finaltimes[k];\n      let start = data[0];\n      let end = data[1];\n      allstarttimes3.push(start);\n      allendtimes3.push(end);\n    }\n\n    allstarttimes3.sort(function (a, b) {\n      return a - b;\n    });\n    allendtimes3.sort(function (a, b) {\n      return a - b;\n    });\n    var finalmasterArray = [];\n\n    for (let x = 0; x < allstarttimes3.length; x++) {\n      let startTime = allstarttimes3[x];\n      let endTime = allendtimes3[x];\n      let timeStartDateFormat = new Date(startTime);\n      let timeEndDateFormat = new Date(endTime);\n      let prettyStartTime = timeStartDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let prettyEndTime = timeEndDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\"\n      });\n      let timecombo = [timeStartDateFormat, timeEndDateFormat];\n      finalmasterArray.push(timecombo);\n    }\n\n    printPrettyTimeslots(allstarttimes3, allendtimes3, finalmasterArray);\n  };\n\n  function printPrettyTimeslots(allstarttimes3, allendtimes3, finalmasterArray) {\n    var awesomeArray = [];\n    let diff = \"\";\n    let beginfreeslot = \"\";\n    let endfreeslot = \"\";\n    let prettyStart = \"\";\n    let prettyEnd = \"\";\n    let prettyStartTime = \"\";\n    let prettyEndTime = \"\";\n    let splitStart = \"\";\n    let splitEnd = \"\";\n    let ogStart = \"\";\n    let ogEnd = \"\";\n\n    for (let x = 0; x < finalmasterArray.length - 1; x++) {\n      var times = finalmasterArray[x];\n      var curstart = times[0];\n      var curend = times[1];\n      var times = finalmasterArray[x + 1];\n      var nextstart = times[0];\n      var nextend = times[1];\n\n      if (x == 0) {\n        // First element, subtract from 8am\n        let eightAm = new Date(curstart);\n        eightAm.setHours(8);\n        eightAm.setMinutes(0);\n        eightAm.setSeconds(0);\n        eightAm = eightAm.getTime();\n        eightAm = new Date(eightAm);\n        let diff = curstart - eightAm;\n\n        if (diff > 0 && diff < 36000000) {\n          let beginfreeslot = eightAm;\n          eightAm = eightAm.getTime();\n          let endfreeslot = eightAm + diff;\n          let prettyStart = new Date(beginfreeslot);\n          let prettyEnd = new Date(endfreeslot);\n          let prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          let prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          let splitStart = prettyStartTime.split(\" \");\n          let splitEnd = prettyEndTime.split(\" \");\n          let ogStart = splitStart[1];\n          let ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n\n        diff = nextstart - curend;\n\n        if (diff > 0 && diff < 36000000) {\n          let beginfreeslot = curend;\n          let endfreeslot = nextstart + diff;\n          let prettyStart = new Date(beginfreeslot);\n          let prettyEnd = new Date(endfreeslot);\n          let prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          let prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          let splitStart = prettyStartTime.split(\" \");\n          let splitEnd = prettyEndTime.split(\" \");\n          let ogStart = splitStart[1];\n          let ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n      } else if (x == finalmasterArray.length - 2) {\n        diff = nextstart - curend;\n\n        if (diff > 0 && diff < 36000000) {\n          let beginfreeslot = curend;\n          let endfreeslot = nextstart + diff;\n          let prettyStart = new Date(beginfreeslot);\n          let prettyEnd = new Date(endfreeslot);\n          let prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          let prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          let splitStart = prettyStartTime.split(\" \");\n          let splitEnd = prettyEndTime.split(\" \");\n          let ogStart = splitStart[1];\n          let ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        } // Proceed to add final end of day -> 8 pm time slot\n\n\n        let sevenPm = new Date(curend);\n        sevenPm.setHours(8 + 12);\n        sevenPm.setMinutes(0);\n        sevenPm.setSeconds(0);\n        nextend = nextend.getTime();\n        diff = sevenPm - nextend;\n\n        if (diff > 0 && diff < 36000000) {\n          // nextend = nextend.getTime()\n          beginfreeslot = nextend;\n          endfreeslot = nextend + diff;\n          prettyStart = new Date(beginfreeslot);\n          prettyEnd = new Date(endfreeslot);\n          prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          splitStart = prettyStartTime.split(\" \");\n          splitEnd = prettyEndTime.split(\" \");\n          ogStart = splitStart[1];\n          ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n      } else {\n        let diff = nextstart - curend;\n\n        if (diff > 0 && diff < 36000000) {\n          beginfreeslot = curend;\n          endfreeslot = nextstart + diff;\n          prettyStart = new Date(beginfreeslot);\n          prettyEnd = new Date(endfreeslot);\n          prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\"\n          });\n          splitStart = prettyStartTime.split(\" \");\n          splitEnd = prettyEndTime.split(\" \");\n          ogStart = splitStart[1];\n          ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n      }\n    } // Remove old elements in list\n\n\n    console.log(\"awesome array\");\n    console.log(awesomeArray);\n    var finalArr = [];\n\n    for (let x = 0; x < awesomeArray.length; x++) {\n      var times = awesomeArray[x];\n      var curstart = times[0];\n      curstart = new Date(curstart.setHours(curstart.getHours() + 0));\n      var curend = times[1];\n      curend = new Date(curend.setHours(curend.getHours() + 0));\n      var comb = [curstart, curend];\n      finalArr.push(comb);\n      let curstartString = String(curstart);\n      let curendString = String(curend);\n      let startstring = curstart.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n        timeStyle: \"short\",\n        dateStyle: \"short\"\n      });\n      let endstring = curend.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n        timeStyle: \"short\",\n        dateStyle: \"short\"\n      });\n      let startstringsplit = curstartString.split(\" \");\n      let pretty_dayofweek = startstringsplit[0];\n      let month = curstart.getMonth() + 1;\n      let day = curstart.getDate();\n      let startstringsplit2 = startstring.split(\" \");\n      let pretty_starttime = startstringsplit2[1] + \" \" + startstringsplit2[2];\n      let endstringsplit2 = endstring.split(\" \");\n      let pretty_endtime = endstringsplit2[1] + \" \" + endstringsplit2[2];\n      let prettystring = pretty_dayofweek + \" \" + month + \"/\" + day + \": \" + pretty_starttime + \" to \" + pretty_endtime;\n      console.log(\"prettty\" + prettystring);\n    }\n\n    console.log(finalArr);\n    setFreeTimes(finalArr);\n    finishUp(finalArr);\n  }\n\n  const unique_days = [];\n\n  const finishUp = finalArr => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n\n      if (unique_days.includes(String(xx)) === false) {\n        unique_days.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n    const motherToEndAll = [];\n\n    for (let i = 0; i < unique_days.length; i++) {\n      const thisDay = unique_days[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n      const thisDayTimes = [];\n\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = dayObj[0];\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  function removeTime() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return new Date(date.toDateString());\n  }\n\n  const getDate = inputDate => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [props.outputReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: freeTimes.map(test => {\n        console.log(\"yoyoyoyo\");\n        const thisDate = test[0];\n        const thisDateTimeSlots = test[1];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [thisDate, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: thisDateTimeSlots.map(item => {\n                console.log(\"item here\");\n                console.log(item);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [item.start, \" to \", item.end]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-upload\",\n      onClick: fetchFreeTimes,\n      children: [\" \", \"Fetch free times\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 762,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarOutput, \"DJ6JTRgv6EuA/Jm8jQ8tceQuON4=\");\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","useState","useEffect","CalendarOutput","props","freeTimes","setFreeTimes","allStartTimes","allEndTimes","busyBlocksToAdd","fetchFreeTimes","start","Date","startDate","setHours","setMinutes","setSeconds","toISOString","end","endDate","piza","setEndDate","console","log","request","timeMin","timeMax","timeZone","cals","i","selectedCalendars","length","calObj","id","push","items","num_days","getDate","x","day","curDateDay","inputDate","morningBusyStart","setDate","setFullYear","getFullYear","morningBusyEnd","nightBusyStart","nightBusyEnd","morningBusyStart_formatted","date","morningBusyEnd_formatted","nightBusyStart_formatted","nightBusyEnd_formatted","timecombo","gapi","client","calendar","freebusy","query","then","response","allTimes","k","curCal","busyTimes","result","calendars","busy","busyBlock","startTime","endTime","data","data2","test","getTime","newfunc","err","error","times","sort","a","b","merged","left","right","comp","Math","max","consolidateAllBusyTimes","c","d","startTimes","endTimes","masterArray","timeStartDateFormat","timeEndDateFormat","prettyStartTime","toLocaleString","prettyEndTime","start2","end2","newtimes","curstart","curend","latestend","newtime","shouldWeAddIt","newertimes","shouldAdd","newesttimes","removedtimes","finaltimes","allstarttimes3","allendtimes3","finalmasterArray","printPrettyTimeslots","awesomeArray","diff","beginfreeslot","endfreeslot","prettyStart","prettyEnd","splitStart","splitEnd","ogStart","ogEnd","nextstart","nextend","eightAm","split","sevenPm","finalArr","getHours","comb","curstartString","String","curendString","startstring","timeStyle","dateStyle","endstring","startstringsplit","pretty_dayofweek","month","getMonth","startstringsplit2","pretty_starttime","endstringsplit2","pretty_endtime","prettystring","finishUp","unique_days","temp","map","obj","arr","xx","includes","motherToEndAll","thisDay","dkl","hihi","toLocaleDateString","thisDayTimes","j","dayObj","firstTime","secondTime","startDay2","removeTime","freeTimeSlot","temp1","splitted1","splitted","finalDolphin","setOutputReady","toDateString","dods","outputReady","thisDate","thisDateTimeSlots","item"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\n\nconst CalendarOutput = (props) => {\n  const [freeTimes, setFreeTimes] = useState();\n  // const [outputReady, setOutputReady] = useState(false)\n\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  const fetchFreeTimes = () => {\n    // Check if endDate is set, if not set to startDate\n\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString();\n\n    // Format end date to 8 pm\n    let end = \"\";\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n    end.setHours(20);\n    end.setMinutes(0);\n    end.setSeconds(0);\n    end = end.toISOString();\n\n    console.log(start);\n    console.log(end);\n\n    // Build request body\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\";\n\n    // Create calendars object\n    let cals = [];\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n\n    let num_days = \"\";\n    if (props.endDate === null) {\n      console.log(\"we here\");\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      let num_days = props.endDate.getDate() - props.startDate.getDate();\n    }\n\n    // for each day in between input dates, add event\n    // day1 8am 830am, 8pm to day2 8am\n    for (let x = 0; x < num_days; x++) {\n      let day = props.startDate.getDate();\n\n      let curDateDay = day + x;\n      let inputDate = props.startDate;\n\n      //appendPre(curDateDay)\n      let morningBusyStart = new Date();\n      morningBusyStart.setDate(curDateDay);\n      morningBusyStart.setHours(8);\n      morningBusyStart.setMinutes(0);\n      morningBusyStart.setSeconds(0);\n      morningBusyStart.setFullYear(inputDate.getFullYear());\n\n      let morningBusyEnd = new Date();\n      morningBusyEnd.setDate(curDateDay);\n      morningBusyEnd.setHours(8);\n      morningBusyEnd.setMinutes(30);\n      morningBusyEnd.setSeconds(0);\n      morningBusyEnd.setFullYear(inputDate.getFullYear());\n\n      let nightBusyStart = new Date();\n      nightBusyStart.setDate(curDateDay);\n      nightBusyStart.setHours(20);\n      nightBusyStart.setMinutes(0);\n      nightBusyStart.setSeconds(0);\n      nightBusyStart.setFullYear(inputDate.getFullYear());\n\n      let nightBusyEnd = new Date();\n      nightBusyEnd.setDate(curDateDay);\n      nightBusyEnd.setHours(20);\n      nightBusyEnd.setMinutes(30);\n      nightBusyEnd.setSeconds(0);\n      nightBusyEnd.setFullYear(inputDate.getFullYear());\n\n      // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n      // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n      var morningBusyStart_formatted = { date: morningBusyStart };\n      var morningBusyEnd_formatted = { date: morningBusyEnd };\n\n      var nightBusyStart_formatted = { date: nightBusyStart };\n      var nightBusyEnd_formatted = { date: nightBusyEnd };\n\n      allStartTimes.push(morningBusyStart_formatted);\n      allEndTimes.push(morningBusyEnd_formatted);\n\n      allStartTimes.push(nightBusyStart_formatted);\n      allEndTimes.push(nightBusyEnd_formatted);\n\n      let timecombo = [morningBusyStart, morningBusyEnd];\n      busyBlocksToAdd.push(timecombo);\n    }\n\n    console.log(\"busy blocks to add\");\n    console.log(busyBlocksToAdd);\n    return gapi.client.calendar.freebusy\n      .query(request)\n\n      .then(\n        function (response) {\n          let allTimes = [];\n          for (let k = 0; k < props.selectedCalendars.length; k++) {\n            var curCal = props.selectedCalendars[k];\n            var busyTimes = response.result.calendars[curCal].busy;\n\n            for (let i = 0; i < busyTimes.length; i++) {\n              var busyBlock = busyTimes[i];\n              console.log(\"Busy block for \" + curCal, busyBlock);\n\n              var startTime = busyBlock.start;\n              var endTime = busyBlock.end;\n\n              var data = { date: startTime };\n              var data2 = { date: endTime };\n\n              allStartTimes.push(data);\n              allEndTimes.push(data2);\n              let test = [\n                new Date(startTime).getTime(),\n                new Date(endTime).getTime(),\n              ];\n              allTimes.push(test);\n            }\n          }\n\n          console.log(allStartTimes);\n          console.log(\"all end times \");\n          console.log(allEndTimes);\n          console.log(\"other all times\");\n          // console.log(allTimes);\n          // consolidateAllBusyTimes();\n          newfunc(allTimes);\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  };\n\n  const newfunc = (times) => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    const merged = [];\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n\n        var comp = Math.max(left, right);\n        console.log(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n    }\n\n    console.log(merged);\n  };\n\n  const consolidateAllBusyTimes = () => {\n    allStartTimes.sort(function (a, b) {\n      var c = new Date(a.date);\n      var d = new Date(b.date);\n      return c - d;\n    });\n\n    //    appendPre(\"- - - - - - - Sorting end times\")\n\n    allEndTimes.sort(function (a, b) {\n      var c = new Date(a.date);\n      var d = new Date(b.date);\n      return c - d;\n    });\n\n    let startTimes = allStartTimes;\n    let endTimes = allEndTimes;\n\n    var masterArray = [];\n    for (let x = 0; x < startTimes.length; x++) {\n      let startTime = startTimes[x].date;\n      let endTime = endTimes[x].date;\n\n      let timeStartDateFormat = new Date(startTime);\n      let timeEndDateFormat = new Date(endTime);\n\n      let prettyStartTime = timeStartDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n      });\n      let prettyEndTime = timeEndDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n      });\n\n      let timecombo = [timeStartDateFormat, timeEndDateFormat];\n      masterArray.push(timecombo);\n    }\n\n    for (let k = 0; k < masterArray.length; k++) {\n      let data = masterArray[k];\n      let start = data[0];\n      let end = data[1];\n\n      let start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      let end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n\n      console.log(k + \" Start: \" + start2 + \" || End: \" + end2);\n    }\n\n    // STEP 1 merge all same start times\n    var newtimes = [];\n    for (let x = 0; x < masterArray.length; x++) {\n      var data = masterArray[x];\n\n      var curstart = data[0].getTime();\n      var curend = data[1].getTime();\n\n      var latestend = curend;\n\n      for (let i = 0; i < masterArray.length; i++) {\n        var data2 = masterArray[i];\n\n        var start2 = data2[0].getTime();\n        var end2 = data2[1].getTime();\n        if (curstart == start2) {\n          if (latestend < end2) {\n            latestend = end2;\n          }\n        }\n      }\n\n      let newtime = [curstart, latestend];\n\n      var shouldWeAddIt = true;\n      for (let k = 0; k < newtimes.length; k++) {\n        let data = newtimes[k];\n        let start = data[0];\n        let end = data[1];\n\n        if (start == curstart) {\n          if (end == latestend) {\n            shouldWeAddIt = false;\n          }\n        } else {\n        }\n      }\n\n      if (shouldWeAddIt) {\n        newtimes.push(newtime);\n      }\n    }\n\n    // print OG array\n    //\n    //  appendPre(\"Merging same start times\");\n    for (let k = 0; k < newtimes.length; k++) {\n      let data = newtimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n\n      //appendPre(k + \" Start: \" + start2 + \" || End: \" + end2);\n    }\n\n    // STEP 2  Remove times within larger time blocks\n    var newertimes = [];\n    for (let x = 0; x < newtimes.length; x++) {\n      var data = newtimes[x];\n\n      var curstart = data[0];\n      var curend = data[1];\n      var latestend = curend;\n\n      var shouldAdd = true;\n      for (let i = 0; i < newtimes.length; i++) {\n        var data2 = newtimes[i];\n        var start2 = data2[0];\n        var end2 = data2[1];\n\n        if (start2 < curstart) {\n          if (end2 > curend) {\n            shouldAdd = false;\n          }\n        }\n      }\n\n      let newtime = [curstart, curend];\n\n      if (shouldAdd) {\n        newertimes.push(newtime);\n      }\n    }\n\n    // STEP 2 printing results\n    //  appendPre(\"TIMES WITH OVERLAPPING BLOCKS REMOVED: \" + newertimes);\n    for (let k = 0; k < newertimes.length; k++) {\n      data = newertimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      let start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      let end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n    }\n\n    // STEP  3 FINAL STEP - consolidate back to back events\n    var newesttimes = [];\n    var removedtimes = [];\n    for (let x = 0; x < newertimes.length; x++) {\n      var data = newertimes[x];\n\n      var curstart = data[0];\n      var curend = data[1];\n\n      for (let i = 0; i < newertimes.length; i++) {\n        var data2 = newertimes[i];\n\n        var start2 = data2[0];\n        var end2 = data2[1];\n\n        if (curend > start2) {\n          if (curend < end2) {\n            let newtime = [curstart, end2];\n            newesttimes.push(newtime);\n            removedtimes.push([curstart, curend]);\n            removedtimes.push([start2, end2]);\n          }\n        }\n      }\n    }\n\n    // STEP 3 printing results\n    for (let k = 0; k < newesttimes.length; k++) {\n      data = newesttimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      let start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      let end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n    }\n\n    // more printing results\n    for (let k = 0; k < removedtimes.length; k++) {\n      data = removedtimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      let start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      let end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n    }\n\n    // Adding consolidated times together, finishing up etc\n    var finaltimes = [];\n    for (let k = 0; k < newertimes.length; k++) {\n      data = newertimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      var shouldWeAddIt = true;\n\n      for (let x = 0; x < removedtimes.length; x++) {\n        let data2 = removedtimes[x];\n        let start2 = data2[0];\n        let end2 = data2[1];\n\n        if (start2 == start) {\n          if (end2 == end) {\n            shouldWeAddIt = false;\n          }\n        }\n      }\n\n      if (shouldWeAddIt == true) {\n        finaltimes.push(data);\n      }\n    }\n\n    for (let k = 0; k < finaltimes.length; k++) {\n      data = finaltimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      let start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      let end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n    }\n\n    for (let k = 0; k < newesttimes.length; k++) {\n      let data = newesttimes[k];\n      finaltimes.push(data);\n    }\n\n    for (let k = 0; k < finaltimes.length; k++) {\n      data = finaltimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      let start2 = new Date(start).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n      let end2 = new Date(end).toLocaleString(\"en-US\", { timeZone: \"EST\" });\n    }\n\n    var allstarttimes3 = [];\n    var allendtimes3 = [];\n    for (let k = 0; k < finaltimes.length; k++) {\n      data = finaltimes[k];\n      let start = data[0];\n      let end = data[1];\n\n      allstarttimes3.push(start);\n      allendtimes3.push(end);\n    }\n\n    allstarttimes3.sort(function (a, b) {\n      return a - b;\n    });\n    allendtimes3.sort(function (a, b) {\n      return a - b;\n    });\n\n    var finalmasterArray = [];\n\n    for (let x = 0; x < allstarttimes3.length; x++) {\n      let startTime = allstarttimes3[x];\n      let endTime = allendtimes3[x];\n\n      let timeStartDateFormat = new Date(startTime);\n      let timeEndDateFormat = new Date(endTime);\n\n      let prettyStartTime = timeStartDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n      });\n      let prettyEndTime = timeEndDateFormat.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n      });\n\n      let timecombo = [timeStartDateFormat, timeEndDateFormat];\n      finalmasterArray.push(timecombo);\n    }\n\n    printPrettyTimeslots(allstarttimes3, allendtimes3, finalmasterArray);\n  };\n\n  function printPrettyTimeslots(\n    allstarttimes3,\n    allendtimes3,\n    finalmasterArray\n  ) {\n    var awesomeArray = [];\n    let diff = \"\";\n    let beginfreeslot = \"\";\n    let endfreeslot = \"\";\n    let prettyStart = \"\";\n    let prettyEnd = \"\";\n    let prettyStartTime = \"\";\n    let prettyEndTime = \"\";\n    let splitStart = \"\";\n    let splitEnd = \"\";\n    let ogStart = \"\";\n    let ogEnd = \"\";\n    for (let x = 0; x < finalmasterArray.length - 1; x++) {\n      var times = finalmasterArray[x];\n      var curstart = times[0];\n      var curend = times[1];\n\n      var times = finalmasterArray[x + 1];\n\n      var nextstart = times[0];\n      var nextend = times[1];\n\n      if (x == 0) {\n        // First element, subtract from 8am\n        let eightAm = new Date(curstart);\n\n        eightAm.setHours(8);\n        eightAm.setMinutes(0);\n        eightAm.setSeconds(0);\n\n        eightAm = eightAm.getTime();\n        eightAm = new Date(eightAm);\n\n        let diff = curstart - eightAm;\n\n        if (diff > 0 && diff < 36000000) {\n          let beginfreeslot = eightAm;\n          eightAm = eightAm.getTime();\n          let endfreeslot = eightAm + diff;\n          let prettyStart = new Date(beginfreeslot);\n          let prettyEnd = new Date(endfreeslot);\n\n          let prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n          let prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n\n          let splitStart = prettyStartTime.split(\" \");\n          let splitEnd = prettyEndTime.split(\" \");\n\n          let ogStart = splitStart[1];\n          let ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n\n        diff = nextstart - curend;\n\n        if (diff > 0 && diff < 36000000) {\n          let beginfreeslot = curend;\n          let endfreeslot = nextstart + diff;\n          let prettyStart = new Date(beginfreeslot);\n          let prettyEnd = new Date(endfreeslot);\n\n          let prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n          let prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n\n          let splitStart = prettyStartTime.split(\" \");\n          let splitEnd = prettyEndTime.split(\" \");\n\n          let ogStart = splitStart[1];\n          let ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n      } else if (x == finalmasterArray.length - 2) {\n        diff = nextstart - curend;\n\n        if (diff > 0 && diff < 36000000) {\n          let beginfreeslot = curend;\n          let endfreeslot = nextstart + diff;\n          let prettyStart = new Date(beginfreeslot);\n          let prettyEnd = new Date(endfreeslot);\n\n          let prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n          let prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n\n          let splitStart = prettyStartTime.split(\" \");\n          let splitEnd = prettyEndTime.split(\" \");\n\n          let ogStart = splitStart[1];\n          let ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n\n        // Proceed to add final end of day -> 8 pm time slot\n        let sevenPm = new Date(curend);\n\n        sevenPm.setHours(8 + 12);\n        sevenPm.setMinutes(0);\n        sevenPm.setSeconds(0);\n\n        nextend = nextend.getTime();\n\n        diff = sevenPm - nextend;\n\n        if (diff > 0 && diff < 36000000) {\n          // nextend = nextend.getTime()\n          beginfreeslot = nextend;\n          endfreeslot = nextend + diff;\n\n          prettyStart = new Date(beginfreeslot);\n          prettyEnd = new Date(endfreeslot);\n\n          prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n          prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n\n          splitStart = prettyStartTime.split(\" \");\n          splitEnd = prettyEndTime.split(\" \");\n\n          ogStart = splitStart[1];\n          ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n      } else {\n        let diff = nextstart - curend;\n\n        if (diff > 0 && diff < 36000000) {\n          beginfreeslot = curend;\n          endfreeslot = nextstart + diff;\n          prettyStart = new Date(beginfreeslot);\n          prettyEnd = new Date(endfreeslot);\n\n          prettyStartTime = prettyStart.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n          prettyEndTime = prettyEnd.toLocaleString(\"en-US\", {\n            timeZone: \"EST\",\n          });\n\n          splitStart = prettyStartTime.split(\" \");\n          splitEnd = prettyEndTime.split(\" \");\n\n          ogStart = splitStart[1];\n          ogEnd = splitEnd[1];\n          awesomeArray.push([prettyStart, prettyEnd]);\n        }\n      }\n    }\n\n    // Remove old elements in list\n    console.log(\"awesome array\");\n    console.log(awesomeArray);\n    var finalArr = [];\n    for (let x = 0; x < awesomeArray.length; x++) {\n      var times = awesomeArray[x];\n      var curstart = times[0];\n      curstart = new Date(curstart.setHours(curstart.getHours() + 0));\n      var curend = times[1];\n      curend = new Date(curend.setHours(curend.getHours() + 0));\n\n      var comb = [curstart, curend];\n      finalArr.push(comb);\n\n      let curstartString = String(curstart);\n      let curendString = String(curend);\n\n      let startstring = curstart.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n        timeStyle: \"short\",\n        dateStyle: \"short\",\n      });\n      let endstring = curend.toLocaleString(\"en-US\", {\n        timeZone: \"EST\",\n        timeStyle: \"short\",\n        dateStyle: \"short\",\n      });\n\n      let startstringsplit = curstartString.split(\" \");\n      let pretty_dayofweek = startstringsplit[0];\n      let month = curstart.getMonth() + 1;\n      let day = curstart.getDate();\n\n      let startstringsplit2 = startstring.split(\" \");\n      let pretty_starttime = startstringsplit2[1] + \" \" + startstringsplit2[2];\n      let endstringsplit2 = endstring.split(\" \");\n      let pretty_endtime = endstringsplit2[1] + \" \" + endstringsplit2[2];\n\n      let prettystring =\n        pretty_dayofweek +\n        \" \" +\n        month +\n        \"/\" +\n        day +\n        \": \" +\n        pretty_starttime +\n        \" to \" +\n        pretty_endtime;\n      console.log(\"prettty\" + prettystring);\n    }\n    console.log(finalArr);\n    setFreeTimes(finalArr);\n    finishUp(finalArr);\n  }\n\n  const unique_days = [];\n  const finishUp = (finalArr) => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n      if (unique_days.includes(String(xx)) === false) {\n        unique_days.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n\n    const motherToEndAll = [];\n    for (let i = 0; i < unique_days.length; i++) {\n      const thisDay = unique_days[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n\n      const thisDayTimes = [];\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = dayObj[0];\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  function removeTime(date = new Date()) {\n    return new Date(date.toDateString());\n  }\n\n  const getDate = (inputDate) => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return (\n    <div className=\"todo-container\">\n      {props.outputReady ? (\n        <div>\n          {freeTimes.map((test) => {\n            console.log(\"yoyoyoyo\");\n            const thisDate = test[0];\n            const thisDateTimeSlots = test[1];\n            return (\n              <div>\n                <div>\n                  <h2>{thisDate}:</h2>\n                  <ul>\n                    {thisDateTimeSlots.map((item) => {\n                      console.log(\"item here\");\n                      console.log(item);\n                      return (\n                        <div>\n                          <li>\n                            {item.start} to {item.end}\n                          </li>\n                          {/* <p>Start time: {item.start}</p>\n                            <p>End time: {item.end}</p> */}\n                        </div>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <button className=\"btn-upload\" onClick={fetchFreeTimes}>\n          {\" \"}\n          Fetch free times{\" \"}\n        </button>\n      )}\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default CalendarOutput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}