{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/FreeTimeFinder.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { about } from '../../portfolio';\nimport { ftf } from '../../portfolio';\nimport './FreeTimeFinder.css';\n/* exported gapiLoaded */\n\n/* exported gisLoaded */\n\n/* exported handleAuthClick */\n\n/* exported handleSignoutClick */\n// TODO(developer): Set to client ID and API key from the Developer Console\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '152166915524-g9q80tsfovgpek2bsgi8hhvbm7074nh6.apps.googleusercontent.com';\nconst API_KEY = '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'; // Discovery doc URL for APIs used by the quickstart\n\nconst DISCOVERY_DOC = 'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.readonly';\nlet tokenClient;\nlet gapiInited = false;\nlet gisInited = false;\ndocument.getElementById('authorize_button').style.visibility = 'hidden';\ndocument.getElementById('signout_button').style.visibility = 'hidden';\n/**\n * Callback after api.js is loaded.\n */\n\nfunction gapiLoaded() {\n  gapi.load('client', intializeGapiClient);\n}\n/**\n * Callback after the API client is loaded. Loads the\n * discovery doc to initialize the API.\n */\n\n\nasync function intializeGapiClient() {\n  await gapi.client.init({\n    apiKey: API_KEY,\n    discoveryDocs: [DISCOVERY_DOC]\n  });\n  gapiInited = true;\n  maybeEnableButtons();\n}\n/**\n * Callback after Google Identity Services are loaded.\n */\n\n\nfunction gisLoaded() {\n  tokenClient = google.accounts.oauth2.initTokenClient({\n    client_id: CLIENT_ID,\n    scope: SCOPES,\n    callback: '' // defined later\n\n  });\n  gisInited = true;\n  maybeEnableButtons();\n}\n/**\n * Enables user interaction after all libraries are loaded.\n */\n\n\nfunction maybeEnableButtons() {\n  if (gapiInited && gisInited) {\n    document.getElementById('authorize_button').style.visibility = 'visible';\n  }\n}\n/**\n *  Sign in the user upon button click.\n */\n\n\nfunction handleAuthClick() {\n  tokenClient.callback = async resp => {\n    if (resp.error !== undefined) {\n      throw resp;\n    }\n\n    document.getElementById('signout_button').style.visibility = 'visible';\n    document.getElementById('authorize_button').innerText = 'Refresh';\n    await listUpcomingEvents();\n  };\n\n  if (gapi.client.getToken() === null) {\n    // Prompt the user to select a Google Account and ask for consent to share their data\n    // when establishing a new session.\n    tokenClient.requestAccessToken({\n      prompt: 'consent'\n    });\n  } else {\n    // Skip display of account chooser and consent dialog for an existing session.\n    tokenClient.requestAccessToken({\n      prompt: ''\n    });\n  }\n}\n/**\n *  Sign out the user upon button click.\n */\n\n\nfunction handleSignoutClick() {\n  const token = gapi.client.getToken();\n\n  if (token !== null) {\n    google.accounts.oauth2.revoke(token.access_token);\n    gapi.client.setToken('');\n    document.getElementById('content').innerText = '';\n    document.getElementById('authorize_button').innerText = 'Authorize';\n    document.getElementById('signout_button').style.visibility = 'hidden';\n  }\n}\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\n\n\nasync function listUpcomingEvents() {\n  let response;\n\n  try {\n    const request = {\n      'calendarId': 'primary',\n      'timeMin': new Date().toISOString(),\n      'showDeleted': false,\n      'singleEvents': true,\n      'maxResults': 10,\n      'orderBy': 'startTime'\n    };\n    response = await gapi.client.calendar.events.list(request);\n  } catch (err) {\n    document.getElementById('content').innerText = err.message;\n    return;\n  }\n\n  const events = response.result.items;\n\n  if (!events || events.length == 0) {\n    document.getElementById('content').innerText = 'No events found.';\n    return;\n  } // Flatten to string to display\n\n\n  const output = events.reduce((str, event) => `${str}${event.summary} (${event.start.dateTime || event.start.date})\\n`, 'Events:\\n');\n  document.getElementById('content').innerText = output;\n}\n\nconst FreeTimeFinder = () => {\n  _s();\n\n  const {\n    title,\n    description,\n    subhead,\n    socidal\n  } = ftf;\n  const [imageProcessing, setImageProcessing] = useState(false);\n  const [imageFailed, setImageFailed] = useState(false);\n  const [processedImages, setProcessedImages] = useState(null); // const [inputImage, setInputImage] = useState(null)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about center\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      async: true,\n      defer: true,\n      src: \"https://apis.google.com/js/api.js\",\n      onload: \"gapiLoaded()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      async: true,\n      defer: true,\n      src: \"https://accounts.google.com/gsi/client\",\n      onload: \"gisLoaded()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"about__role\",\n      children: [subhead, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"about__desc\",\n      children: description && description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"authorize_button\",\n      onclick: \"handleAuthClick()\",\n      children: \"Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"signout_button\",\n      onclick: \"handleSignoutClick()\",\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      id: \"content\",\n      style: \"white-space: pre-wrap;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FreeTimeFinder, \"tLv2RvcKGlFqS/1F/yI9U+WuXHY=\");\n\n_c = FreeTimeFinder;\nexport default FreeTimeFinder; // // Client ID and API key from the Developer Console\n// var CLIENT_ID = '386967852141-aatkt445rf6avuukbl8hrg3tp9do6bfb.apps.googleusercontent.com';\n// var API_KEY = 'AIzaSyCDrWptgYHqM53eScUgq7gbXbpFatWVwvA';\n// // Array of API discovery doc URLs for APIs used by the quickstart\n// var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n// // Authorization scopes required by the API; multiple scopes can be\n// // included, separated by spaces.\n// var SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n// var authorizeButton = document.getElementById('authorize_button');\n// var signoutButton = document.getElementById('signout_button');\n// /**\n//  *  On load, called to load the auth2 library and API client library.\n//  */\n// function handleClientLoad() {\n// gapi.load('client:auth2', initClient);\n// }\n// /**\n//  *  Initializes the API client library and sets up sign-in state\n//  *  listeners.\n//  */\n// function initClient() {\n// gapi.client.init({\n//     apiKey: API_KEY,\n//     clientId: CLIENT_ID,\n//     discoveryDocs: DISCOVERY_DOCS,\n//     scope: SCOPES\n// }).then(function () {\n//     // Listen for sign-in state changes.\n//     gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n//     // Handle the initial sign-in state.\n//     updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n//     authorizeButton.onclick = handleAuthClick;\n//     signoutButton.onclick = handleSignoutClick;\n// }, function(error) {\n//     appendPre(JSON.stringify(error, null, 2));\n// });\n// }\n// /**\n//  *  Called when the signed in status changes, to update the UI\n//  *  appropriately. After a sign-in, the API is called.\n//  */\n// function updateSigninStatus(isSignedIn) {\n// if (isSignedIn) {\n//     authorizeButton.style.display = 'none';\n//     signoutButton.style.display = 'block';\n//     //listUpcomingEvents();\n//     getCalendarIDs();\n// } else {\n//     authorizeButton.style.display = 'block';\n//     signoutButton.style.display = 'none';\n// }\n// }\n// /**\n//  *  Sign in the user upon button click.\n//  */\n// function handleAuthClick(event) {\n// gapi.auth2.getAuthInstance().signIn();\n// }\n// /**\n//  *  Sign out the user upon button click.\n//  */\n// function handleSignoutClick(event) {\n// gapi.auth2.getAuthInstance().signOut();\n// }\n// /**\n//  * Append a pre element to the body containing the given message\n//  * as its text node. Used to display the results of the API call.\n//  *\n//  * @param {string} message Text to be placed in pre element.\n//  */\n// function appendPre(message) {\n// var pre = document.getElementById('content');\n// var textContent = document.createTextNode(message + '\\n');\n// pre.appendChild(textContent);\n// }\n// /**\n//  * Append a pre element to the body containing the given message\n//  * as its text node with a bullet point.\n//  *\n//  * @param {string} message Text to be placed in pre element.\n//  */\n// function appendToList(message) {\n// var pre = document.getElementById('content');\n// var textContent = document.createTextNode(message + '\\n');\n// pre.appendChild(textContent);\n// }\n// /**\n//  * Append a pre element to the body containing the given message\n//  * as its text node with a bullet point.\n//  *\n//  * @param {string} message Text to be placed in pre element.\n//  */\n// function appendPre(message) {\n// var pre = document.getElementById('content');\n// var textContent = document.createTextNode(message + '\\n');\n// pre.appendChild(textContent);\n// }\n// /**\n//  * Print the summary and start datetime/date of the next ten events in\n//  * the authorized user's calendar. If no events are found an\n//  * appropriate message is printed.\n//  */\n// // this function is not called !!!\n// function loadTimes() {\n//     pushCheckboxStatesToLocalStorage();\n//     // makes request to Google Calendar API, populates free busy global arrays\n//     fetchFreeBusy();\n// // sorts global arrays, runs consolidation func\n//     sortGlobalArrays();\n// }\n// function listUpcomingEvents() {\n// gapi.client.calendar.events.list({\n//     'calendarId': 'primary',\n//     'timeMin': (new Date()).toISOString(),\n//     'showDeleted': false,\n//     'singleEvents': true,\n//     'maxResults': 10,\n//     'orderBy': 'startTime'\n// }).then(function(response) {\n//     var events = response.result.items;\n//     //appendPre('Upcoming events:');\n//     if (events.length > 0) {\n//     for (i = 0; i < events.length; i++) {\n//         var event = events[i];\n//         var when = event.start.dateTime;\n//         if (!when) {\n//         when = event.start.date;\n//         }\n//     //    appendPre(event.summary + ' (' + when + ')')\n//     }\n//     } else {\n//     //appendPre('No upcoming events found.');\n//     }\n// });\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeTimeFinder\");","map":{"version":3,"names":["React","axios","useState","useEffect","GitHubIcon","LinkedInIcon","about","ftf","CLIENT_ID","API_KEY","DISCOVERY_DOC","SCOPES","tokenClient","gapiInited","gisInited","document","getElementById","style","visibility","gapiLoaded","gapi","load","intializeGapiClient","client","init","apiKey","discoveryDocs","maybeEnableButtons","gisLoaded","google","accounts","oauth2","initTokenClient","client_id","scope","callback","handleAuthClick","resp","error","undefined","innerText","listUpcomingEvents","getToken","requestAccessToken","prompt","handleSignoutClick","token","revoke","access_token","setToken","response","request","Date","toISOString","calendar","events","list","err","message","result","items","length","output","reduce","str","event","summary","start","dateTime","date","FreeTimeFinder","title","description","subhead","socidal","imageProcessing","setImageProcessing","imageFailed","setImageFailed","processedImages","setProcessedImages"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/FreeTimeFinder.js"],"sourcesContent":["import React from \"react\"\nimport axios from \"axios\";\nimport { useState, useEffect} from 'react'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport { ftf } from '../../portfolio'\nimport './FreeTimeFinder.css'\n\n/* exported gapiLoaded */\n/* exported gisLoaded */\n/* exported handleAuthClick */\n/* exported handleSignoutClick */\n\n// TODO(developer): Set to client ID and API key from the Developer Console\nconst CLIENT_ID = '152166915524-g9q80tsfovgpek2bsgi8hhvbm7074nh6.apps.googleusercontent.com';\nconst API_KEY = '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';\n\n// Discovery doc URL for APIs used by the quickstart\nconst DISCOVERY_DOC = 'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest';\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.readonly';\n\nlet tokenClient;\nlet gapiInited = false;\nlet gisInited = false;\n\ndocument.getElementById('authorize_button').style.visibility = 'hidden';\ndocument.getElementById('signout_button').style.visibility = 'hidden';\n\n/**\n * Callback after api.js is loaded.\n */\nfunction gapiLoaded() {\n  gapi.load('client', intializeGapiClient);\n}\n\n/**\n * Callback after the API client is loaded. Loads the\n * discovery doc to initialize the API.\n */\nasync function intializeGapiClient() {\n  await gapi.client.init({\n    apiKey: API_KEY,\n    discoveryDocs: [DISCOVERY_DOC],\n  });\n  gapiInited = true;\n  maybeEnableButtons();\n}\n\n/**\n * Callback after Google Identity Services are loaded.\n */\nfunction gisLoaded() {\n  tokenClient = google.accounts.oauth2.initTokenClient({\n    client_id: CLIENT_ID,\n    scope: SCOPES,\n    callback: '', // defined later\n  });\n  gisInited = true;\n  maybeEnableButtons();\n}\n\n/**\n * Enables user interaction after all libraries are loaded.\n */\nfunction maybeEnableButtons() {\n  if (gapiInited && gisInited) {\n    document.getElementById('authorize_button').style.visibility = 'visible';\n  }\n}\n\n/**\n *  Sign in the user upon button click.\n */\nfunction handleAuthClick() {\n  tokenClient.callback = async (resp) => {\n    if (resp.error !== undefined) {\n      throw (resp);\n    }\n    document.getElementById('signout_button').style.visibility = 'visible';\n    document.getElementById('authorize_button').innerText = 'Refresh';\n    await listUpcomingEvents();\n  };\n\n  if (gapi.client.getToken() === null) {\n    // Prompt the user to select a Google Account and ask for consent to share their data\n    // when establishing a new session.\n    tokenClient.requestAccessToken({prompt: 'consent'});\n  } else {\n    // Skip display of account chooser and consent dialog for an existing session.\n    tokenClient.requestAccessToken({prompt: ''});\n  }\n}\n\n/**\n *  Sign out the user upon button click.\n */\nfunction handleSignoutClick() {\n  const token = gapi.client.getToken();\n  if (token !== null) {\n    google.accounts.oauth2.revoke(token.access_token);\n    gapi.client.setToken('');\n    document.getElementById('content').innerText = '';\n    document.getElementById('authorize_button').innerText = 'Authorize';\n    document.getElementById('signout_button').style.visibility = 'hidden';\n  }\n}\n\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\nasync function listUpcomingEvents() {\n  let response;\n  try {\n    const request = {\n      'calendarId': 'primary',\n      'timeMin': (new Date()).toISOString(),\n      'showDeleted': false,\n      'singleEvents': true,\n      'maxResults': 10,\n      'orderBy': 'startTime',\n    };\n    response = await gapi.client.calendar.events.list(request);\n  } catch (err) {\n    document.getElementById('content').innerText = err.message;\n    return;\n  }\n\n  const events = response.result.items;\n  if (!events || events.length == 0) {\n    document.getElementById('content').innerText = 'No events found.';\n    return;\n  }\n  // Flatten to string to display\n  const output = events.reduce(\n      (str, event) => `${str}${event.summary} (${event.start.dateTime || event.start.date})\\n`,\n      'Events:\\n');\n  document.getElementById('content').innerText = output;\n}\n\nconst FreeTimeFinder = () => {\n  const { title, description, subhead, socidal } = ftf\n\n  const [imageProcessing, setImageProcessing] = useState(false)\n  const [imageFailed, setImageFailed] = useState(false)\n  const [processedImages, setProcessedImages] = useState(null)\n  // const [inputImage, setInputImage] = useState(null)\n\n  return (\n    \n    <div className='about center'>\n      <script async defer src=\"https://apis.google.com/js/api.js\" onload=\"gapiLoaded()\"></script>\n      <script async defer src=\"https://accounts.google.com/gsi/client\" onload=\"gisLoaded()\"></script>\n\n\n      <h1> {title} </h1>\n      <h2 className='about__role'>{subhead} </h2>\n      <p className='about__desc'>{description && description}</p>\n\n\n    <button id=\"authorize_button\" onclick=\"handleAuthClick()\">Authorize</button>\n    <button id=\"signout_button\" onclick=\"handleSignoutClick()\">Sign Out</button>\n\n    <pre id=\"content\" style=\"white-space: pre-wrap;\"></pre>\n\n    </div>\n  )\n}\n\nexport default FreeTimeFinder\n\n    // // Client ID and API key from the Developer Console\n    // var CLIENT_ID = '386967852141-aatkt445rf6avuukbl8hrg3tp9do6bfb.apps.googleusercontent.com';\n    // var API_KEY = 'AIzaSyCDrWptgYHqM53eScUgq7gbXbpFatWVwvA';\n\n    // // Array of API discovery doc URLs for APIs used by the quickstart\n    // var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n\n    // // Authorization scopes required by the API; multiple scopes can be\n    // // included, separated by spaces.\n    // var SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\n    // var authorizeButton = document.getElementById('authorize_button');\n    // var signoutButton = document.getElementById('signout_button');\n\n    // /**\n    //  *  On load, called to load the auth2 library and API client library.\n    //  */\n    // function handleClientLoad() {\n    // gapi.load('client:auth2', initClient);\n    // }\n\n    // /**\n    //  *  Initializes the API client library and sets up sign-in state\n    //  *  listeners.\n    //  */\n    // function initClient() {\n    // gapi.client.init({\n    //     apiKey: API_KEY,\n    //     clientId: CLIENT_ID,\n    //     discoveryDocs: DISCOVERY_DOCS,\n    //     scope: SCOPES\n    // }).then(function () {\n    //     // Listen for sign-in state changes.\n    //     gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n    //     // Handle the initial sign-in state.\n    //     updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    //     authorizeButton.onclick = handleAuthClick;\n    //     signoutButton.onclick = handleSignoutClick;\n    // }, function(error) {\n    //     appendPre(JSON.stringify(error, null, 2));\n    // });\n    // }\n\n    // /**\n    //  *  Called when the signed in status changes, to update the UI\n    //  *  appropriately. After a sign-in, the API is called.\n    //  */\n    // function updateSigninStatus(isSignedIn) {\n    // if (isSignedIn) {\n    //     authorizeButton.style.display = 'none';\n    //     signoutButton.style.display = 'block';\n    //     //listUpcomingEvents();\n    //     getCalendarIDs();\n    // } else {\n    //     authorizeButton.style.display = 'block';\n    //     signoutButton.style.display = 'none';\n    // }\n    // }\n\n    // /**\n    //  *  Sign in the user upon button click.\n    //  */\n    // function handleAuthClick(event) {\n    // gapi.auth2.getAuthInstance().signIn();\n    // }\n\n    // /**\n    //  *  Sign out the user upon button click.\n    //  */\n    // function handleSignoutClick(event) {\n    // gapi.auth2.getAuthInstance().signOut();\n    // }\n\n    // /**\n    //  * Append a pre element to the body containing the given message\n    //  * as its text node. Used to display the results of the API call.\n    //  *\n    //  * @param {string} message Text to be placed in pre element.\n    //  */\n    // function appendPre(message) {\n    // var pre = document.getElementById('content');\n    // var textContent = document.createTextNode(message + '\\n');\n    // pre.appendChild(textContent);\n    // }\n\n    // /**\n    //  * Append a pre element to the body containing the given message\n    //  * as its text node with a bullet point.\n    //  *\n    //  * @param {string} message Text to be placed in pre element.\n    //  */\n    // function appendToList(message) {\n    // var pre = document.getElementById('content');\n    // var textContent = document.createTextNode(message + '\\n');\n    // pre.appendChild(textContent);\n    // }\n\n    // /**\n    //  * Append a pre element to the body containing the given message\n    //  * as its text node with a bullet point.\n    //  *\n    //  * @param {string} message Text to be placed in pre element.\n    //  */\n    // function appendPre(message) {\n    // var pre = document.getElementById('content');\n    // var textContent = document.createTextNode(message + '\\n');\n    // pre.appendChild(textContent);\n    // }\n\n    // /**\n    //  * Print the summary and start datetime/date of the next ten events in\n    //  * the authorized user's calendar. If no events are found an\n    //  * appropriate message is printed.\n    //  */\n\n    // // this function is not called !!!\n    // function loadTimes() {\n    //     pushCheckboxStatesToLocalStorage();\n\n    //     // makes request to Google Calendar API, populates free busy global arrays\n    //     fetchFreeBusy();\n\n    // // sorts global arrays, runs consolidation func\n    //     sortGlobalArrays();\n    // }\n\n    // function listUpcomingEvents() {\n    // gapi.client.calendar.events.list({\n    //     'calendarId': 'primary',\n    //     'timeMin': (new Date()).toISOString(),\n    //     'showDeleted': false,\n    //     'singleEvents': true,\n    //     'maxResults': 10,\n    //     'orderBy': 'startTime'\n    // }).then(function(response) {\n    //     var events = response.result.items;\n    //     //appendPre('Upcoming events:');\n\n    //     if (events.length > 0) {\n    //     for (i = 0; i < events.length; i++) {\n    //         var event = events[i];\n    //         var when = event.start.dateTime;\n    //         if (!when) {\n    //         when = event.start.date;\n    //         }\n    //     //    appendPre(event.summary + ' (' + when + ')')\n    //     }\n    //     } else {\n    //     //appendPre('No upcoming events found.');\n    //     }\n    // });\n    // }\n"],"mappings":"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},"metadata":{},"sourceType":"module"}