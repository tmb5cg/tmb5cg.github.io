{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  _s();\n\n  const [freeTimes, setFreeTimes] = useState(); // const [outputReady, setOutputReady] = useState(false)\n\n  const fetchFreeTimes = () => {\n    const busyTimes = [[\"2022-08-24T14:00:00.000Z\", \"2022-08-24T19:00:00.000Z\"], [\"2022-08-24T19:15:00.000Z\", \"2022-08-24T20:30:00.000Z\"], [\"2022-08-24T21:30:00.000Z\", \"2022-08-24T22:30:00.000Z\"], [\"2022-08-25T15:00:00.000Z\", \"2022-08-25T16:00:00.000Z\"], [\"2022-08-25T16:30:00.000Z\", \"2022-08-25T17:30:00.000Z\"], [\"2022-08-25T18:30:00.000Z\", \"2022-08-25T19:30:00.000Z\"], [\"2022-08-26T15:00:00.000Z\", \"2022-08-26T18:45:00.000Z\"]];\n    const startDate = \"2022-08-23T12:00:00.000Z\";\n    const endDate = \"2022-08-27T03:59:00.000Z\";\n    var daysOfYear = [];\n\n    for (var d = new Date(startDate); d <= new Date(endDate); d.setDate(d.getDate() + 1)) {\n      daysOfYear.push(new Date(d));\n    }\n\n    const finalPenguin = [];\n\n    for (let i = 0; i < daysOfYear.length; i++) {\n      var thisDay = new Date(daysOfYear[i]);\n      var thisDayMorning = new Date(thisDay.setHours(6, 0, 0));\n      var thisDayNight = new Date(thisDayMorning.getYear(), thisDayMorning.getMonth(), thisDayMorning.getDate(), 23);\n      var thisDayBusyTimes = [];\n\n      for (let x = 0; x < busyTimes.length; x++) {\n        var temp = busyTimes[x];\n\n        if (sameDay(thisDayMorning, temp[0])) {\n          thisDayBusyTimes.push(temp);\n        }\n      }\n\n      var freeTimes = [];\n\n      for (let x = 0; x < thisDayBusyTimes.length; x++) {\n        var start = new Date(thisDayBusyTimes[x][0]);\n        var end = new Date(thisDayBusyTimes[x][1]);\n\n        if (sameDay(thisDayMorning, start)) {\n          if (x === 0) {\n            var out = [];\n            var k = prettyTime(thisDayMorning);\n            var n = prettyTime(start);\n            out.start = k[1];\n            out.end = n[1];\n            freeTimes.push(out);\n          } else if (x === busyTimes.length - 1) {\n            // last one so use\n            var outer = [];\n            var e = prettyTime(end);\n            var p = prettyTime(thisDayNight);\n            outer.start = e[1];\n            outer.end = p[1];\n            freeTimes.push(outer);\n          } else {\n            var outhi = []; // end of prev time slot\n\n            var kk = prettyTime(new Date(thisDayBusyTimes[x - 1][1]));\n            var zz = prettyTime(start);\n            outhi.start = kk[1];\n            outhi.end = zz[1];\n            freeTimes.push(outhi);\n          }\n        }\n      }\n\n      const output = [String(prettyTime(thisDay)[0]), freeTimes];\n      console.log(output);\n      finalPenguin.push(output);\n    } // const output = [String(prettyTime(thisDay)[0]), freeTimes];\n\n\n    console.log(finalPenguin); // console.log(daysOfYear);\n    // console.log(busyTimes);\n  };\n\n  function prettyTime(d1) {\n    var p = String(d1.toLocaleString(\"en-US\", {\n      timeZone: \"America/New_York\"\n    }));\n    var splitted = p.split(\" \");\n    var day = splitted[0];\n    var time = splitted[1] + \" \" + splitted[2];\n    var output = [day, time];\n    return output;\n  }\n\n  function sameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n  } // end test\n\n\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n  var globalStart = \"\";\n  var globalEnd = \"\";\n  var busyBlocksToAddNew = [];\n\n  const fetchFreeTimes2 = () => {\n    // Check if endDate is set, if not set to startDate\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString();\n    globalStart = start; // Format end date to 8 pm\n\n    let end = \"\";\n\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n\n    end.setHours(23);\n    end.setMinutes(59);\n    end.setSeconds(0);\n    end = end.toISOString();\n    globalEnd = end;\n    console.log(start);\n    console.log(end); // create busy time slots from 8pm first day to 6am next day\n\n    var daysOfYear = [];\n\n    for (var d = new Date(start); d <= new Date(end); d.setDate(d.getDate() + 1)) {\n      daysOfYear.push(new Date(d));\n    }\n\n    for (let i = 0; i < daysOfYear.length; i++) {\n      var thisDay = new Date(daysOfYear[i]);\n      var thisDayNight = new Date(thisDay.getYear(), thisDay.getMonth(), thisDay.getDate(), 23);\n      console.log(\"pretty time is \"); // busy start is thisDayNight\n\n      var temp = new Date(daysOfYear[i + 1]);\n      var thisDayMorningAfter = new Date(temp.getYear(), temp.getMonth(), temp.getDate(), 6);\n      var busyBlock = [thisDayNight, thisDayMorningAfter];\n      busyBlocksToAddNew.push(busyBlock);\n    }\n\n    console.log(\"test\");\n    console.log(daysOfYear); // Build request body\n\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\"; // Create calendars object\n\n    let cals = [];\n\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n    let num_days = \"\";\n\n    if (props.endDate === null) {\n      console.log(\"we here\");\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      console.log(\"naw we here\");\n      num_days = props.endDate.getDate() - props.startDate.getDate();\n      console.log(num_days);\n    }\n\n    console.log(num_days);\n    num_days = num_days + 1;\n    console.log(\"TUCKEr\");\n    console.log(props.endDate);\n    return gapi.client.calendar.freebusy.query(request).then(function (response) {\n      let allTimes = [];\n      let fuckme = [];\n\n      for (let k = 0; k < props.selectedCalendars.length; k++) {\n        var curCal = props.selectedCalendars[k];\n        var busyTimes = response.result.calendars[curCal].busy;\n\n        for (let i = 0; i < busyTimes.length; i++) {\n          var busyBlock = busyTimes[i];\n          console.log(\"Busy block for \" + curCal, busyBlock);\n          var startTime = busyBlock.start;\n          var endTime = busyBlock.end;\n          var p = prettyTime(startTime)[0];\n          let test = [new Date(startTime), new Date(endTime)];\n          allTimes.push(test); // fuckme[p].push(test);\n        }\n      } // for (let j = 0; j < busyBlocksToAddNew.length; j++) {\n      //   allTimes.push(busyBlocksToAdd[j]);\n      // }\n      // console.log(fuckme);\n\n\n      console.log(\"all times\");\n      console.log(allTimes);\n      const merged = newfunc(allTimes);\n      console.log(\"merged is\");\n      console.log(merged);\n      finishUp2(merged);\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  const newfunc = times => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n    const merged = [];\n\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n        var comp = Math.max(left, right);\n        console.log(comp);\n        comp = new Date(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n      const temp = new Date(merged[i][0]).toLocaleString();\n      const temp2 = new Date(merged[i][1]).toLocaleString();\n      console.log(temp);\n      console.log(temp2);\n      console.log(\"break\");\n    }\n\n    return merged;\n  };\n\n  const unique_days2 = [];\n\n  const finishUp2 = finalArr => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n\n      if (unique_days2.includes(String(xx)) === false) {\n        unique_days2.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n    const motherToEndAll = [];\n\n    for (let i = 0; i < unique_days2.length; i++) {\n      const thisDay = unique_days2[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n      const thisDayTimes = [];\n\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = new Date(dayObj[0]);\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  function removeTime() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return new Date(date.toDateString());\n  }\n\n  const getDate = inputDate => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [props.outputReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: freeTimes.map(test => {\n        console.log(\"yoyoyoyo\");\n        const thisDate = test[0];\n        const thisDateTimeSlots = test[1];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [thisDate, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: thisDateTimeSlots.map(item => {\n                console.log(\"item here\");\n                console.log(item);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [item.start, \" to \", item.end]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-upload\",\n      onClick: fetchFreeTimes,\n      children: [\" \", \"Fetch free times\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarOutput, \"DJ6JTRgv6EuA/Jm8jQ8tceQuON4=\");\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","useState","useEffect","CalendarOutput","props","freeTimes","setFreeTimes","fetchFreeTimes","busyTimes","startDate","endDate","daysOfYear","d","Date","setDate","getDate","push","finalPenguin","i","length","thisDay","thisDayMorning","setHours","thisDayNight","getYear","getMonth","thisDayBusyTimes","x","temp","sameDay","start","end","out","k","prettyTime","n","outer","e","p","outhi","kk","zz","output","String","console","log","d1","toLocaleString","timeZone","splitted","split","day","time","d2","getFullYear","allStartTimes","allEndTimes","busyBlocksToAdd","globalStart","globalEnd","busyBlocksToAddNew","fetchFreeTimes2","setMinutes","setSeconds","toISOString","piza","setEndDate","thisDayMorningAfter","busyBlock","request","timeMin","timeMax","cals","selectedCalendars","calObj","id","items","num_days","gapi","client","calendar","freebusy","query","then","response","allTimes","fuckme","curCal","result","calendars","busy","startTime","endTime","test","merged","newfunc","finishUp2","err","error","times","sort","a","b","left","right","comp","Math","max","temp2","unique_days2","finalArr","map","obj","arr","xx","includes","motherToEndAll","dkl","hihi","toLocaleDateString","thisDayTimes","j","dayObj","firstTime","secondTime","startDay2","removeTime","freeTimeSlot","temp1","splitted1","finalDolphin","setOutputReady","date","toDateString","inputDate","dods","outputReady","thisDate","thisDateTimeSlots","item"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from \"react\";\nimport Calendar from \"./Calendar.js\";\nimport format from \"date-fns/format\";\nimport { useState, useEffect } from \"react\";\n\nconst CalendarOutput = (props) => {\n  const [freeTimes, setFreeTimes] = useState();\n  // const [outputReady, setOutputReady] = useState(false)\n\n  const fetchFreeTimes = () => {\n    const busyTimes = [\n      [\"2022-08-24T14:00:00.000Z\", \"2022-08-24T19:00:00.000Z\"],\n      [\"2022-08-24T19:15:00.000Z\", \"2022-08-24T20:30:00.000Z\"],\n      [\"2022-08-24T21:30:00.000Z\", \"2022-08-24T22:30:00.000Z\"],\n      [\"2022-08-25T15:00:00.000Z\", \"2022-08-25T16:00:00.000Z\"],\n      [\"2022-08-25T16:30:00.000Z\", \"2022-08-25T17:30:00.000Z\"],\n      [\"2022-08-25T18:30:00.000Z\", \"2022-08-25T19:30:00.000Z\"],\n      [\"2022-08-26T15:00:00.000Z\", \"2022-08-26T18:45:00.000Z\"],\n    ];\n\n    const startDate = \"2022-08-23T12:00:00.000Z\";\n    const endDate = \"2022-08-27T03:59:00.000Z\";\n    var daysOfYear = [];\n    for (\n      var d = new Date(startDate);\n      d <= new Date(endDate);\n      d.setDate(d.getDate() + 1)\n    ) {\n      daysOfYear.push(new Date(d));\n    }\n\n    const finalPenguin = [];\n    for (let i = 0; i < daysOfYear.length; i++) {\n      var thisDay = new Date(daysOfYear[i]);\n      var thisDayMorning = new Date(thisDay.setHours(6, 0, 0));\n      var thisDayNight = new Date(\n        thisDayMorning.getYear(),\n        thisDayMorning.getMonth(),\n        thisDayMorning.getDate(),\n        23\n      );\n\n      var thisDayBusyTimes = [];\n      for (let x = 0; x < busyTimes.length; x++) {\n        var temp = busyTimes[x];\n        if (sameDay(thisDayMorning, temp[0])) {\n          thisDayBusyTimes.push(temp);\n        }\n      }\n\n      var freeTimes = [];\n      for (let x = 0; x < thisDayBusyTimes.length; x++) {\n        var start = new Date(thisDayBusyTimes[x][0]);\n        var end = new Date(thisDayBusyTimes[x][1]);\n\n        if (sameDay(thisDayMorning, start)) {\n          if (x === 0) {\n            var out = [];\n            var k = prettyTime(thisDayMorning);\n            var n = prettyTime(start);\n            out.start = k[1];\n            out.end = n[1];\n            freeTimes.push(out);\n          } else if (x === busyTimes.length - 1) {\n            // last one so use\n            var outer = [];\n            var e = prettyTime(end);\n            var p = prettyTime(thisDayNight);\n            outer.start = e[1];\n            outer.end = p[1];\n            freeTimes.push(outer);\n          } else {\n            var outhi = [];\n            // end of prev time slot\n            var kk = prettyTime(new Date(thisDayBusyTimes[x - 1][1]));\n            var zz = prettyTime(start);\n\n            outhi.start = kk[1];\n            outhi.end = zz[1];\n            freeTimes.push(outhi);\n          }\n        }\n      }\n      const output = [String(prettyTime(thisDay)[0]), freeTimes];\n      console.log(output);\n      finalPenguin.push(output);\n    }\n    // const output = [String(prettyTime(thisDay)[0]), freeTimes];\n    console.log(finalPenguin);\n    // console.log(daysOfYear);\n    // console.log(busyTimes);\n  };\n\n  function prettyTime(d1) {\n    var p = String(\n      d1.toLocaleString(\"en-US\", { timeZone: \"America/New_York\" })\n    );\n    var splitted = p.split(\" \");\n    var day = splitted[0];\n    var time = splitted[1] + \" \" + splitted[2];\n\n    var output = [day, time];\n\n    return output;\n  }\n\n  function sameDay(d1, d2) {\n    return (\n      d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate()\n    );\n  }\n\n  // end test\n\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  var globalStart = \"\";\n  var globalEnd = \"\";\n  var busyBlocksToAddNew = [];\n  const fetchFreeTimes2 = () => {\n    // Check if endDate is set, if not set to startDate\n\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString();\n    globalStart = start;\n\n    // Format end date to 8 pm\n    let end = \"\";\n    if (props.endDate === null) {\n      end = new Date(props.startDate);\n      const piza = new Date(props.startDate);\n      props.setEndDate(piza);\n      end = new Date(piza);\n    } else {\n      end = new Date(props.endDate);\n    }\n    end.setHours(23);\n    end.setMinutes(59);\n    end.setSeconds(0);\n    end = end.toISOString();\n    globalEnd = end;\n\n    console.log(start);\n    console.log(end);\n\n    // create busy time slots from 8pm first day to 6am next day\n    var daysOfYear = [];\n\n    for (\n      var d = new Date(start);\n      d <= new Date(end);\n      d.setDate(d.getDate() + 1)\n    ) {\n      daysOfYear.push(new Date(d));\n    }\n\n    for (let i = 0; i < daysOfYear.length; i++) {\n      var thisDay = new Date(daysOfYear[i]);\n      var thisDayNight = new Date(\n        thisDay.getYear(),\n        thisDay.getMonth(),\n        thisDay.getDate(),\n        23\n      );\n\n      console.log(\"pretty time is \");\n      // busy start is thisDayNight\n      var temp = new Date(daysOfYear[i + 1]);\n      var thisDayMorningAfter = new Date(\n        temp.getYear(),\n        temp.getMonth(),\n        temp.getDate(),\n        6\n      );\n\n      var busyBlock = [thisDayNight, thisDayMorningAfter];\n      busyBlocksToAddNew.push(busyBlock);\n    }\n\n    console.log(\"test\");\n    console.log(daysOfYear);\n\n    // Build request body\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"America/New_York\";\n\n    // Create calendars object\n    let cals = [];\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n\n    let num_days = \"\";\n    if (props.endDate === null) {\n      console.log(\"we here\");\n      let num_days = props.startDate.getDate() - props.startDate.getDate();\n    } else {\n      console.log(\"naw we here\");\n      num_days = props.endDate.getDate() - props.startDate.getDate();\n      console.log(num_days);\n    }\n    console.log(num_days);\n    num_days = num_days + 1;\n\n    console.log(\"TUCKEr\");\n    console.log(props.endDate);\n    return gapi.client.calendar.freebusy\n      .query(request)\n\n      .then(\n        function (response) {\n          let allTimes = [];\n          let fuckme = [];\n          for (let k = 0; k < props.selectedCalendars.length; k++) {\n            var curCal = props.selectedCalendars[k];\n            var busyTimes = response.result.calendars[curCal].busy;\n\n            for (let i = 0; i < busyTimes.length; i++) {\n              var busyBlock = busyTimes[i];\n              console.log(\"Busy block for \" + curCal, busyBlock);\n\n              var startTime = busyBlock.start;\n              var endTime = busyBlock.end;\n\n              var p = prettyTime(startTime)[0];\n\n              let test = [new Date(startTime), new Date(endTime)];\n              allTimes.push(test);\n              // fuckme[p].push(test);\n            }\n          }\n\n          // for (let j = 0; j < busyBlocksToAddNew.length; j++) {\n          //   allTimes.push(busyBlocksToAdd[j]);\n          // }\n          // console.log(fuckme);\n          console.log(\"all times\");\n          console.log(allTimes);\n          const merged = newfunc(allTimes);\n          console.log(\"merged is\");\n          console.log(merged);\n          finishUp2(merged);\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  };\n\n  const newfunc = (times) => {\n    console.log(times);\n    console.log(\"woohhoo\");\n    times.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    const merged = [];\n    for (let i = 0; i < times.length; i++) {\n      if (!merged.length) {\n        merged.push(times[i]);\n      } else if (merged[merged.length - 1][1] < times[i][0]) {\n        merged.push(times[i]);\n      } else {\n        var left = merged[merged.length - 1][1];\n        var right = times[i][1];\n\n        var comp = Math.max(left, right);\n        console.log(comp);\n        comp = new Date(comp);\n        merged[merged.length - 1][1] = comp;\n      }\n    }\n\n    for (let i = 0; i < merged.length; i++) {\n      const temp = new Date(merged[i][0]).toLocaleString();\n      const temp2 = new Date(merged[i][1]).toLocaleString();\n\n      console.log(temp);\n      console.log(temp2);\n      console.log(\"break\");\n    }\n\n    return merged;\n  };\n\n  const unique_days2 = [];\n  const finishUp2 = (finalArr) => {\n    // const unique_days = []\n    const temp = finalArr.map((obj, i, arr) => {\n      const xx = getDate(obj[0]);\n      if (unique_days2.includes(String(xx)) === false) {\n        unique_days2.push(String(xx));\n      } else {\n        return \"ignore\";\n      }\n    });\n\n    const motherToEndAll = [];\n    for (let i = 0; i < unique_days2.length; i++) {\n      const thisDay = unique_days2[i];\n      const dkl = new Date(thisDay);\n      const hihi = dkl.toLocaleDateString();\n\n      const thisDayTimes = [];\n      for (let j = 0; j < finalArr.length; j++) {\n        const dayObj = finalArr[j];\n        const firstTime = new Date(dayObj[0]);\n        const secondTime = dayObj[1];\n        const startDay2 = removeTime(firstTime);\n\n        const freeTimeSlot = {};\n\n        if (String(startDay2) === String(thisDay)) {\n          const freeTimeSlot = [];\n          const temp1 = String(dayObj[0].toLocaleString());\n          const splitted1 = temp1.split(\" \");\n\n          freeTimeSlot.start = String(splitted1[1] + \" \" + splitted1[2]);\n\n          const temp = String(dayObj[1].toLocaleString());\n          const splitted = temp.split(\" \");\n\n          freeTimeSlot.end = String(splitted[1] + \" \" + splitted[2]);\n          thisDayTimes.push(freeTimeSlot);\n        }\n      }\n\n      const finalDolphin = [hihi, thisDayTimes];\n      motherToEndAll.push(finalDolphin);\n    }\n\n    console.log(\"hard yeet\");\n    console.log(motherToEndAll);\n    setFreeTimes(motherToEndAll);\n    props.setOutputReady(true);\n  };\n\n  function removeTime(date = new Date()) {\n    return new Date(date.toDateString());\n  }\n\n  const getDate = (inputDate) => {\n    const d = new Date(inputDate);\n    const dods = removeTime(d);\n    return dods;\n  };\n\n  return (\n    <div className=\"todo-container\">\n      {props.outputReady ? (\n        <div>\n          {freeTimes.map((test) => {\n            console.log(\"yoyoyoyo\");\n            const thisDate = test[0];\n            const thisDateTimeSlots = test[1];\n            return (\n              <div>\n                <div>\n                  <h2>{thisDate}:</h2>\n                  <ul>\n                    {thisDateTimeSlots.map((item) => {\n                      console.log(\"item here\");\n                      console.log(item);\n                      return (\n                        <div>\n                          <li>\n                            {item.start} to {item.end}\n                          </li>\n                          {/* <p>Start time: {item.start}</p>\n                            <p>End time: {item.end}</p> */}\n                        </div>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <button className=\"btn-upload\" onClick={fetchFreeTimes}>\n          {\" \"}\n          Fetch free times{\" \"}\n        </button>\n      )}\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default CalendarOutput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}