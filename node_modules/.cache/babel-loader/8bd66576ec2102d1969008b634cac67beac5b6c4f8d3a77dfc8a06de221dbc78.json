{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/git/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = props => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const handleSelection = () => {\n    setIsSelected(!isSelected);\n    updateSelectedCalendars();\n  };\n  const updateSelectedCalendars = () => {\n    const thisCalendarId = props.calendar.id;\n    const currentSelectedCalendars = props.selectedCalendars;\n    const isIdInArray = currentSelectedCalendars.includes(thisCalendarId);\n    if (!isSelected) {\n      // creates new array and react will detect state change\n      const filteredArr = currentSelectedCalendars.map(calId => {\n        return calId;\n      });\n      filteredArr.push(thisCalendarId);\n      props.setSelectedCalendars(filteredArr);\n    } else {\n      // do this if this calendar was unselected!\n      console.log(isIdInArray);\n      const filteredArr = currentSelectedCalendars.filter(calId => {\n        return calId !== thisCalendarId;\n      });\n      props.setSelectedCalendars(filteredArr);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarFilter\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle-checkbox\",\n        type: \"checkbox\",\n        id: props.calendar.id,\n        name: props.calendar.id,\n        value: props.title,\n        checked: isSelected,\n        onChange: handleSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-label\",\n        children: [\" \", props.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Calendar","props","_s","isSelected","setIsSelected","handleSelection","updateSelectedCalendars","thisCalendarId","calendar","id","currentSelectedCalendars","selectedCalendars","isIdInArray","includes","filteredArr","map","calId","push","setSelectedCalendars","console","log","filter","className","children","type","name","value","title","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tucker/git/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react'\n\n\nconst Calendar = (props) => {\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    const handleSelection = () => {\n        setIsSelected(!isSelected);\n        updateSelectedCalendars();\n    }\n\n    const updateSelectedCalendars = () => {\n        const thisCalendarId = props.calendar.id\n        const currentSelectedCalendars = props.selectedCalendars \n\n        const isIdInArray = currentSelectedCalendars.includes(thisCalendarId)\n\n        if (!isSelected) {\n            // creates new array and react will detect state change\n            const filteredArr = currentSelectedCalendars.map(calId => { return calId})\n            filteredArr.push(thisCalendarId)\n            props.setSelectedCalendars(filteredArr)\n        } else {\n            // do this if this calendar was unselected!\n            console.log(isIdInArray)\n            const filteredArr = currentSelectedCalendars.filter(calId => { return calId !== thisCalendarId})\n            props.setSelectedCalendars(filteredArr)\n\n        }\n    }\n\n    return (\n        <div className='calendarFilter'>\n            <label className='toggle'>\n                <input\n                className='toggle-checkbox'\n                type=\"checkbox\"\n                id={props.calendar.id}\n                name={props.calendar.id}\n                value={props.title}\n                checked={isSelected}\n                onChange={handleSelection}\n                /> \n                <div className='toggle-switch'></div>\n                <span className='toggle-label'> {props.title}</span>\n            </label>\n        </div>\n    );\n}; \n\nexport default Calendar; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC1BD,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BG,uBAAuB,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMA,uBAAuB,GAAGA,CAAA,KAAM;IAClC,MAAMC,cAAc,GAAGN,KAAK,CAACO,QAAQ,CAACC,EAAE;IACxC,MAAMC,wBAAwB,GAAGT,KAAK,CAACU,iBAAiB;IAExD,MAAMC,WAAW,GAAGF,wBAAwB,CAACG,QAAQ,CAACN,cAAc,CAAC;IAErE,IAAI,CAACJ,UAAU,EAAE;MACb;MACA,MAAMW,WAAW,GAAGJ,wBAAwB,CAACK,GAAG,CAACC,KAAK,IAAI;QAAE,OAAOA,KAAK;MAAA,CAAC,CAAC;MAC1EF,WAAW,CAACG,IAAI,CAACV,cAAc,CAAC;MAChCN,KAAK,CAACiB,oBAAoB,CAACJ,WAAW,CAAC;IAC3C,CAAC,MAAM;MACH;MACAK,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;MACxB,MAAME,WAAW,GAAGJ,wBAAwB,CAACW,MAAM,CAACL,KAAK,IAAI;QAAE,OAAOA,KAAK,KAAKT,cAAc;MAAA,CAAC,CAAC;MAChGN,KAAK,CAACiB,oBAAoB,CAACJ,WAAW,CAAC;IAE3C;EACJ,CAAC;EAED,oBACIf,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BxB,OAAA;MAAOuB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBxB,OAAA;QACAuB,SAAS,EAAC,iBAAiB;QAC3BE,IAAI,EAAC,UAAU;QACff,EAAE,EAAER,KAAK,CAACO,QAAQ,CAACC,EAAG;QACtBgB,IAAI,EAAExB,KAAK,CAACO,QAAQ,CAACC,EAAG;QACxBiB,KAAK,EAAEzB,KAAK,CAAC0B,KAAM;QACnBC,OAAO,EAAEzB,UAAW;QACpB0B,QAAQ,EAAExB;MAAgB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFlC,OAAA;QAAKuB,SAAS,EAAC;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrClC,OAAA;QAAMuB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,GAAC,EAACtB,KAAK,CAAC0B,KAAK;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA9CIF,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}