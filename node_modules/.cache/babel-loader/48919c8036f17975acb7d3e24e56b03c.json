{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/GroceryLister/GroceryLister.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport IngredientList from \"./IngredientList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(id, name, ingredient, unit, qty) {\n  return {\n    id,\n    name,\n    ingredient,\n    qty,\n    unit\n  };\n}\n\nfunction isValidHttpUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nconst GroceryLister = () => {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n  const [updated, setUpdated] = useState(url);\n  const [ingredients, setIngredients] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const inputRef = React.useRef(null);\n  useEffect(() => {\n    getLocalTodos();\n  }, []); // if ingredients ever changes ie new ones, update local storage\n\n  useEffect(() => {\n    saveLocalTodos();\n  }, [ingredients]);\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setIngredients(todoLocal);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(ingredients));\n  };\n\n  const handleTextboxChange = event => {\n    setUrl(event.target.value);\n  };\n\n  const handleClick = () => {\n    setUpdated(url);\n    getIngredients(updated);\n    setUrls();\n  };\n\n  const getIngredients = function (e) {\n    if (isValidHttpUrl(url)) {\n      console.log(\"yes\");\n      axios({\n        method: \"POST\",\n        url: \"https://scanned-photo-split.herokuapp.com/getingredients?url=\" + url,\n        // url: \"http://127.0.0.1:5000/getingredients?url=\" + url,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        console.log(response.data); // insert useeffect here\n\n        var newIngredients = [];\n\n        for (let i = 0; i < response.data.ingredients.length; i++) {\n          // var newIngredient = createData(Math.random() * 1000, response.data.name, response.data.ingredients[i])\n          var newIngredient = createData(Math.random() * 1000, response.data.ingredients[i], response.data.detailed[i][\"name\"], response.data.detailed[i][\"qty\"], response.data.detailed[i][\"unit\"]);\n          newIngredients.push(newIngredient);\n        }\n\n        setIngredients(ingredients.concat(newIngredients));\n      }).catch(function (response) {\n        console.log(\"error\");\n      });\n    } else {\n      console.log(\"invalid\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Extract ingredients from any recipe URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"too much SEO content nowadays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"upload-container\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        placeholder: \"Recipe URL\",\n        onChange: handleTextboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-70\",\n        onClick: handleClick,\n        children: \"Add ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(IngredientList, {\n        children: [\"ingredients=\", ingredients, \"setIngredients=\", setIngredients]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GroceryLister, \"1R4uoWl3WIBQm3E/ZlqZkV1JxYs=\");\n\n_c = GroceryLister;\nexport default GroceryLister;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryLister\");","map":{"version":3,"names":["React","Link","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useState","useEffect","axios","IngredientList","createData","id","name","ingredient","unit","qty","isValidHttpUrl","string","url","URL","_","protocol","GroceryLister","setUrl","updated","setUpdated","ingredients","setIngredients","urls","setUrls","inputRef","useRef","getLocalTodos","saveLocalTodos","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","handleTextboxChange","event","target","value","handleClick","getIngredients","e","console","log","method","headers","then","response","data","newIngredients","i","length","newIngredient","Math","random","detailed","push","concat","catch","preventDefault"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/GroceryLister/GroceryLister.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport IngredientList from \"./IngredientList\";\n\nfunction createData(id, name, ingredient, unit, qty) {\n  return { id, name, ingredient, qty, unit };\n}\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nconst GroceryLister = () => {\n  const [url, setUrl] = useState(\"\");\n  const [updated, setUpdated] = useState(url);\n  const [ingredients, setIngredients] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const inputRef = React.useRef(null);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  // if ingredients ever changes ie new ones, update local storage\n  useEffect(() => {\n    saveLocalTodos();\n  }, [ingredients]);\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setIngredients(todoLocal);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(ingredients));\n  };\n\n  const handleTextboxChange = (event) => {\n    setUrl(event.target.value);\n  };\n\n  const handleClick = () => {\n    setUpdated(url);\n    getIngredients(updated);\n    setUrls();\n  };\n\n  const getIngredients = function (e) {\n    if (isValidHttpUrl(url)) {\n      console.log(\"yes\");\n      axios({\n        method: \"POST\",\n        url:\n          \"https://scanned-photo-split.herokuapp.com/getingredients?url=\" + url,\n        // url: \"http://127.0.0.1:5000/getingredients?url=\" + url,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      })\n        .then(function (response) {\n          console.log(response.data);\n          // insert useeffect here\n          var newIngredients = [];\n          for (let i = 0; i < response.data.ingredients.length; i++) {\n            // var newIngredient = createData(Math.random() * 1000, response.data.name, response.data.ingredients[i])\n            var newIngredient = createData(\n              Math.random() * 1000,\n              response.data.ingredients[i],\n              response.data.detailed[i][\"name\"],\n              response.data.detailed[i][\"qty\"],\n              response.data.detailed[i][\"unit\"]\n            );\n            newIngredients.push(newIngredient);\n          }\n          setIngredients(ingredients.concat(newIngredients));\n        })\n        .catch(function (response) {\n          console.log(\"error\");\n        });\n    } else {\n      console.log(\"invalid\");\n    }\n  };\n\n  return (\n    <div>\n      <h3>Extract ingredients from any recipe URL</h3>\n      <h4>too much SEO content nowadays</h4>\n      <form className=\"upload-container\" onSubmit={(e) => e.preventDefault()}>\n        <input\n          type=\"text\"\n          ref={inputRef}\n          placeholder=\"Recipe URL\"\n          onChange={handleTextboxChange}\n        />\n        <button className=\"button-70\" onClick={handleClick}>\n          Add ingredients\n        </button>{\" \"}\n      </form>\n\n      <br></br>\n      <br></br>\n\n      <div>\n        <IngredientList>\n          {/* filteredTodos={filteredTodos} */}\n          ingredients={ingredients}\n          setIngredients={setIngredients}\n        </IngredientList>\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default GroceryLister;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}