{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveRequestDocument = exports.GraphQLWebSocketClient = exports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\n\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")),\n    CrossFetch = cross_fetch_1;\n\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\n\nvar defaultJsonSerializer_1 = require(\"./defaultJsonSerializer\");\n\nvar parseArgs_1 = require(\"./parseArgs\");\n\nvar types_1 = require(\"./types\");\n\nObject.defineProperty(exports, \"ClientError\", {\n  enumerable: true,\n  get: function () {\n    return types_1.ClientError;\n  }\n});\n\nvar resolveRequestDocument_1 = require(\"./resolveRequestDocument\");\n/**\n * Convert the given headers configuration into a plain object.\n */\n\n\nvar resolveHeaders = function (headers) {\n  var oHeaders = {};\n\n  if (headers) {\n    if (typeof Headers !== 'undefined' && headers instanceof Headers || CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers) {\n      oHeaders = HeadersInstanceToPlainObject(headers);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (_a) {\n        var name = _a[0],\n            value = _a[1];\n        oHeaders[name] = value;\n      });\n    } else {\n      oHeaders = headers;\n    }\n  }\n\n  return oHeaders;\n};\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\n\n\nvar queryCleanner = function (str) {\n  return str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim();\n};\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\n\n\nvar buildGetQueryParams = function (_a) {\n  var query = _a.query,\n      variables = _a.variables,\n      operationName = _a.operationName,\n      jsonSerializer = _a.jsonSerializer;\n\n  if (!Array.isArray(query)) {\n    var search = [\"query=\".concat(encodeURIComponent(queryCleanner(query)))];\n\n    if (variables) {\n      search.push(\"variables=\".concat(encodeURIComponent(jsonSerializer.stringify(variables))));\n    }\n\n    if (operationName) {\n      search.push(\"operationName=\".concat(encodeURIComponent(operationName)));\n    }\n\n    return search.join('&');\n  }\n\n  if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n    throw new Error('Cannot create query with given variable type, array expected');\n  } // Batch support\n\n\n  var payload = query.reduce(function (accu, currentQuery, index) {\n    accu.push({\n      query: queryCleanner(currentQuery),\n      variables: variables ? jsonSerializer.stringify(variables[index]) : undefined\n    });\n    return accu;\n  }, []);\n  return \"query=\".concat(encodeURIComponent(jsonSerializer.stringify(payload)));\n};\n/**\n * Fetch data using POST method\n */\n\n\nvar post = function (_a) {\n  var url = _a.url,\n      query = _a.query,\n      variables = _a.variables,\n      operationName = _a.operationName,\n      headers = _a.headers,\n      fetch = _a.fetch,\n      fetchOptions = _a.fetchOptions,\n      middleware = _a.middleware;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, init;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          body = (0, createRequestBody_1.default)(query, variables, operationName, fetchOptions.jsonSerializer);\n          init = __assign({\n            method: 'POST',\n            headers: __assign(__assign({}, typeof body === 'string' ? {\n              'Content-Type': 'application/json'\n            } : {}), headers),\n            body: body\n          }, fetchOptions);\n          if (!middleware) return [3\n          /*break*/\n          , 2];\n          ;\n          return [4\n          /*yield*/\n          , Promise.resolve(middleware(__assign(__assign({}, init), {\n            url: url,\n            operationName: operationName,\n            variables: variables\n          })))];\n\n        case 1:\n          _b = _c.sent(), url = _b.url, init = __rest(_b, [\"url\"]);\n          _c.label = 2;\n\n        case 2:\n          return [4\n          /*yield*/\n          , fetch(url, init)];\n\n        case 3:\n          return [2\n          /*return*/\n          , _c.sent()];\n      }\n    });\n  });\n};\n/**\n * Fetch data using GET method\n */\n\n\nvar get = function (_a) {\n  var url = _a.url,\n      query = _a.query,\n      variables = _a.variables,\n      operationName = _a.operationName,\n      headers = _a.headers,\n      fetch = _a.fetch,\n      fetchOptions = _a.fetchOptions,\n      middleware = _a.middleware;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var queryParams, init;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          queryParams = buildGetQueryParams({\n            query: query,\n            variables: variables,\n            operationName: operationName,\n            jsonSerializer: fetchOptions.jsonSerializer\n          });\n          init = __assign({\n            method: 'GET',\n            headers: headers\n          }, fetchOptions);\n          if (!middleware) return [3\n          /*break*/\n          , 2];\n          ;\n          return [4\n          /*yield*/\n          , Promise.resolve(middleware(__assign(__assign({}, init), {\n            url: url,\n            operationName: operationName,\n            variables: variables\n          })))];\n\n        case 1:\n          _b = _c.sent(), url = _b.url, init = __rest(_b, [\"url\"]);\n          _c.label = 2;\n\n        case 2:\n          return [4\n          /*yield*/\n          , fetch(\"\".concat(url, \"?\").concat(queryParams), init)];\n\n        case 3:\n          return [2\n          /*return*/\n          , _c.sent()];\n      }\n    });\n  });\n};\n/**\n * GraphQL Client.\n */\n\n\nvar GraphQLClient =\n/** @class */\nfunction () {\n  function GraphQLClient(url, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.url = url;\n    this.options = options;\n  }\n\n  GraphQLClient.prototype.rawRequest = function (queryOrOptions, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var rawRequestOptions, _a, headers, _b, fetch, _c, method, requestMiddleware, responseMiddleware, fetchOptions, url, operationName;\n\n      return __generator(this, function (_d) {\n        rawRequestOptions = (0, parseArgs_1.parseRawRequestArgs)(queryOrOptions, variables, requestHeaders);\n        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, requestMiddleware = _a.requestMiddleware, responseMiddleware = _a.responseMiddleware, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\", \"requestMiddleware\", \"responseMiddleware\"]);\n        url = this.url;\n\n        if (rawRequestOptions.signal !== undefined) {\n          fetchOptions.signal = rawRequestOptions.signal;\n        }\n\n        operationName = (0, resolveRequestDocument_1.resolveRequestDocument)(rawRequestOptions.query).operationName;\n        return [2\n        /*return*/\n        , makeRequest({\n          url: url,\n          query: rawRequestOptions.query,\n          variables: rawRequestOptions.variables,\n          headers: __assign(__assign({}, resolveHeaders(callOrIdentity(headers))), resolveHeaders(rawRequestOptions.requestHeaders)),\n          operationName: operationName,\n          fetch: fetch,\n          method: method,\n          fetchOptions: fetchOptions,\n          middleware: requestMiddleware\n        }).then(function (response) {\n          if (responseMiddleware) {\n            responseMiddleware(response);\n          }\n\n          return response;\n        }).catch(function (error) {\n          if (responseMiddleware) {\n            responseMiddleware(error);\n          }\n\n          throw error;\n        })];\n      });\n    });\n  };\n\n  GraphQLClient.prototype.request = function (documentOrOptions) {\n    var variablesAndRequestHeaders = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      variablesAndRequestHeaders[_i - 1] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var variables, requestHeaders, requestOptions, _a, headers, _b, fetch, _c, method, requestMiddleware, responseMiddleware, fetchOptions, url, _d, query, operationName;\n\n      return __generator(this, function (_e) {\n        variables = variablesAndRequestHeaders[0], requestHeaders = variablesAndRequestHeaders[1];\n        requestOptions = (0, parseArgs_1.parseRequestArgs)(documentOrOptions, variables, requestHeaders);\n        _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, requestMiddleware = _a.requestMiddleware, responseMiddleware = _a.responseMiddleware, fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\", \"requestMiddleware\", \"responseMiddleware\"]);\n        url = this.url;\n\n        if (requestOptions.signal !== undefined) {\n          fetchOptions.signal = requestOptions.signal;\n        }\n\n        _d = (0, resolveRequestDocument_1.resolveRequestDocument)(requestOptions.document), query = _d.query, operationName = _d.operationName;\n        return [2\n        /*return*/\n        , makeRequest({\n          url: url,\n          query: query,\n          variables: requestOptions.variables,\n          headers: __assign(__assign({}, resolveHeaders(callOrIdentity(headers))), resolveHeaders(requestOptions.requestHeaders)),\n          operationName: operationName,\n          fetch: fetch,\n          method: method,\n          fetchOptions: fetchOptions,\n          middleware: requestMiddleware\n        }).then(function (response) {\n          if (responseMiddleware) {\n            responseMiddleware(response);\n          }\n\n          return response.data;\n        }).catch(function (error) {\n          if (responseMiddleware) {\n            responseMiddleware(error);\n          }\n\n          throw error;\n        })];\n      });\n    });\n  };\n\n  GraphQLClient.prototype.batchRequests = function (documentsOrOptions, requestHeaders) {\n    var batchRequestOptions = (0, parseArgs_1.parseBatchRequestArgs)(documentsOrOptions, requestHeaders);\n\n    var _a = this.options,\n        headers = _a.headers,\n        _b = _a.fetch,\n        fetch = _b === void 0 ? cross_fetch_1.default : _b,\n        _c = _a.method,\n        method = _c === void 0 ? 'POST' : _c,\n        requestMiddleware = _a.requestMiddleware,\n        responseMiddleware = _a.responseMiddleware,\n        fetchOptions = __rest(_a, [\"headers\", \"fetch\", \"method\", \"requestMiddleware\", \"responseMiddleware\"]);\n\n    var url = this.url;\n\n    if (batchRequestOptions.signal !== undefined) {\n      fetchOptions.signal = batchRequestOptions.signal;\n    }\n\n    var queries = batchRequestOptions.documents.map(function (_a) {\n      var document = _a.document;\n      return (0, resolveRequestDocument_1.resolveRequestDocument)(document).query;\n    });\n    var variables = batchRequestOptions.documents.map(function (_a) {\n      var variables = _a.variables;\n      return variables;\n    });\n    return makeRequest({\n      url: url,\n      query: queries,\n      variables: variables,\n      headers: __assign(__assign({}, resolveHeaders(callOrIdentity(headers))), resolveHeaders(batchRequestOptions.requestHeaders)),\n      operationName: undefined,\n      fetch: fetch,\n      method: method,\n      fetchOptions: fetchOptions,\n      middleware: requestMiddleware\n    }).then(function (response) {\n      if (responseMiddleware) {\n        responseMiddleware(response);\n      }\n\n      return response.data;\n    }).catch(function (error) {\n      if (responseMiddleware) {\n        responseMiddleware(error);\n      }\n\n      throw error;\n    });\n  };\n\n  GraphQLClient.prototype.setHeaders = function (headers) {\n    this.options.headers = headers;\n    return this;\n  };\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n\n\n  GraphQLClient.prototype.setHeader = function (key, value) {\n    var _a;\n\n    var headers = this.options.headers;\n\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value;\n    } else {\n      this.options.headers = (_a = {}, _a[key] = value, _a);\n    }\n\n    return this;\n  };\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n\n\n  GraphQLClient.prototype.setEndpoint = function (value) {\n    this.url = value;\n    return this;\n  };\n\n  return GraphQLClient;\n}();\n\nexports.GraphQLClient = GraphQLClient;\n\nfunction makeRequest(_a) {\n  var url = _a.url,\n      query = _a.query,\n      variables = _a.variables,\n      headers = _a.headers,\n      operationName = _a.operationName,\n      fetch = _a.fetch,\n      _b = _a.method,\n      method = _b === void 0 ? 'POST' : _b,\n      fetchOptions = _a.fetchOptions,\n      middleware = _a.middleware;\n  return __awaiter(this, void 0, void 0, function () {\n    var fetcher, isBathchingQuery, response, result, successfullyReceivedData, successfullyPassedErrorPolicy, headers_1, status_1, errors, rest, data, errorResult;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          fetcher = method.toUpperCase() === 'POST' ? post : get;\n          isBathchingQuery = Array.isArray(query);\n          return [4\n          /*yield*/\n          , fetcher({\n            url: url,\n            query: query,\n            variables: variables,\n            operationName: operationName,\n            headers: headers,\n            fetch: fetch,\n            fetchOptions: fetchOptions,\n            middleware: middleware\n          })];\n\n        case 1:\n          response = _c.sent();\n          return [4\n          /*yield*/\n          , getResult(response, fetchOptions.jsonSerializer)];\n\n        case 2:\n          result = _c.sent();\n          successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {\n            var data = _a.data;\n            return !data;\n          }) : !!result.data;\n          successfullyPassedErrorPolicy = !result.errors || fetchOptions.errorPolicy === 'all' || fetchOptions.errorPolicy === 'ignore';\n\n          if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n            headers_1 = response.headers, status_1 = response.status;\n            errors = result.errors, rest = __rest(result, [\"errors\"]);\n            data = fetchOptions.errorPolicy === 'ignore' ? rest : result;\n            return [2\n            /*return*/\n            , __assign(__assign({}, isBathchingQuery ? {\n              data: data\n            } : data), {\n              headers: headers_1,\n              status: status_1\n            })];\n          } else {\n            errorResult = typeof result === 'string' ? {\n              error: result\n            } : result;\n            throw new types_1.ClientError(__assign(__assign({}, errorResult), {\n              status: response.status,\n              headers: response.headers\n            }), {\n              query: query,\n              variables: variables\n            });\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction rawRequest(urlOrOptions, query) {\n  var variablesAndRequestHeaders = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    variablesAndRequestHeaders[_i - 2] = arguments[_i];\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var requestOptions, client;\n    return __generator(this, function (_a) {\n      requestOptions = parseArgs_1.parseRawRequestExtendedArgs.apply(void 0, __spreadArray([urlOrOptions, query], variablesAndRequestHeaders, false));\n      client = new GraphQLClient(requestOptions.url);\n      return [2\n      /*return*/\n      , client.rawRequest(__assign({}, requestOptions))];\n    });\n  });\n}\n\nexports.rawRequest = rawRequest;\n\nfunction request(urlOrOptions, document) {\n  var variablesAndRequestHeaders = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    variablesAndRequestHeaders[_i - 2] = arguments[_i];\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var requestOptions, client;\n    return __generator(this, function (_a) {\n      requestOptions = parseArgs_1.parseRequestExtendedArgs.apply(void 0, __spreadArray([urlOrOptions, document], variablesAndRequestHeaders, false));\n      client = new GraphQLClient(requestOptions.url);\n      return [2\n      /*return*/\n      , client.request(__assign({}, requestOptions))];\n    });\n  });\n}\n\nexports.request = request;\n\nfunction batchRequests(urlOrOptions, documents, requestHeaders) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestOptions, client;\n    return __generator(this, function (_a) {\n      requestOptions = (0, parseArgs_1.parseBatchRequestsExtendedArgs)(urlOrOptions, documents, requestHeaders);\n      client = new GraphQLClient(requestOptions.url);\n      return [2\n      /*return*/\n      , client.batchRequests(__assign({}, requestOptions))];\n    });\n  });\n}\n\nexports.batchRequests = batchRequests;\nexports.default = request;\n/**\n * todo\n */\n\nfunction getResult(response, jsonSerializer) {\n  if (jsonSerializer === void 0) {\n    jsonSerializer = defaultJsonSerializer_1.defaultJsonSerializer;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var contentType, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          response.headers.forEach(function (value, key) {\n            if (key.toLowerCase() === 'content-type') {\n              contentType = value;\n            }\n          });\n          if (!(contentType && (contentType.toLowerCase().startsWith('application/json') || contentType.toLowerCase().startsWith('application/graphql+json') || contentType.toLowerCase().startsWith('application/graphql-response+json')))) return [3\n          /*break*/\n          , 2];\n          _b = (_a = jsonSerializer).parse;\n          return [4\n          /*yield*/\n          , response.text()];\n\n        case 1:\n          return [2\n          /*return*/\n          , _b.apply(_a, [_c.sent()])];\n\n        case 2:\n          return [2\n          /*return*/\n          , response.text()];\n      }\n    });\n  });\n}\n\nfunction callOrIdentity(value) {\n  return typeof value === 'function' ? value() : value;\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\n\n\nfunction gql(chunks) {\n  var variables = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    variables[_i - 1] = arguments[_i];\n  }\n\n  return chunks.reduce(function (accumulator, chunk, index) {\n    return \"\".concat(accumulator).concat(chunk).concat(index in variables ? variables[index] : '');\n  }, '');\n}\n\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\n\nfunction HeadersInstanceToPlainObject(headers) {\n  var o = {};\n  headers.forEach(function (v, k) {\n    o[k] = v;\n  });\n  return o;\n}\n\nvar graphql_ws_1 = require(\"./graphql-ws\");\n\nObject.defineProperty(exports, \"GraphQLWebSocketClient\", {\n  enumerable: true,\n  get: function () {\n    return graphql_ws_1.GraphQLWebSocketClient;\n  }\n});\n\nvar resolveRequestDocument_2 = require(\"./resolveRequestDocument\");\n\nObject.defineProperty(exports, \"resolveRequestDocument\", {\n  enumerable: true,\n  get: function () {\n    return resolveRequestDocument_2.resolveRequestDocument;\n  }\n});","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","types_1","resolveHeaders","headers","oHeaders","Headers","CrossFetch","HeadersInstanceToPlainObject","Array","isArray","forEach","_a","name","value","queryCleanner","str","replace","trim","buildGetQueryParams","query","variables","operationName","jsonSerializer","search","encodeURIComponent","push","stringify","join","Error","payload","reduce","accu","currentQuery","index","undefined","post","url","fetch","fetchOptions","middleware","body","init","method","Promise","resolve","_b","_c","queryParams","concat","options","GraphQLClient","queryOrOptions","requestHeaders","rawRequestOptions","cross_fetch_1","requestMiddleware","responseMiddleware","signal","makeRequest","callOrIdentity","then","response","catch","error","documentOrOptions","variablesAndRequestHeaders","requestOptions","_d","document","data","documentsOrOptions","batchRequestOptions","queries","documents","map","key","exports","fetcher","toUpperCase","isBathchingQuery","getResult","result","successfullyReceivedData","some","successfullyPassedErrorPolicy","errors","errorPolicy","ok","headers_1","status_1","rest","status","errorResult","__assign","rawRequest","urlOrOptions","parseArgs_1","apply","__spreadArray","client","request","batchRequests","defaultJsonSerializer_1","toLowerCase","contentType","startsWith","parse","text","gql","chunks","accumulator","chunk","o","v","k"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}