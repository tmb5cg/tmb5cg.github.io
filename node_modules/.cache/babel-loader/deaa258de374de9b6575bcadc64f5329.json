{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = props => {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handleSelection = () => {\n    setIsSelected(!isSelected);\n    updateSelectedCalendars();\n  };\n\n  const updateSelectedCalendars = () => {\n    const thisCalendarId = props.calendar.id;\n    const currentSelectedCalendars = props.selectedCalendars;\n    const isIdInArray = currentSelectedCalendars.includes(thisCalendarId);\n\n    if (isSelected) {\n      console.log(\"ey\");\n      currentSelectedCalendars.push(thisCalendarId);\n      props.setSelectedCalendars(currentSelectedCalendars);\n    } else {\n      // do this if this calendar was unselected!\n      // check if it is in the current selected list\n      console.log(isIdInArray);\n      console.log(\"naw\");\n      const filteredArr = currentSelectedCalendars.filter(calId => {\n        return calId !== thisCalendarId;\n      });\n      props.setSelectedCalendars(filteredArr);\n    }\n  };\n\n  const deleteHandler = () => {\n    console.log(\"odk\");\n  };\n\n  const completeHandler = () => {\n    console.log(\"checked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarHolder\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"calendarItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: props.calendar.id,\n        name: props.calendar.id,\n        value: props.title,\n        checked: isSelected,\n        onChange: handleSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","props","isSelected","setIsSelected","handleSelection","updateSelectedCalendars","thisCalendarId","calendar","id","currentSelectedCalendars","selectedCalendars","isIdInArray","includes","console","log","push","setSelectedCalendars","filteredArr","filter","calId","deleteHandler","completeHandler","title"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react'\n\n\nconst Calendar = (props) => {\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    const handleSelection = () => {\n        setIsSelected(!isSelected);\n        updateSelectedCalendars();\n    }\n\n    const updateSelectedCalendars = () => {\n        const thisCalendarId = props.calendar.id\n        const currentSelectedCalendars = props.selectedCalendars \n\n        const isIdInArray = currentSelectedCalendars.includes(thisCalendarId)\n\n        if (isSelected) {\n            console.log(\"ey\")\n            currentSelectedCalendars.push(thisCalendarId)\n            props.setSelectedCalendars(currentSelectedCalendars)\n        } else {\n            // do this if this calendar was unselected!\n\n            // check if it is in the current selected list\n            console.log(isIdInArray)\n            console.log(\"naw\")\n\n            \n            const filteredArr = currentSelectedCalendars.filter(calId => { return calId !== thisCalendarId})\n            props.setSelectedCalendars(filteredArr)\n\n        }\n    }\n\n    const deleteHandler = () => {\n        console.log(\"odk\")\n    }\n\n    const completeHandler = () => {\n        console.log(\"checked\")\n    }\n    return (\n        <div className=\"calendarHolder\">\n            <li className='calendarItem'>\n                <input\n                type=\"checkbox\"\n                id={props.calendar.id}\n                name={props.calendar.id}\n                value={props.title}\n                checked={isSelected}\n                onChange={handleSelection}\n                /> \n                {props.title}\n            </li>\n        </div>\n    );\n}; \n\nexport default Calendar; "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMM,eAAe,GAAG,MAAM;IAC1BD,aAAa,CAAC,CAACD,UAAF,CAAb;IACAG,uBAAuB;EAC1B,CAHD;;EAKA,MAAMA,uBAAuB,GAAG,MAAM;IAClC,MAAMC,cAAc,GAAGL,KAAK,CAACM,QAAN,CAAeC,EAAtC;IACA,MAAMC,wBAAwB,GAAGR,KAAK,CAACS,iBAAvC;IAEA,MAAMC,WAAW,GAAGF,wBAAwB,CAACG,QAAzB,CAAkCN,cAAlC,CAApB;;IAEA,IAAIJ,UAAJ,EAAgB;MACZW,OAAO,CAACC,GAAR,CAAY,IAAZ;MACAL,wBAAwB,CAACM,IAAzB,CAA8BT,cAA9B;MACAL,KAAK,CAACe,oBAAN,CAA2BP,wBAA3B;IACH,CAJD,MAIO;MACH;MAEA;MACAI,OAAO,CAACC,GAAR,CAAYH,WAAZ;MACAE,OAAO,CAACC,GAAR,CAAY,KAAZ;MAGA,MAAMG,WAAW,GAAGR,wBAAwB,CAACS,MAAzB,CAAgCC,KAAK,IAAI;QAAE,OAAOA,KAAK,KAAKb,cAAjB;MAAgC,CAA3E,CAApB;MACAL,KAAK,CAACe,oBAAN,CAA2BC,WAA3B;IAEH;EACJ,CAtBD;;EAwBA,MAAMG,aAAa,GAAG,MAAM;IACxBP,OAAO,CAACC,GAAR,CAAY,KAAZ;EACH,CAFD;;EAIA,MAAMO,eAAe,GAAG,MAAM;IAC1BR,OAAO,CAACC,GAAR,CAAY,SAAZ;EACH,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAI,SAAS,EAAC,cAAd;MAAA,wBACI;QACA,IAAI,EAAC,UADL;QAEA,EAAE,EAAEb,KAAK,CAACM,QAAN,CAAeC,EAFnB;QAGA,IAAI,EAAEP,KAAK,CAACM,QAAN,CAAeC,EAHrB;QAIA,KAAK,EAAEP,KAAK,CAACqB,KAJb;QAKA,OAAO,EAAEpB,UALT;QAMA,QAAQ,EAAEE;MANV;QAAA;QAAA;QAAA;MAAA,QADJ,EASKH,KAAK,CAACqB,KATX;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAvDD;;GAAMtB,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}