{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\";\nimport React from 'react';\nimport Calendar from './Calendar.js';\nimport format from \"date-fns/format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  const fetchTest = () => {\n    console.log(\"hiiiiii\"); // startDate = props.startDate;\n    // Format start date to 8am\n\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString(); // Format end date to 8 pm\n\n    var end = new Date(props.startDate);\n    end.setHours(20);\n    end.setMinutes(0);\n    end.setSeconds(0);\n    end = end.toISOString();\n    console.log(start);\n    console.log(end);\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"EST\";\n    const cal = {};\n    cal.id = \"bendixtmb@gmail.com\"; // props.selectedCalendars[0]\n\n    request.items = [cal];\n    console.log(request); // inputDate6 = inputDate2.toISOString();\n    // start = inputDate.getDate()\n    // // Format in ISO\n    // inputDate = startDate.toISOString();\n    // console.log(inputDate)\n    // return freeRequest = gapi.client.calendar.freebusy.query({\n    //       items: inputCals,\n    //       timeMin: inputDate5,\n    //       timeMax: inputDate6,\n    //       timeZone: \"-0500\",\n    //   })\n\n    return freeRequest = gapi.client.calendar.freebusy.query(request).then(function (response) {\n      console.log(\"Frebusy response: \", response);\n      console.log(\"Frebusy response2: \", response.result); // console.log(\"array length: \", inputCals.length);\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  const fetchFreeBusy = () => {\n    inputDate = props.startDate;\n\n    if (inputDate.length < 2) {\n      console.log(\"input is less than 2, default to Today as input date\");\n      inputDate = new Date();\n      inputDate.setHours(8);\n      inputDate.setMinutes(0);\n      inputDate.setSeconds(0);\n    }\n\n    inputDate = new Date(inputDate);\n    inputDate2 = props.endDate;\n\n    if (inputDate2.length > 2) {\n      inputDate2 = new Date(inputDate2);\n      inputDate2.setHours(inputDate2.getHours() + 20);\n    } else {\n      inputDate2 = new Date(inputDate);\n      inputDate2.setHours(inputDate.getHours() + 24);\n    }\n\n    inputDate5 = inputDate.toISOString();\n    inputDate6 = inputDate2.toISOString();\n    start = inputDate.getDate();\n    end = inputDate2.getDate();\n    console.log(\"start \" + start + \" end \" + end);\n    diff = end - start;\n    console.log(\"diff: \" + diff);\n\n    for (let x = 0; x < diff; x++) {\n      startdate = inputDate;\n      day = startdate.getDate();\n      curDateDay = day + x; //appendPre(curDateDay)\n\n      morningBusyStart = new Date();\n      morningBusyStart.setDate(curDateDay);\n      morningBusyStart.setHours(8);\n      morningBusyStart.setMinutes(0);\n      morningBusyStart.setSeconds(0);\n      morningBusyStart.setFullYear(inputDate.getFullYear());\n      morningBusyEnd = new Date();\n      morningBusyEnd.setDate(curDateDay);\n      morningBusyEnd.setHours(8);\n      morningBusyEnd.setMinutes(30);\n      morningBusyEnd.setSeconds(0);\n      morningBusyEnd.setFullYear(inputDate.getFullYear());\n      nightBusyStart = new Date();\n      nightBusyStart.setDate(curDateDay);\n      nightBusyStart.setHours(20);\n      nightBusyStart.setMinutes(0);\n      nightBusyStart.setSeconds(0);\n      nightBusyStart.setFullYear(inputDate.getFullYear());\n      nightBusyEnd = new Date();\n      nightBusyEnd.setDate(curDateDay);\n      nightBusyEnd.setHours(20);\n      nightBusyEnd.setMinutes(30);\n      nightBusyEnd.setSeconds(0);\n      nightBusyEnd.setFullYear(inputDate.getFullYear()); // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n      // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n\n      var morningBusyStart_formatted = {\n        date: morningBusyStart\n      };\n      var morningBusyEnd_formatted = {\n        date: morningBusyEnd\n      };\n      var nightBusyStart_formatted = {\n        date: nightBusyStart\n      };\n      var nightBusyEnd_formatted = {\n        date: nightBusyEnd\n      };\n      allStartTimes.push(morningBusyStart_formatted);\n      allEndTimes.push(morningBusyEnd_formatted);\n      allStartTimes.push(nightBusyStart_formatted);\n      allEndTimes.push(nightBusyEnd_formatted);\n      timecombo = [morningBusyStart, morningBusyEnd];\n      busyBlocksToAdd.push(timecombo);\n    } // Format in ISO\n\n\n    inputDate = inputDate.toISOString();\n    inputDate2 = inputDate2.toISOString();\n    return freeRequest = gapi.client.calendar.freebusy.query({\n      items: inputCals,\n      timeMin: inputDate5,\n      timeMax: inputDate6,\n      timeZone: \"-0500\"\n    }).then(function (response) {\n      console.log(\"Frebusy response: \", response);\n      console.log(\"Frebusy response2: \", response.result);\n      console.log(\"array length: \", inputCals.length); // for (k = 0; k < inputCals.length; k++) {\n      //   var curCal = inputCals[k].id;\n      //   console.log(\"Current calendar: \", curCal);\n      //   console.log(\"Iteration: k = \" + k)\n      //   var busyTimes = response.result.calendars[curCal].busy;\n      //   for (i = 0; i < busyTimes.length; i++){\n      //     var busyBlock = busyTimes[i];\n      //     console.log(\"Busy block for \" + curCal, busyBlock);\n      //     var startTime = busyBlock.start;\n      //     var endTime = busyBlock.end;\n      //     var data = {date: startTime};\n      //     var data2 = {date: endTime};\n      //     allStartTimes.push(data);\n      //     allEndTimes.push(data2);\n      //     }\n      // }\n      // consolidateAllBusyTimes();\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  fetchTest();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Selected calendars: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: props.selectedCalendars.map((cal, index, originalArray) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: cal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"hi \", format(props.startDate, \"MM-dd-yyyy\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTest,\n      children: \" fetch here \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","CalendarOutput","props","allStartTimes","allEndTimes","busyBlocksToAdd","fetchTest","console","log","start","Date","startDate","setHours","setMinutes","setSeconds","toISOString","end","request","timeMin","timeMax","timeZone","cal","id","items","freeRequest","gapi","client","calendar","freebusy","query","then","response","result","err","error","fetchFreeBusy","inputDate","length","inputDate2","endDate","getHours","inputDate5","inputDate6","getDate","diff","x","startdate","day","curDateDay","morningBusyStart","setDate","setFullYear","getFullYear","morningBusyEnd","nightBusyStart","nightBusyEnd","morningBusyStart_formatted","date","morningBusyEnd_formatted","nightBusyStart_formatted","nightBusyEnd_formatted","push","timecombo","inputCals","selectedCalendars","map","index","originalArray"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from 'react';\nimport Calendar from './Calendar.js'\nimport format from \"date-fns/format\";\n\nconst CalendarOutput = (props) => {\n\n    const allStartTimes = [];\n    const allEndTimes = [];\n    const busyBlocksToAdd = [];\n\n    const fetchTest = () => {\n        console.log(\"hiiiiii\")\n        // startDate = props.startDate;\n\n        // Format start date to 8am\n        var start = new Date(props.startDate)\n        start.setHours(8)\n        start.setMinutes(0)\n        start.setSeconds(0)\n        start = start.toISOString();\n\n        // Format end date to 8 pm\n        var end = new Date(props.startDate)\n        end.setHours(20)\n        end.setMinutes(0)\n        end.setSeconds(0)\n        end = end.toISOString();\n        \n        console.log(start)\n        console.log(end)\n\n        const request = {}\n        request.timeMin = start;\n        request.timeMax = end;\n        request.timeZone = \"EST\";\n\n        const cal = {}\n        cal.id =  \"bendixtmb@gmail.com\" // props.selectedCalendars[0]\n     \n        request.items = [cal]\n\n        console.log(request)\n\n\n        // inputDate6 = inputDate2.toISOString();\n      \n        // start = inputDate.getDate()\n  \n        // // Format in ISO\n        // inputDate = startDate.toISOString();\n\n        // console.log(inputDate)\n            \n        // return freeRequest = gapi.client.calendar.freebusy.query({\n      \n        //       items: inputCals,\n        //       timeMin: inputDate5,\n        //       timeMax: inputDate6,\n        //       timeZone: \"-0500\",\n        //   })\n\n        return freeRequest = gapi.client.calendar.freebusy.query(request)\n      \n              .then(function(response) {\n                console.log(\"Frebusy response: \", response);\n                console.log(\"Frebusy response2: \", response.result);\n                // console.log(\"array length: \", inputCals.length);\n      \n              },\n              function(err) { console.error(\"Execute error\", err); });\n      }\n      \n\n    const fetchFreeBusy = () => {\n        inputDate = props.startDate;\n      \n        if (inputDate.length < 2) {\n          console.log(\"input is less than 2, default to Today as input date\");\n          inputDate = new Date();\n      \n          inputDate.setHours(8);\n          inputDate.setMinutes(0);\n          inputDate.setSeconds(0);\n        }\n        inputDate = new Date(inputDate);\n      \n        inputDate2 = props.endDate;\n      \n        if (inputDate2.length > 2) {\n          inputDate2 = new Date(inputDate2);\n          inputDate2.setHours(inputDate2.getHours()+20);\n      \n        } else {\n          inputDate2 = new Date(inputDate);\n          inputDate2.setHours(inputDate.getHours()+24);\n      \n        }\n      \n        inputDate5 = inputDate.toISOString();\n        inputDate6 = inputDate2.toISOString();\n      \n        start = inputDate.getDate()\n        end = inputDate2.getDate()\n        console.log(\"start \" + start + \" end \" + end)\n        diff = end - start;\n        console.log(\"diff: \" + diff)\n\n        for (let x=0; x < diff; x++){\n          startdate = inputDate\n      \n          day = startdate.getDate()\n      \n          curDateDay = day + x\n      \n          //appendPre(curDateDay)\n          morningBusyStart = new Date()\n          morningBusyStart.setDate(curDateDay)\n          morningBusyStart.setHours(8)\n          morningBusyStart.setMinutes(0)\n          morningBusyStart.setSeconds(0)\n          morningBusyStart.setFullYear(inputDate.getFullYear())\n      \n          morningBusyEnd = new Date()\n          morningBusyEnd.setDate(curDateDay)\n          morningBusyEnd.setHours(8)\n          morningBusyEnd.setMinutes(30)\n          morningBusyEnd.setSeconds(0)\n          morningBusyEnd.setFullYear(inputDate.getFullYear())\n      \n      \n          nightBusyStart = new Date()\n          nightBusyStart.setDate(curDateDay)\n          nightBusyStart.setHours(20)\n          nightBusyStart.setMinutes(0)\n          nightBusyStart.setSeconds(0)\n          nightBusyStart.setFullYear(inputDate.getFullYear())\n      \n          nightBusyEnd = new Date()\n          nightBusyEnd.setDate(curDateDay)\n          nightBusyEnd.setHours(20)\n          nightBusyEnd.setMinutes(30)\n          nightBusyEnd.setSeconds(0)\n          nightBusyEnd.setFullYear(inputDate.getFullYear())\n      \n          // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n          // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n          var morningBusyStart_formatted = {date: morningBusyStart};\n          var morningBusyEnd_formatted = {date: morningBusyEnd};\n      \n          var nightBusyStart_formatted = {date: nightBusyStart};\n          var nightBusyEnd_formatted = {date: nightBusyEnd};\n      \n          allStartTimes.push(morningBusyStart_formatted);\n          allEndTimes.push(morningBusyEnd_formatted);\n      \n          allStartTimes.push(nightBusyStart_formatted);\n          allEndTimes.push(nightBusyEnd_formatted);\n      \n          timecombo = [morningBusyStart, morningBusyEnd];\n          busyBlocksToAdd.push(timecombo);\n      \n        }\n        // Format in ISO\n        inputDate = inputDate.toISOString();\n        inputDate2 = inputDate2.toISOString();\n            \n        return freeRequest = gapi.client.calendar.freebusy.query({\n      \n              items: inputCals,\n              timeMin: inputDate5,\n              timeMax: inputDate6,\n              timeZone: \"-0500\",\n          })\n      \n      \n              .then(function(response) {\n                console.log(\"Frebusy response: \", response);\n                console.log(\"Frebusy response2: \", response.result);\n                console.log(\"array length: \", inputCals.length);\n      \n      \n                // for (k = 0; k < inputCals.length; k++) {\n                //   var curCal = inputCals[k].id;\n                //   console.log(\"Current calendar: \", curCal);\n                //   console.log(\"Iteration: k = \" + k)\n      \n                //   var busyTimes = response.result.calendars[curCal].busy;\n      \n                //   for (i = 0; i < busyTimes.length; i++){\n                //     var busyBlock = busyTimes[i];\n                //     console.log(\"Busy block for \" + curCal, busyBlock);\n      \n                //     var startTime = busyBlock.start;\n                //     var endTime = busyBlock.end;\n      \n                //     var data = {date: startTime};\n                //     var data2 = {date: endTime};\n      \n                //     allStartTimes.push(data);\n                //     allEndTimes.push(data2);\n                //     }\n                // }\n      \n                // consolidateAllBusyTimes();\n      \n              },\n              function(err) { console.error(\"Execute error\", err); });\n      }\n      \n\n\n\n      fetchTest()\n\n     return (\n    <div className=\"todo-container\">\n    <h4>Selected calendars: </h4>\n    <br />\n\n    <ul className='todo-list'>\n    {\n        props.selectedCalendars.map((cal, index, originalArray) => {\n            return (\n                <li>{cal}</li>\n            )\n        })\n    }\n    </ul>\n    <h2>hi {format(props.startDate, \"MM-dd-yyyy\")}</h2>\n    <br />\n    <br />\n    <button onClick={fetchTest}> fetch here </button>\n\n    </div>\n\n     );\n}\n\nexport default CalendarOutput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}