{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = props => {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handleSelection = () => {\n    setIsSelected(!isSelected);\n    updateSelectedCalendars();\n  };\n\n  const updateSelectedCalendars = () => {\n    // check if the selected claendar is in the array \n    const oldSelectedCalendars = props.selectedCalendars;\n\n    if (isSelected) {\n      console.log(\"calendar was selected: \" + props.calendar.id);\n\n      if (oldSelectedCalendars.includes(props.calendar.id)) {\n        props.selectedCalendars.push(props.calendar.id);\n      }\n    } // props.setSelectedCalendars(\n    //     props.calendars.map( item => {\n    //         if (item.id === props.calendar.id){\n    //             // const temp = item\n    //             item.isSelected = isSelected\n    //             return {\n    //                 item\n    //             }\n    //         }\n    //         return item;\n    //     }   \n    //     )\n    // )\n\n  };\n\n  const deleteHandler = () => {\n    console.log(\"odk\");\n  };\n\n  const completeHandler = () => {\n    console.log(\"checked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarHolder\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: props.isSelected ? 'calendarItemSelected' : 'calendarItem',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: props.calendar.id,\n        name: props.calendar.id,\n        value: props.title,\n        checked: isSelected,\n        onChange: handleSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","props","isSelected","setIsSelected","handleSelection","updateSelectedCalendars","oldSelectedCalendars","selectedCalendars","console","log","calendar","id","includes","push","deleteHandler","completeHandler","title"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react'\n\n\nconst Calendar = (props) => {\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    const handleSelection = () => {\n        setIsSelected(!isSelected);\n        updateSelectedCalendars()\n    }\n\n    const updateSelectedCalendars = () => {\n        // check if the selected claendar is in the array \n        const oldSelectedCalendars = props.selectedCalendars\n\n        if (isSelected) {\n            console.log(\"calendar was selected: \" + props.calendar.id)\n            if (oldSelectedCalendars.includes(props.calendar.id)) {\n                props.selectedCalendars.push(props.calendar.id)\n            }\n\n        }\n        // props.setSelectedCalendars(\n\n        //     props.calendars.map( item => {\n        //         if (item.id === props.calendar.id){\n\n        //             // const temp = item\n        //             item.isSelected = isSelected\n        //             return {\n        //                 item\n        //             }\n        //         }\n        //         return item;\n        //     }   \n        //     )\n        // )\n    }\n\n    const deleteHandler = () => {\n        console.log(\"odk\")\n    }\n\n    const completeHandler = () => {\n        console.log(\"checked\")\n    }\n    return (\n        <div className=\"calendarHolder\">\n            <li className={props.isSelected ? 'calendarItemSelected' : 'calendarItem'}>\n                <input\n                type=\"checkbox\"\n                id={props.calendar.id}\n                name={props.calendar.id}\n                value={props.title}\n                checked={isSelected}\n                onChange={handleSelection}\n                /> \n                {props.title}\n            </li>\n        </div>\n    );\n}; \n\nexport default Calendar; "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMM,eAAe,GAAG,MAAM;IAC1BD,aAAa,CAAC,CAACD,UAAF,CAAb;IACAG,uBAAuB;EAC1B,CAHD;;EAKA,MAAMA,uBAAuB,GAAG,MAAM;IAClC;IACA,MAAMC,oBAAoB,GAAGL,KAAK,CAACM,iBAAnC;;IAEA,IAAIL,UAAJ,EAAgB;MACZM,OAAO,CAACC,GAAR,CAAY,4BAA4BR,KAAK,CAACS,QAAN,CAAeC,EAAvD;;MACA,IAAIL,oBAAoB,CAACM,QAArB,CAA8BX,KAAK,CAACS,QAAN,CAAeC,EAA7C,CAAJ,EAAsD;QAClDV,KAAK,CAACM,iBAAN,CAAwBM,IAAxB,CAA6BZ,KAAK,CAACS,QAAN,CAAeC,EAA5C;MACH;IAEJ,CAViC,CAWlC;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACH,CA1BD;;EA4BA,MAAMG,aAAa,GAAG,MAAM;IACxBN,OAAO,CAACC,GAAR,CAAY,KAAZ;EACH,CAFD;;EAIA,MAAMM,eAAe,GAAG,MAAM;IAC1BP,OAAO,CAACC,GAAR,CAAY,SAAZ;EACH,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAI,SAAS,EAAER,KAAK,CAACC,UAAN,GAAmB,sBAAnB,GAA4C,cAA3D;MAAA,wBACI;QACA,IAAI,EAAC,UADL;QAEA,EAAE,EAAED,KAAK,CAACS,QAAN,CAAeC,EAFnB;QAGA,IAAI,EAAEV,KAAK,CAACS,QAAN,CAAeC,EAHrB;QAIA,KAAK,EAAEV,KAAK,CAACe,KAJb;QAKA,OAAO,EAAEd,UALT;QAMA,QAAQ,EAAEE;MANV;QAAA;QAAA;QAAA;MAAA,QADJ,EASKH,KAAK,CAACe,KATX;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CA3DD;;GAAMhB,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}