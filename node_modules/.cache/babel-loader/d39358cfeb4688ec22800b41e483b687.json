{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\";\nimport React from 'react';\nimport Calendar from './Calendar.js';\nimport format from \"date-fns/format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  const hi = props.startDate;\n  console.log(typeof hi); // format(props.startDate, \"MM-dd-yyyy\")\n\n  const fetchFreeBusy = () => {\n    // Gets input date from datebox\n    inputDate = props.startDate;\n\n    if (inputDate.length < 2) {\n      console.log(\"input is less than 2, default to Today as input date\");\n      inputDate = new Date();\n      inputDate.setHours(8);\n      inputDate.setMinutes(0);\n      inputDate.setSeconds(0);\n    }\n\n    inputDate = new Date(inputDate);\n    inputDate2 = document.getElementById('endDateinput').value;\n\n    if (inputDate2.length > 2) {\n      // This means we have an end date\n      inputDate2 = new Date(inputDate2);\n      inputDate2.setHours(inputDate2.getHours() + 20); //document.getElementById('freetimesTitle2').innerHTML = inputDate2;\n    } else {\n      // This means we only want a singular date, so make inputDate2 the same as inputDate and add hours\n      inputDate2 = new Date(inputDate);\n      inputDate2.setHours(inputDate.getHours() + 24);\n    } // document.getElementById('freetimesTitle').innerHTML = inputDate.toISOString();\n    // document.getElementById('freetimesTitle2').innerHTML = inputDate2.toISOString();\n\n\n    inputDate5 = inputDate.toISOString();\n    inputDate6 = inputDate2.toISOString();\n    start = inputDate.getDate();\n    end = inputDate2.getDate();\n    appendPre(\"start \" + start + \" end \" + end);\n    diff = end - start;\n    appendPre(\"diff: \" + diff); //\n    // appendPre(\"Add these to list of all time blocks\")\n    // for each day in between input dates, add event\n    // day1 8am 830am, 8pm to day2 8am\n\n    for (x = 0; x < diff; x++) {\n      startdate = inputDate;\n      day = startdate.getDate();\n      curDateDay = day + x; //appendPre(curDateDay)\n\n      morningBusyStart = new Date();\n      morningBusyStart.setDate(curDateDay);\n      morningBusyStart.setHours(8);\n      morningBusyStart.setMinutes(0);\n      morningBusyStart.setSeconds(0);\n      morningBusyStart.setFullYear(inputDate.getFullYear());\n      morningBusyEnd = new Date();\n      morningBusyEnd.setDate(curDateDay);\n      morningBusyEnd.setHours(8);\n      morningBusyEnd.setMinutes(30);\n      morningBusyEnd.setSeconds(0);\n      morningBusyEnd.setFullYear(inputDate.getFullYear());\n      nightBusyStart = new Date();\n      nightBusyStart.setDate(curDateDay);\n      nightBusyStart.setHours(20);\n      nightBusyStart.setMinutes(0);\n      nightBusyStart.setSeconds(0);\n      nightBusyStart.setFullYear(inputDate.getFullYear());\n      nightBusyEnd = new Date();\n      nightBusyEnd.setDate(curDateDay);\n      nightBusyEnd.setHours(20);\n      nightBusyEnd.setMinutes(30);\n      nightBusyEnd.setSeconds(0);\n      nightBusyEnd.setFullYear(inputDate.getFullYear()); // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n      // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n\n      var morningBusyStart_formatted = {\n        date: morningBusyStart\n      };\n      var morningBusyEnd_formatted = {\n        date: morningBusyEnd\n      };\n      var nightBusyStart_formatted = {\n        date: nightBusyStart\n      };\n      var nightBusyEnd_formatted = {\n        date: nightBusyEnd\n      };\n      allStartTimes.push(morningBusyStart_formatted);\n      allEndTimes.push(morningBusyEnd_formatted);\n      allStartTimes.push(nightBusyStart_formatted);\n      allEndTimes.push(nightBusyEnd_formatted);\n      timecombo = [morningBusyStart, morningBusyEnd];\n      busyBlocksToAdd.push(timecombo);\n    } // Format in ISO\n\n\n    inputDate = inputDate.toISOString();\n    inputDate2 = inputDate2.toISOString(); //appendPre(\"Start date: \" + inputDate + \" end date: \" + inputDate2);\n\n    return freeRequest = gapi.client.calendar.freebusy.query({\n      items: inputCals,\n      // 8 am EST to 6 pm EST\n      // timeMin: \"2020-12-07T05:00:00-00:00\",\n      // timeMax: \"2020-12-07T23:00:00-00:00\",\n      // timeMin: \"2020-12-21T05:00:00.000Z\",\n      // timeMax: \"2020-12-21T23:00:00.000Z\",\n      timeMin: inputDate5,\n      timeMax: inputDate6,\n      timeZone: \"-0500\"\n    }).then(function (response) {\n      console.log(\"Frebusy response: \", response);\n      console.log(\"Frebusy response2: \", response.result); // console.log(\"Frebusy response3: \", response.result.calendars[\"evan@wgny.co\"].busy[0]);\n\n      console.log(\"array length: \", inputCals.length);\n\n      for (k = 0; k < inputCals.length; k++) {\n        var curCal = inputCals[k].id;\n        console.log(\"Current calendar: \", curCal);\n        console.log(\"Iteration: k = \" + k);\n        var busyTimes = response.result.calendars[curCal].busy;\n\n        for (i = 0; i < busyTimes.length; i++) {\n          var busyBlock = busyTimes[i];\n          console.log(\"Busy block for \" + curCal, busyBlock);\n          var startTime = busyBlock.start;\n          var endTime = busyBlock.end;\n          var data = {\n            date: startTime\n          };\n          var data2 = {\n            date: endTime\n          };\n          allStartTimes.push(data);\n          allEndTimes.push(data2); // if startime - endtime greater than 6 hours ignore it (i.e. OOO)\n        } // for each day in between input dates, add event\n        // day1 8am 830am, 8pm to day2 8am\n\n      } // I think .then(function(response)) adds the delay which is why it didn't work before\n\n\n      consolidateAllBusyTimes();\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Selected calendars: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: props.selectedCalendars.map((cal, index, originalArray) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: cal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"hi \", format(props.startDate, \"MM-dd-yyyy\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","CalendarOutput","props","hi","startDate","console","log","fetchFreeBusy","inputDate","length","Date","setHours","setMinutes","setSeconds","inputDate2","document","getElementById","value","getHours","inputDate5","toISOString","inputDate6","start","getDate","end","appendPre","diff","x","startdate","day","curDateDay","morningBusyStart","setDate","setFullYear","getFullYear","morningBusyEnd","nightBusyStart","nightBusyEnd","morningBusyStart_formatted","date","morningBusyEnd_formatted","nightBusyStart_formatted","nightBusyEnd_formatted","allStartTimes","push","allEndTimes","timecombo","busyBlocksToAdd","freeRequest","gapi","client","calendar","freebusy","query","items","inputCals","timeMin","timeMax","timeZone","then","response","result","k","curCal","id","busyTimes","calendars","busy","i","busyBlock","startTime","endTime","data","data2","consolidateAllBusyTimes","err","error","selectedCalendars","map","cal","index","originalArray"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from 'react';\nimport Calendar from './Calendar.js'\nimport format from \"date-fns/format\";\n\nconst CalendarOutput = (props) => {\n    const hi = props.startDate\n    console.log(typeof hi);\n    // format(props.startDate, \"MM-dd-yyyy\")\n\n    const fetchFreeBusy = () => {\n        // Gets input date from datebox\n        inputDate = props.startDate;\n      \n        if (inputDate.length < 2) {\n          console.log(\"input is less than 2, default to Today as input date\");\n          inputDate = new Date();\n      \n          inputDate.setHours(8);\n          inputDate.setMinutes(0);\n          inputDate.setSeconds(0);\n        }\n        inputDate = new Date(inputDate);\n      \n        inputDate2 = document.getElementById('endDateinput').value;\n      \n        if (inputDate2.length > 2) {\n          // This means we have an end date\n          inputDate2 = new Date(inputDate2);\n          inputDate2.setHours(inputDate2.getHours()+20);\n      \n          //document.getElementById('freetimesTitle2').innerHTML = inputDate2;\n        } else {\n          // This means we only want a singular date, so make inputDate2 the same as inputDate and add hours\n          inputDate2 = new Date(inputDate);\n          inputDate2.setHours(inputDate.getHours()+24);\n      \n        }\n      \n        // document.getElementById('freetimesTitle').innerHTML = inputDate.toISOString();\n        // document.getElementById('freetimesTitle2').innerHTML = inputDate2.toISOString();\n        inputDate5 = inputDate.toISOString();\n        inputDate6 = inputDate2.toISOString();\n      \n        start = inputDate.getDate()\n        end = inputDate2.getDate()\n        appendPre(\"start \" + start + \" end \" + end)\n        diff = end - start;\n        appendPre(\"diff: \" + diff)\n        //\n        // appendPre(\"Add these to list of all time blocks\")\n      \n        // for each day in between input dates, add event\n        // day1 8am 830am, 8pm to day2 8am\n        for (x=0; x < diff; x++){\n          startdate = inputDate\n      \n          day = startdate.getDate()\n      \n          curDateDay = day + x\n      \n          //appendPre(curDateDay)\n          morningBusyStart = new Date()\n          morningBusyStart.setDate(curDateDay)\n          morningBusyStart.setHours(8)\n          morningBusyStart.setMinutes(0)\n          morningBusyStart.setSeconds(0)\n          morningBusyStart.setFullYear(inputDate.getFullYear())\n      \n          morningBusyEnd = new Date()\n          morningBusyEnd.setDate(curDateDay)\n          morningBusyEnd.setHours(8)\n          morningBusyEnd.setMinutes(30)\n          morningBusyEnd.setSeconds(0)\n          morningBusyEnd.setFullYear(inputDate.getFullYear())\n      \n      \n          nightBusyStart = new Date()\n          nightBusyStart.setDate(curDateDay)\n          nightBusyStart.setHours(20)\n          nightBusyStart.setMinutes(0)\n          nightBusyStart.setSeconds(0)\n          nightBusyStart.setFullYear(inputDate.getFullYear())\n      \n          nightBusyEnd = new Date()\n          nightBusyEnd.setDate(curDateDay)\n          nightBusyEnd.setHours(20)\n          nightBusyEnd.setMinutes(30)\n          nightBusyEnd.setSeconds(0)\n          nightBusyEnd.setFullYear(inputDate.getFullYear())\n      \n          // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n          // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n          var morningBusyStart_formatted = {date: morningBusyStart};\n          var morningBusyEnd_formatted = {date: morningBusyEnd};\n      \n          var nightBusyStart_formatted = {date: nightBusyStart};\n          var nightBusyEnd_formatted = {date: nightBusyEnd};\n      \n          allStartTimes.push(morningBusyStart_formatted);\n          allEndTimes.push(morningBusyEnd_formatted);\n      \n          allStartTimes.push(nightBusyStart_formatted);\n          allEndTimes.push(nightBusyEnd_formatted);\n      \n          timecombo = [morningBusyStart, morningBusyEnd];\n          busyBlocksToAdd.push(timecombo);\n      \n        }\n        // Format in ISO\n        inputDate = inputDate.toISOString();\n        inputDate2 = inputDate2.toISOString();\n      \n        //appendPre(\"Start date: \" + inputDate + \" end date: \" + inputDate2);\n      \n        return freeRequest = gapi.client.calendar.freebusy.query({\n      \n              items: inputCals,\n              // 8 am EST to 6 pm EST\n              // timeMin: \"2020-12-07T05:00:00-00:00\",\n              // timeMax: \"2020-12-07T23:00:00-00:00\",\n              // timeMin: \"2020-12-21T05:00:00.000Z\",\n              // timeMax: \"2020-12-21T23:00:00.000Z\",\n              timeMin: inputDate5,\n              timeMax: inputDate6,\n              timeZone: \"-0500\",\n          })\n      \n      \n              .then(function(response) {\n                console.log(\"Frebusy response: \", response);\n                console.log(\"Frebusy response2: \", response.result);\n                // console.log(\"Frebusy response3: \", response.result.calendars[\"evan@wgny.co\"].busy[0]);\n                console.log(\"array length: \", inputCals.length);\n      \n      \n                for (k = 0; k < inputCals.length; k++) {\n                  var curCal = inputCals[k].id;\n                  console.log(\"Current calendar: \", curCal);\n                  console.log(\"Iteration: k = \" + k)\n      \n                  var busyTimes = response.result.calendars[curCal].busy;\n      \n                  for (i = 0; i < busyTimes.length; i++){\n                    var busyBlock = busyTimes[i];\n                    console.log(\"Busy block for \" + curCal, busyBlock);\n      \n                    var startTime = busyBlock.start;\n                    var endTime = busyBlock.end;\n      \n                    var data = {date: startTime};\n                    var data2 = {date: endTime};\n      \n                    allStartTimes.push(data);\n                    allEndTimes.push(data2);\n      \n                    // if startime - endtime greater than 6 hours ignore it (i.e. OOO)\n                  }\n      \n                  // for each day in between input dates, add event\n                  // day1 8am 830am, 8pm to day2 8am\n                }\n      \n                // I think .then(function(response)) adds the delay which is why it didn't work before\n                consolidateAllBusyTimes();\n      \n              },\n              function(err) { console.error(\"Execute error\", err); });\n      }\n      \n\n\n\n\n\n     return (\n    <div className=\"todo-container\">\n    <h4>Selected calendars: </h4>\n    <br />\n\n    <ul className='todo-list'>\n    {\n        props.selectedCalendars.map((cal, index, originalArray) => {\n            return (\n                <li>{cal}</li>\n            )\n        })\n    }\n    </ul>\n    <h2>hi {format(props.startDate, \"MM-dd-yyyy\")}</h2>\n\n    </div>\n\n     );\n}\n\nexport default CalendarOutput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}