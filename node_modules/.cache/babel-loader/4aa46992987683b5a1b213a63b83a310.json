{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/FreeTimeFinder.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { about } from '../../portfolio';\nimport { ftf } from '../../portfolio';\nimport './FreeTimeFinder.css';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport CalendarList from \"./CalendarList\";\nimport CalendarOutput from \"./CalendarOutput\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport format from \"date-fns/format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FreeTimeFinder = () => {\n  _s();\n\n  const {\n    title,\n    description,\n    subhead,\n    socidal\n  } = ftf;\n  const [profile, setProfile] = useState(null);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendars, setSelectedCalendars] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const myvar = \"yoo\";\n  const clientId = '501334517326-6umils6sm37ai65fgh1v2r83s9ggefkg.apps.googleusercontent.com';\n  const API_KEY = 'AIzaSyARUa77-dQ96I7e2tRCHCQexJcmUOEW9ZI';\n  const DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  const SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        apiKey: API_KEY,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n    };\n\n    gapi.load('client:auth2', initClient);\n  });\n\n  const onSuccess = res => {\n    setProfile(res.profileObj);\n    getCalendarIDs();\n  };\n\n  const onFailure = err => {\n    console.log('failed', err);\n  };\n\n  const logOut = () => {\n    setProfile(null);\n  };\n\n  const getCalendarIDs = () => {\n    return gapi.client.calendar.calendarList.list({}).then(function (response) {\n      localStorage.clear(); // Handle the results here (response.result has the parsed body).\n\n      console.log(\"Response\", response);\n      console.log(\"YEEEET\", response.result.items[0].id);\n      var cals = response.result.items;\n      setCalendars(cals);\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"about__role\",\n      children: [subhead, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"about__desc\",\n      children: description && description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.imageUrl,\n        alt: \"user image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email Address: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"checkboxes\",\n        children: \" Your calendars: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CalendarList, {\n        calendars: calendars,\n        setCalendars: setCalendars,\n        selectedCalendars: selectedCalendars,\n        setSelectedCalendars: setSelectedCalendars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), \"Start date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => setStartDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), \"End Date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => setEndDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CalendarOutput, {\n        selectedCalendars: selectedCalendars,\n        startDate: startDate,\n        endDate: endDate,\n        myvar: myvar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogout, {\n        clientId: clientId,\n        buttonText: \"Log out\",\n        onLogoutSuccess: logOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Sign in with Google\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FreeTimeFinder, \"LikEZq9lbefqedc9KP/mg/49/J8=\");\n\n_c = FreeTimeFinder;\nexport default FreeTimeFinder; // Fetches calendar IDs, creates checkboxes and adds event listener\n// called on site load\n\nfunction test() {}\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeTimeFinder\");","map":{"version":3,"names":["React","axios","useState","useEffect","GitHubIcon","LinkedInIcon","about","ftf","GoogleLogin","GoogleLogout","gapi","CalendarList","CalendarOutput","DatePicker","format","FreeTimeFinder","title","description","subhead","socidal","profile","setProfile","calendars","setCalendars","selectedCalendars","setSelectedCalendars","startDate","setStartDate","Date","endDate","setEndDate","myvar","clientId","API_KEY","DISCOVERY_DOCS","SCOPES","initClient","client","init","apiKey","discoveryDocs","scope","load","onSuccess","res","profileObj","getCalendarIDs","onFailure","err","console","log","logOut","calendar","calendarList","list","then","response","localStorage","clear","result","items","id","cals","error","imageUrl","name","email","date","test"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/FreeTimeFinder.js"],"sourcesContent":["import React from \"react\"\nimport axios from \"axios\";\nimport { useState, useEffect} from 'react'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport { ftf } from '../../portfolio'\nimport './FreeTimeFinder.css'\n\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { gapi } from 'gapi-script';\n\nimport CalendarList from \"./CalendarList\";\nimport CalendarOutput from \"./CalendarOutput\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport format from \"date-fns/format\";\n\nconst FreeTimeFinder = () => {\n  const { title, description, subhead, socidal } = ftf\n\n  const [ profile, setProfile ] = useState(null);\n\n  const [ calendars, setCalendars] = useState([]);\n  const [ selectedCalendars, setSelectedCalendars] = useState([]);\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n    const myvar = \"yoo\";\n\n\n\n  const clientId = '501334517326-6umils6sm37ai65fgh1v2r83s9ggefkg.apps.googleusercontent.com';\n  const API_KEY = 'AIzaSyARUa77-dQ96I7e2tRCHCQexJcmUOEW9ZI';\n  const DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  const SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\n  useEffect(() => {\n    const initClient = () => {\n        gapi.client.init({\n            clientId: clientId,\n            apiKey: API_KEY,\n            discoveryDocs: DISCOVERY_DOCS,\n            scope: SCOPES\n        });\n    };\n    gapi.load('client:auth2', initClient);\n  });\n\n  const onSuccess = (res) => {\n      setProfile(res.profileObj);\n      getCalendarIDs();\n  };\n\n  const onFailure = (err) => {\n      console.log('failed', err);\n  };\n\n  const logOut = () => {\n      setProfile(null);\n  };\n\n  const getCalendarIDs = () => {\n    return gapi.client.calendar.calendarList.list({})\n        .then(function(response) {\n          localStorage.clear();\n  \n          // Handle the results here (response.result has the parsed body).\n          console.log(\"Response\", response);\n          console.log(\"YEEEET\", response.result.items[0].id);\n\n          var cals = response.result.items\n          setCalendars(cals);\n      },\n      function(err) { console.error(\"Execute error\", err); });\n  }\n     \n\n\n  return (\n    \n    <div className='about center'>\n\n      <h1> {title} </h1>\n      <h2 className='about__role'>{subhead} </h2>\n      <p className='about__desc'>{description && description}</p>\n\n      <br />\n      <br />\n      <br />\n      {profile ? (\n          <div>\n              <img src={profile.imageUrl} alt=\"user image\" />\n              <h3>User Logged in</h3>\n              <p>Name: {profile.name}</p>\n              <p>Email Address: {profile.email}</p>\n              <br />\n              <br />\n\n              <ul id=\"checkboxes\"> Your calendars: </ul>\n\n             {/* Create checkboxes */}\n              <CalendarList \n              calendars = {calendars}\n              setCalendars={setCalendars}\n              selectedCalendars={selectedCalendars}\n              setSelectedCalendars={setSelectedCalendars}\n              />\n\n            {/* create datepicker objects */}\n            <br />\n            Start date:\n            <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n            <br />\n            End Date:\n            <DatePicker selected={endDate} onChange={(date) => setEndDate(date)} />\n            <br />\n            <br />\n            <CalendarOutput selectedCalendars={selectedCalendars} startDate={startDate} endDate={endDate} myvar={myvar}/>\n            <br />\n\n\n              <br />\n              <GoogleLogout clientId={clientId} buttonText=\"Log out\" onLogoutSuccess={logOut} />\n          </div>\n      ) : (\n          <GoogleLogin\n              clientId={clientId}\n              buttonText=\"Sign in with Google\"\n              onSuccess={onSuccess}\n              onFailure={onFailure}\n              cookiePolicy={'single_host_origin'}\n              isSignedIn={true}\n          />\n      )}\n\n    </div>\n  )\n}\n\nexport default FreeTimeFinder\n\n\n// Fetches calendar IDs, creates checkboxes and adds event listener\n// called on site load\nfunction test() {\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}