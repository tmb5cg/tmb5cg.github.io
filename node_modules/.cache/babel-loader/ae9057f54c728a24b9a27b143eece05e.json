{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = props => {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handleSelection = () => {\n    setIsSelected(!isSelected);\n    updateSelectedCalendars();\n    console.log(props.selectedCalendars);\n  };\n\n  const updateSelectedCalendars = () => {\n    const fruitsIds = props.selectedCalendars;\n    props.setSelectedCalendars(props.calendars);\n    console.log(props.selectedCalendars); // this.setState({fruitsIds: fruitsIds.contains(id) ? fruitsIds.filter(i => i != id) : [...fruitsIds, id] })\n  }; //    }\n  //     props.setSelectedCalendars(\n  //         props.calendars.map( item => {\n  //             if (item.id === props.calendar.id){\n  //                 // const temp = item\n  //                 item.isSelected = isSelected\n  //                 return {\n  //                     item\n  //                 }\n  //             }\n  //             return item;\n  //         }   \n  //         )\n  //     )\n  // }\n\n\n  const deleteHandler = () => {\n    console.log(\"odk\");\n  };\n\n  const completeHandler = () => {\n    console.log(\"checked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendarHolder\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: props.isSelected ? 'calendarItemSelected' : 'calendarItem',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: props.calendar.id,\n        name: props.calendar.id,\n        value: props.title,\n        checked: isSelected,\n        onChange: handleSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","props","isSelected","setIsSelected","handleSelection","updateSelectedCalendars","console","log","selectedCalendars","fruitsIds","setSelectedCalendars","calendars","deleteHandler","completeHandler","calendar","id","title"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/Calendar.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect} from 'react'\n\n\nconst Calendar = (props) => {\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    const handleSelection = () => {\n        setIsSelected(!isSelected);\n        updateSelectedCalendars()\n        console.log(props.selectedCalendars);\n    }\n\n    const updateSelectedCalendars = () => {\n\n        const fruitsIds = props.selectedCalendars;\n        props.setSelectedCalendars(props.calendars)\n        console.log(props.selectedCalendars);\n        // this.setState({fruitsIds: fruitsIds.contains(id) ? fruitsIds.filter(i => i != id) : [...fruitsIds, id] })\n\n    }\n    //    }\n    //     props.setSelectedCalendars(\n\n    //         props.calendars.map( item => {\n    //             if (item.id === props.calendar.id){\n\n    //                 // const temp = item\n    //                 item.isSelected = isSelected\n    //                 return {\n    //                     item\n    //                 }\n    //             }\n    //             return item;\n    //         }   \n    //         )\n    //     )\n    // }\n\n    const deleteHandler = () => {\n        console.log(\"odk\")\n    }\n\n    const completeHandler = () => {\n        console.log(\"checked\")\n    }\n    return (\n        <div className=\"calendarHolder\">\n            <li className={props.isSelected ? 'calendarItemSelected' : 'calendarItem'}>\n                <input\n                type=\"checkbox\"\n                id={props.calendar.id}\n                name={props.calendar.id}\n                value={props.title}\n                checked={isSelected}\n                onChange={handleSelection}\n                /> \n                {props.title}\n            </li>\n        </div>\n    );\n}; \n\nexport default Calendar; "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMM,eAAe,GAAG,MAAM;IAC1BD,aAAa,CAAC,CAACD,UAAF,CAAb;IACAG,uBAAuB;IACvBC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,iBAAlB;EACH,CAJD;;EAMA,MAAMH,uBAAuB,GAAG,MAAM;IAElC,MAAMI,SAAS,GAAGR,KAAK,CAACO,iBAAxB;IACAP,KAAK,CAACS,oBAAN,CAA2BT,KAAK,CAACU,SAAjC;IACAL,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,iBAAlB,EAJkC,CAKlC;EAEH,CAPD,CAVwB,CAkBxB;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMI,aAAa,GAAG,MAAM;IACxBN,OAAO,CAACC,GAAR,CAAY,KAAZ;EACH,CAFD;;EAIA,MAAMM,eAAe,GAAG,MAAM;IAC1BP,OAAO,CAACC,GAAR,CAAY,SAAZ;EACH,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAI,SAAS,EAAEN,KAAK,CAACC,UAAN,GAAmB,sBAAnB,GAA4C,cAA3D;MAAA,wBACI;QACA,IAAI,EAAC,UADL;QAEA,EAAE,EAAED,KAAK,CAACa,QAAN,CAAeC,EAFnB;QAGA,IAAI,EAAEd,KAAK,CAACa,QAAN,CAAeC,EAHrB;QAIA,KAAK,EAAEd,KAAK,CAACe,KAJb;QAKA,OAAO,EAAEd,UALT;QAMA,QAAQ,EAAEE;MANV;QAAA;QAAA;QAAA;MAAA,QADJ,EASKH,KAAK,CAACe,KATX;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CA1DD;;GAAMhB,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}