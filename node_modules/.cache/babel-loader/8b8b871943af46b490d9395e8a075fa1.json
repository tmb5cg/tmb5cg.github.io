{"ast":null,"code":"var _jsxFileName = \"/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js\";\nimport React from 'react';\nimport Calendar from './Calendar.js';\nimport format from \"date-fns/format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarOutput = props => {\n  const allStartTimes = [];\n  const allEndTimes = [];\n  const busyBlocksToAdd = [];\n\n  const fetchTest = () => {\n    // Format start date to 8am\n    var start = new Date(props.startDate);\n    start.setHours(8);\n    start.setMinutes(0);\n    start.setSeconds(0);\n    start = start.toISOString(); // Format end date to 8 pm\n\n    var end = new Date(props.startDate);\n    end.setHours(20);\n    end.setMinutes(0);\n    end.setSeconds(0);\n    end = end.toISOString();\n    console.log(start);\n    console.log(end); // Build request body\n\n    const request = {};\n    request.timeMin = start;\n    request.timeMax = end;\n    request.timeZone = \"EST\"; // Create calendars object\n\n    let cals = [];\n\n    for (let i = 0; i < props.selectedCalendars.length; i++) {\n      let calObj = {};\n      calObj.id = props.selectedCalendars[i];\n      cals.push(calObj);\n    }\n\n    request.items = cals;\n    let num_days = props.endDate.getDate() - props.startDate.getDate(); // for each day in between input dates, add event\n    // day1 8am 830am, 8pm to day2 8am\n\n    for (let x = 0; x < num_days; x++) {\n      day = props.startDate.getDate();\n      curDateDay = day + x;\n      inputDate = props.startDate; //appendPre(curDateDay)\n\n      morningBusyStart = new Date();\n      morningBusyStart.setDate(curDateDay);\n      morningBusyStart.setHours(8);\n      morningBusyStart.setMinutes(0);\n      morningBusyStart.setSeconds(0);\n      morningBusyStart.setFullYear(inputDate.getFullYear());\n      morningBusyEnd = new Date();\n      morningBusyEnd.setDate(curDateDay);\n      morningBusyEnd.setHours(8);\n      morningBusyEnd.setMinutes(30);\n      morningBusyEnd.setSeconds(0);\n      morningBusyEnd.setFullYear(inputDate.getFullYear());\n      nightBusyStart = new Date();\n      nightBusyStart.setDate(curDateDay);\n      nightBusyStart.setHours(20);\n      nightBusyStart.setMinutes(0);\n      nightBusyStart.setSeconds(0);\n      nightBusyStart.setFullYear(inputDate.getFullYear());\n      nightBusyEnd = new Date();\n      nightBusyEnd.setDate(curDateDay);\n      nightBusyEnd.setHours(20);\n      nightBusyEnd.setMinutes(30);\n      nightBusyEnd.setSeconds(0);\n      nightBusyEnd.setFullYear(inputDate.getFullYear()); // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n      // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n\n      var morningBusyStart_formatted = {\n        date: morningBusyStart\n      };\n      var morningBusyEnd_formatted = {\n        date: morningBusyEnd\n      };\n      var nightBusyStart_formatted = {\n        date: nightBusyStart\n      };\n      var nightBusyEnd_formatted = {\n        date: nightBusyEnd\n      };\n      allStartTimes.push(morningBusyStart_formatted);\n      allEndTimes.push(morningBusyEnd_formatted);\n      allStartTimes.push(nightBusyStart_formatted);\n      allEndTimes.push(nightBusyEnd_formatted);\n      timecombo = [morningBusyStart, morningBusyEnd];\n      busyBlocksToAdd.push(timecombo);\n    }\n\n    return freeRequest = gapi.client.calendar.freebusy.query(request).then(function (response) {\n      console.log(\"Frebusy response: \", response);\n      console.log(\"Frebusy response2: \", response.result);\n\n      for (let k = 0; k < props.selectedCalendars.length; k++) {\n        var curCal = props.selectedCalendars[k];\n        console.log(\"Current calendar: \", curCal);\n        console.log(\"Iteration: k = \" + k);\n        var busyTimes = response.result.calendars[curCal].busy;\n\n        for (let i = 0; i < busyTimes.length; i++) {\n          var busyBlock = busyTimes[i];\n          console.log(\"Busy block for \" + curCal, busyBlock);\n          var startTime = busyBlock.start;\n          var endTime = busyBlock.end;\n          var data = {\n            date: startTime\n          };\n          var data2 = {\n            date: endTime\n          };\n          allStartTimes.push(data);\n          allEndTimes.push(data2);\n        }\n      } //   consolidateAllBusyTimes();\n\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  };\n\n  const fetchFreeBusy = () => {\n    inputDate = props.startDate;\n\n    if (inputDate.length < 2) {\n      console.log(\"input is less than 2, default to Today as input date\");\n      inputDate = new Date();\n      inputDate.setHours(8);\n      inputDate.setMinutes(0);\n      inputDate.setSeconds(0);\n    }\n\n    inputDate = new Date(inputDate);\n    inputDate2 = props.endDate;\n\n    if (inputDate2.length > 2) {\n      inputDate2 = new Date(inputDate2);\n      inputDate2.setHours(inputDate2.getHours() + 20);\n    } else {\n      inputDate2 = new Date(inputDate);\n      inputDate2.setHours(inputDate.getHours() + 24);\n    }\n\n    inputDate5 = inputDate.toISOString();\n    inputDate6 = inputDate2.toISOString();\n    start = inputDate.getDate();\n    end = inputDate2.getDate();\n    console.log(\"start \" + start + \" end \" + end);\n    diff = end - start;\n    console.log(\"diff: \" + diff);\n\n    for (let x = 0; x < diff; x++) {\n      startdate = inputDate;\n      day = startdate.getDate();\n      curDateDay = day + x; //appendPre(curDateDay)\n\n      morningBusyStart = new Date();\n      morningBusyStart.setDate(curDateDay);\n      morningBusyStart.setHours(8);\n      morningBusyStart.setMinutes(0);\n      morningBusyStart.setSeconds(0);\n      morningBusyStart.setFullYear(inputDate.getFullYear());\n      morningBusyEnd = new Date();\n      morningBusyEnd.setDate(curDateDay);\n      morningBusyEnd.setHours(8);\n      morningBusyEnd.setMinutes(30);\n      morningBusyEnd.setSeconds(0);\n      morningBusyEnd.setFullYear(inputDate.getFullYear());\n      nightBusyStart = new Date();\n      nightBusyStart.setDate(curDateDay);\n      nightBusyStart.setHours(20);\n      nightBusyStart.setMinutes(0);\n      nightBusyStart.setSeconds(0);\n      nightBusyStart.setFullYear(inputDate.getFullYear());\n      nightBusyEnd = new Date();\n      nightBusyEnd.setDate(curDateDay);\n      nightBusyEnd.setHours(20);\n      nightBusyEnd.setMinutes(30);\n      nightBusyEnd.setSeconds(0);\n      nightBusyEnd.setFullYear(inputDate.getFullYear()); // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n      // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n\n      var morningBusyStart_formatted = {\n        date: morningBusyStart\n      };\n      var morningBusyEnd_formatted = {\n        date: morningBusyEnd\n      };\n      var nightBusyStart_formatted = {\n        date: nightBusyStart\n      };\n      var nightBusyEnd_formatted = {\n        date: nightBusyEnd\n      };\n      allStartTimes.push(morningBusyStart_formatted);\n      allEndTimes.push(morningBusyEnd_formatted);\n      allStartTimes.push(nightBusyStart_formatted);\n      allEndTimes.push(nightBusyEnd_formatted);\n      timecombo = [morningBusyStart, morningBusyEnd];\n      busyBlocksToAdd.push(timecombo);\n    } // Format in ISO\n\n\n    inputDate = inputDate.toISOString();\n    inputDate2 = inputDate2.toISOString();\n    return freeRequest = gapi.client.calendar.freebusy.query({\n      items: inputCals,\n      timeMin: inputDate5,\n      timeMax: inputDate6,\n      timeZone: \"-0500\"\n    }).then(function (response) {\n      console.log(\"Frebusy response: \", response);\n      console.log(\"Frebusy response2: \", response.result);\n      console.log(\"array length: \", inputCals.length); // for (k = 0; k < inputCals.length; k++) {\n      //   var curCal = inputCals[k].id;\n      //   console.log(\"Current calendar: \", curCal);\n      //   console.log(\"Iteration: k = \" + k)\n      //   var busyTimes = response.result.calendars[curCal].busy;\n      //   for (i = 0; i < busyTimes.length; i++){\n      //     var busyBlock = busyTimes[i];\n      //     console.log(\"Busy block for \" + curCal, busyBlock);\n      //     var startTime = busyBlock.start;\n      //     var endTime = busyBlock.end;\n      //     var data = {date: startTime};\n      //     var data2 = {date: endTime};\n      //     allStartTimes.push(data);\n      //     allEndTimes.push(data2);\n      //     }\n      // }\n      // consolidateAllBusyTimes();\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  }; //   fetchTest()\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Selected calendars: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: props.selectedCalendars.map((cal, index, originalArray) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: cal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"hi \", format(props.startDate, \"MM-dd-yyyy\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTest,\n      children: \" fetch here \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CalendarOutput;\nexport default CalendarOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarOutput\");","map":{"version":3,"names":["React","Calendar","format","CalendarOutput","props","allStartTimes","allEndTimes","busyBlocksToAdd","fetchTest","start","Date","startDate","setHours","setMinutes","setSeconds","toISOString","end","console","log","request","timeMin","timeMax","timeZone","cals","i","selectedCalendars","length","calObj","id","push","items","num_days","endDate","getDate","x","day","curDateDay","inputDate","morningBusyStart","setDate","setFullYear","getFullYear","morningBusyEnd","nightBusyStart","nightBusyEnd","morningBusyStart_formatted","date","morningBusyEnd_formatted","nightBusyStart_formatted","nightBusyEnd_formatted","timecombo","freeRequest","gapi","client","calendar","freebusy","query","then","response","result","k","curCal","busyTimes","calendars","busy","busyBlock","startTime","endTime","data","data2","err","error","fetchFreeBusy","inputDate2","getHours","inputDate5","inputDate6","diff","startdate","inputCals","map","cal","index","originalArray"],"sources":["/Users/tucker/Documents/GitHub/tmb5cg.github.io/src/components/FreeTimeFinder/CalendarOutput.js"],"sourcesContent":["import React from 'react';\nimport Calendar from './Calendar.js'\nimport format from \"date-fns/format\";\n\nconst CalendarOutput = (props) => {\n\n    const allStartTimes = [];\n    const allEndTimes = [];\n    const busyBlocksToAdd = [];\n\n    const fetchTest = () => {\n        // Format start date to 8am\n        var start = new Date(props.startDate)\n        start.setHours(8)\n        start.setMinutes(0)\n        start.setSeconds(0)\n        start = start.toISOString();\n\n        // Format end date to 8 pm\n        var end = new Date(props.startDate)\n        end.setHours(20)\n        end.setMinutes(0)\n        end.setSeconds(0)\n        end = end.toISOString();\n        \n        console.log(start)\n        console.log(end)\n\n        // Build request body\n        const request = {}\n        request.timeMin = start;\n        request.timeMax = end;\n        request.timeZone = \"EST\";\n\n        // Create calendars object\n        let cals = []\n        for (let i=0; i<props.selectedCalendars.length; i++){\n            let calObj = {}\n            calObj.id = props.selectedCalendars[i]\n            cals.push(calObj)\n        }\n\n        request.items = cals\n\n\n        let num_days = props.endDate.getDate() - props.startDate.getDate()\n\n        // for each day in between input dates, add event\n        // day1 8am 830am, 8pm to day2 8am\n        for (let x=0; x < num_days; x++){\n            day = props.startDate.getDate()\n\n            curDateDay = day + x\n            inputDate = props.startDate\n\n            //appendPre(curDateDay)\n            morningBusyStart = new Date()\n            morningBusyStart.setDate(curDateDay)\n            morningBusyStart.setHours(8)\n            morningBusyStart.setMinutes(0)\n            morningBusyStart.setSeconds(0)\n            morningBusyStart.setFullYear(inputDate.getFullYear())\n\n            morningBusyEnd = new Date()\n            morningBusyEnd.setDate(curDateDay)\n            morningBusyEnd.setHours(8)\n            morningBusyEnd.setMinutes(30)\n            morningBusyEnd.setSeconds(0)\n            morningBusyEnd.setFullYear(inputDate.getFullYear())\n\n\n            nightBusyStart = new Date()\n            nightBusyStart.setDate(curDateDay)\n            nightBusyStart.setHours(20)\n            nightBusyStart.setMinutes(0)\n            nightBusyStart.setSeconds(0)\n            nightBusyStart.setFullYear(inputDate.getFullYear())\n\n            nightBusyEnd = new Date()\n            nightBusyEnd.setDate(curDateDay)\n            nightBusyEnd.setHours(20)\n            nightBusyEnd.setMinutes(30)\n            nightBusyEnd.setSeconds(0)\n            nightBusyEnd.setFullYear(inputDate.getFullYear())\n\n            // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n            // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n            var morningBusyStart_formatted = {date: morningBusyStart};\n            var morningBusyEnd_formatted = {date: morningBusyEnd};\n\n            var nightBusyStart_formatted = {date: nightBusyStart};\n            var nightBusyEnd_formatted = {date: nightBusyEnd};\n\n            allStartTimes.push(morningBusyStart_formatted);\n            allEndTimes.push(morningBusyEnd_formatted);\n\n            allStartTimes.push(nightBusyStart_formatted);\n            allEndTimes.push(nightBusyEnd_formatted);\n\n            timecombo = [morningBusyStart, morningBusyEnd];\n            busyBlocksToAdd.push(timecombo);\n\n        }\n        return freeRequest = gapi.client.calendar.freebusy.query(request)\n      \n              .then(function(response) {\n                console.log(\"Frebusy response: \", response);\n                console.log(\"Frebusy response2: \", response.result);\n\n                for (let k = 0; k < props.selectedCalendars.length; k++) {\n                    var curCal = props.selectedCalendars[k];\n                    console.log(\"Current calendar: \", curCal);\n                    console.log(\"Iteration: k = \" + k)\n        \n                    var busyTimes = response.result.calendars[curCal].busy;\n        \n                    for (let i = 0; i < busyTimes.length; i++){\n                      var busyBlock = busyTimes[i];\n                      console.log(\"Busy block for \" + curCal, busyBlock);\n        \n                      var startTime = busyBlock.start;\n                      var endTime = busyBlock.end;\n        \n                      var data = {date: startTime};\n                      var data2 = {date: endTime};\n        \n                      allStartTimes.push(data);\n                      allEndTimes.push(data2);\n        \n                    }\n                  }\n                //   consolidateAllBusyTimes();\n              },\n              function(err) { console.error(\"Execute error\", err); });\n      }\n      \n\n    const fetchFreeBusy = () => {\n        inputDate = props.startDate;\n      \n        if (inputDate.length < 2) {\n          console.log(\"input is less than 2, default to Today as input date\");\n          inputDate = new Date();\n      \n          inputDate.setHours(8);\n          inputDate.setMinutes(0);\n          inputDate.setSeconds(0);\n        }\n        inputDate = new Date(inputDate);\n      \n        inputDate2 = props.endDate;\n      \n        if (inputDate2.length > 2) {\n          inputDate2 = new Date(inputDate2);\n          inputDate2.setHours(inputDate2.getHours()+20);\n      \n        } else {\n          inputDate2 = new Date(inputDate);\n          inputDate2.setHours(inputDate.getHours()+24);\n      \n        }\n      \n        inputDate5 = inputDate.toISOString();\n        inputDate6 = inputDate2.toISOString();\n      \n        start = inputDate.getDate()\n        end = inputDate2.getDate()\n        console.log(\"start \" + start + \" end \" + end)\n        diff = end - start;\n        console.log(\"diff: \" + diff)\n\n        for (let x=0; x < diff; x++){\n          startdate = inputDate\n      \n          day = startdate.getDate()\n      \n          curDateDay = day + x\n      \n          //appendPre(curDateDay)\n          morningBusyStart = new Date()\n          morningBusyStart.setDate(curDateDay)\n          morningBusyStart.setHours(8)\n          morningBusyStart.setMinutes(0)\n          morningBusyStart.setSeconds(0)\n          morningBusyStart.setFullYear(inputDate.getFullYear())\n      \n          morningBusyEnd = new Date()\n          morningBusyEnd.setDate(curDateDay)\n          morningBusyEnd.setHours(8)\n          morningBusyEnd.setMinutes(30)\n          morningBusyEnd.setSeconds(0)\n          morningBusyEnd.setFullYear(inputDate.getFullYear())\n      \n      \n          nightBusyStart = new Date()\n          nightBusyStart.setDate(curDateDay)\n          nightBusyStart.setHours(20)\n          nightBusyStart.setMinutes(0)\n          nightBusyStart.setSeconds(0)\n          nightBusyStart.setFullYear(inputDate.getFullYear())\n      \n          nightBusyEnd = new Date()\n          nightBusyEnd.setDate(curDateDay)\n          nightBusyEnd.setHours(20)\n          nightBusyEnd.setMinutes(30)\n          nightBusyEnd.setSeconds(0)\n          nightBusyEnd.setFullYear(inputDate.getFullYear())\n      \n          // prettyStartTime = morningBusyStart.toLocaleString('en-US', { timeZone: 'EST' });\n          // prettyEndTime = morningBusyEnd.toLocaleString('en-US', { timeZone: 'EST' });\n          var morningBusyStart_formatted = {date: morningBusyStart};\n          var morningBusyEnd_formatted = {date: morningBusyEnd};\n      \n          var nightBusyStart_formatted = {date: nightBusyStart};\n          var nightBusyEnd_formatted = {date: nightBusyEnd};\n      \n          allStartTimes.push(morningBusyStart_formatted);\n          allEndTimes.push(morningBusyEnd_formatted);\n      \n          allStartTimes.push(nightBusyStart_formatted);\n          allEndTimes.push(nightBusyEnd_formatted);\n      \n          timecombo = [morningBusyStart, morningBusyEnd];\n          busyBlocksToAdd.push(timecombo);\n      \n        }\n        // Format in ISO\n        inputDate = inputDate.toISOString();\n        inputDate2 = inputDate2.toISOString();\n            \n        return freeRequest = gapi.client.calendar.freebusy.query({\n      \n              items: inputCals,\n              timeMin: inputDate5,\n              timeMax: inputDate6,\n              timeZone: \"-0500\",\n          })\n      \n      \n              .then(function(response) {\n                console.log(\"Frebusy response: \", response);\n                console.log(\"Frebusy response2: \", response.result);\n                console.log(\"array length: \", inputCals.length);\n      \n      \n                // for (k = 0; k < inputCals.length; k++) {\n                //   var curCal = inputCals[k].id;\n                //   console.log(\"Current calendar: \", curCal);\n                //   console.log(\"Iteration: k = \" + k)\n      \n                //   var busyTimes = response.result.calendars[curCal].busy;\n      \n                //   for (i = 0; i < busyTimes.length; i++){\n                //     var busyBlock = busyTimes[i];\n                //     console.log(\"Busy block for \" + curCal, busyBlock);\n      \n                //     var startTime = busyBlock.start;\n                //     var endTime = busyBlock.end;\n      \n                //     var data = {date: startTime};\n                //     var data2 = {date: endTime};\n      \n                //     allStartTimes.push(data);\n                //     allEndTimes.push(data2);\n                //     }\n                // }\n      \n                // consolidateAllBusyTimes();\n      \n              },\n              function(err) { console.error(\"Execute error\", err); });\n      }\n      \n\n\n\n    //   fetchTest()\n\n     return (\n    <div className=\"todo-container\">\n    <h4>Selected calendars: </h4>\n    <br />\n\n    <ul className='todo-list'>\n    {\n        props.selectedCalendars.map((cal, index, originalArray) => {\n            return (\n                <li>{cal}</li>\n            )\n        })\n    }\n    </ul>\n    <h2>hi {format(props.startDate, \"MM-dd-yyyy\")}</h2>\n    <br />\n    <br />\n    <button onClick={fetchTest}> fetch here </button>\n\n    </div>\n\n     );\n}\n\nexport default CalendarOutput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}